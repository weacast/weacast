{"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/index.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":138}},"2":{"start":{"line":8,"column":10},"end":{"line":8,"column":25}},"3":{"start":{"line":10,"column":0},"end":{"line":15,"column":3}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":24}},"5":{"start":{"line":17,"column":14},"end":{"line":17,"column":33}},"6":{"start":{"line":19,"column":0},"end":{"line":27,"column":3}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":56}},"8":{"start":{"line":20,"column":49},"end":{"line":20,"column":56}},"9":{"start":{"line":21,"column":2},"end":{"line":26,"column":5}},"10":{"start":{"line":24,"column":6},"end":{"line":24,"column":26}},"11":{"start":{"line":29,"column":14},"end":{"line":29,"column":33}},"12":{"start":{"line":31,"column":0},"end":{"line":39,"column":3}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":56}},"14":{"start":{"line":32,"column":49},"end":{"line":32,"column":56}},"15":{"start":{"line":33,"column":2},"end":{"line":38,"column":5}},"16":{"start":{"line":36,"column":6},"end":{"line":36,"column":26}},"17":{"start":{"line":40,"column":0},"end":{"line":40,"column":23}},"18":{"start":{"line":42,"column":13},"end":{"line":42,"column":29}},"19":{"start":{"line":44,"column":14},"end":{"line":44,"column":44}},"20":{"start":{"line":46,"column":16},"end":{"line":46,"column":37}},"21":{"start":{"line":48,"column":17},"end":{"line":48,"column":50}},"22":{"start":{"line":50,"column":16},"end":{"line":50,"column":37}},"23":{"start":{"line":52,"column":17},"end":{"line":52,"column":50}},"24":{"start":{"line":54,"column":14},"end":{"line":54,"column":33}},"25":{"start":{"line":56,"column":15},"end":{"line":56,"column":46}},"26":{"start":{"line":58,"column":19},"end":{"line":58,"column":43}},"27":{"start":{"line":60,"column":20},"end":{"line":60,"column":56}},"28":{"start":{"line":62,"column":17},"end":{"line":62,"column":62}},"29":{"start":{"line":64,"column":17},"end":{"line":64,"column":51}},"30":{"start":{"line":66,"column":14},"end":{"line":66,"column":32}},"31":{"start":{"line":68,"column":13},"end":{"line":68,"column":45}},"32":{"start":{"line":70,"column":40},"end":{"line":70,"column":267}},"33":{"start":{"line":70,"column":69},"end":{"line":70,"column":80}},"34":{"start":{"line":70,"column":103},"end":{"line":70,"column":105}},"35":{"start":{"line":70,"column":107},"end":{"line":70,"column":228}},"36":{"start":{"line":70,"column":126},"end":{"line":70,"column":226}},"37":{"start":{"line":70,"column":149},"end":{"line":70,"column":224}},"38":{"start":{"line":70,"column":201},"end":{"line":70,"column":224}},"39":{"start":{"line":70,"column":229},"end":{"line":70,"column":250}},"40":{"start":{"line":70,"column":251},"end":{"line":70,"column":265}},"41":{"start":{"line":72,"column":39},"end":{"line":72,"column":93}},"42":{"start":{"line":74,"column":15},"end":{"line":74,"column":63}},"43":{"start":{"line":75,"column":0},"end":{"line":75,"column":40}},"44":{"start":{"line":76,"column":0},"end":{"line":76,"column":48}},"45":{"start":{"line":77,"column":0},"end":{"line":77,"column":44}},"46":{"start":{"line":78,"column":0},"end":{"line":78,"column":23}},"47":{"start":{"line":81,"column":14},"end":{"line":81,"column":58}},"48":{"start":{"line":84,"column":2},"end":{"line":84,"column":32}},"49":{"start":{"line":85,"column":2},"end":{"line":85,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":7},"end":{"line":12,"column":8}},"loc":{"start":{"line":12,"column":19},"end":{"line":14,"column":3}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":29},"end":{"line":19,"column":30}},"loc":{"start":{"line":19,"column":44},"end":{"line":27,"column":1}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":10}},"loc":{"start":{"line":23,"column":21},"end":{"line":25,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":31,"column":29},"end":{"line":31,"column":30}},"loc":{"start":{"line":31,"column":44},"end":{"line":39,"column":1}},"line":31},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":9},"end":{"line":35,"column":10}},"loc":{"start":{"line":35,"column":21},"end":{"line":37,"column":5}},"line":35},"5":{"name":"_interopRequireWildcard","decl":{"start":{"line":70,"column":9},"end":{"line":70,"column":32}},"loc":{"start":{"line":70,"column":38},"end":{"line":70,"column":269}},"line":70},"6":{"name":"_interopRequireDefault","decl":{"start":{"line":72,"column":9},"end":{"line":72,"column":31}},"loc":{"start":{"line":72,"column":37},"end":{"line":72,"column":95}},"line":72},"7":{"name":"init","decl":{"start":{"line":83,"column":9},"end":{"line":83,"column":13}},"loc":{"start":{"line":83,"column":19},"end":{"line":86,"column":1}},"line":83}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":56}},"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":56}},{"start":{"line":20,"column":2},"end":{"line":20,"column":56}}],"line":20},"1":{"loc":{"start":{"line":20,"column":6},"end":{"line":20,"column":47}},"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":23}},{"start":{"line":20,"column":27},"end":{"line":20,"column":47}}],"line":20},"2":{"loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":56}},"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":56}},{"start":{"line":32,"column":2},"end":{"line":32,"column":56}}],"line":32},"3":{"loc":{"start":{"line":32,"column":6},"end":{"line":32,"column":47}},"type":"binary-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":23}},{"start":{"line":32,"column":27},"end":{"line":32,"column":47}}],"line":32},"4":{"loc":{"start":{"line":70,"column":40},"end":{"line":70,"column":267}},"type":"if","locations":[{"start":{"line":70,"column":40},"end":{"line":70,"column":267}},{"start":{"line":70,"column":40},"end":{"line":70,"column":267}}],"line":70},"5":{"loc":{"start":{"line":70,"column":44},"end":{"line":70,"column":65}},"type":"binary-expr","locations":[{"start":{"line":70,"column":44},"end":{"line":70,"column":47}},{"start":{"line":70,"column":51},"end":{"line":70,"column":65}}],"line":70},"6":{"loc":{"start":{"line":70,"column":107},"end":{"line":70,"column":228}},"type":"if","locations":[{"start":{"line":70,"column":107},"end":{"line":70,"column":228}},{"start":{"line":70,"column":107},"end":{"line":70,"column":228}}],"line":70},"7":{"loc":{"start":{"line":70,"column":149},"end":{"line":70,"column":224}},"type":"if","locations":[{"start":{"line":70,"column":149},"end":{"line":70,"column":224}},{"start":{"line":70,"column":149},"end":{"line":70,"column":224}}],"line":70},"8":{"loc":{"start":{"line":72,"column":46},"end":{"line":72,"column":92}},"type":"cond-expr","locations":[{"start":{"line":72,"column":70},"end":{"line":72,"column":73}},{"start":{"line":72,"column":76},"end":{"line":72,"column":92}}],"line":72},"9":{"loc":{"start":{"line":72,"column":46},"end":{"line":72,"column":67}},"type":"binary-expr","locations":[{"start":{"line":72,"column":46},"end":{"line":72,"column":49}},{"start":{"line":72,"column":53},"end":{"line":72,"column":67}}],"line":72}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":4,"8":0,"9":4,"10":3,"11":1,"12":1,"13":3,"14":1,"15":2,"16":0,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":6,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":2,"49":2},"f":{"0":0,"1":4,"2":3,"3":3,"4":0,"5":1,"6":6,"7":2},"b":{"0":[0,4],"1":[4,4],"2":[1,2],"3":[3,2],"4":[1,0],"5":[1,1],"6":[0,0],"7":[0,0],"8":[1,5],"9":[6,6]},"inputSourceMap":{"version":3,"sources":["index.js"],"names":["Database","init","elements","hooks","weacast","initializeElements","initializePlugin","debug","app","configure","services"],"mappings":";;;;;;;;;;;;eAUSA,Q;;;;;;AACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;kBAIwBC,I;;AAjBxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEO,IAAIC,8BAAW,EAAEC,yBAAF,EAAf;QACEC,O,GAAAA,qB;QACAC,kB,GAAAA,kB;QAAoBC,gB,GAAAA,gB;QAGjBH,K;;;AAGZ,MAAMI,QAAQ,qBAAU,sBAAV,CAAd;;AAEe,SAASN,IAAT,CAAeO,GAAf,EAAoB;AACjCD,QAAM,sBAAN;AACAC,MAAIC,SAAJ,CAAcC,kBAAd;AACD","file":"index.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src","sourcesContent":["import makeDebug from 'debug'\nimport services from './services'\nimport initializeElements from './elements'\nimport initializePlugin from './plugin'\nimport weacast from './application'\nimport hooks from './services/elements/elements.hooks'\n\nexport let elements = { hooks }\nexport { weacast }\nexport { initializeElements, initializePlugin }\nexport { Database } from './db'\nexport * from './common'\nexport * as hooks from './hooks'\nexport * from './mixins'\n\nconst debug = makeDebug('weacast:weacast-core')\n\nexport default function init (app) {\n  debug('Initializing weacast')\n  app.configure(services)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aee5189d9f207d9d998335892e85097f27a51f2a","contentHash":"28186aab130af64b2d59e6ce592d5e66b2652da48b7594535c3814ea0f5ee690"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/db.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/db.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":53}},"2":{"start":{"line":8,"column":15},"end":{"line":8,"column":33}},"3":{"start":{"line":10,"column":14},"end":{"line":10,"column":31}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":46}},"5":{"start":{"line":14,"column":15},"end":{"line":14,"column":33}},"6":{"start":{"line":16,"column":16},"end":{"line":16,"column":48}},"7":{"start":{"line":18,"column":13},"end":{"line":18,"column":29}},"8":{"start":{"line":20,"column":14},"end":{"line":20,"column":44}},"9":{"start":{"line":22,"column":14},"end":{"line":22,"column":43}},"10":{"start":{"line":24,"column":15},"end":{"line":24,"column":46}},"11":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"12":{"start":{"line":28,"column":33},"end":{"line":28,"column":456}},"13":{"start":{"line":28,"column":64},"end":{"line":28,"column":89}},"14":{"start":{"line":28,"column":91},"end":{"line":28,"column":453}},"15":{"start":{"line":28,"column":165},"end":{"line":28,"column":263}},"16":{"start":{"line":28,"column":182},"end":{"line":28,"column":195}},"17":{"start":{"line":28,"column":209},"end":{"line":28,"column":219}},"18":{"start":{"line":28,"column":239},"end":{"line":28,"column":253}},"19":{"start":{"line":28,"column":254},"end":{"line":28,"column":261}},"20":{"start":{"line":28,"column":264},"end":{"line":28,"column":426}},"21":{"start":{"line":28,"column":281},"end":{"line":28,"column":296}},"22":{"start":{"line":28,"column":306},"end":{"line":28,"column":424}},"23":{"start":{"line":28,"column":360},"end":{"line":28,"column":380}},"24":{"start":{"line":28,"column":401},"end":{"line":28,"column":420}},"25":{"start":{"line":28,"column":429},"end":{"line":28,"column":449}},"26":{"start":{"line":30,"column":14},"end":{"line":30,"column":61}},"27":{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},"28":{"start":{"line":35,"column":6},"end":{"line":35,"column":21}},"29":{"start":{"line":36,"column":6},"end":{"line":36,"column":44}},"30":{"start":{"line":38,"column":6},"end":{"line":38,"column":107}},"31":{"start":{"line":40,"column":4},"end":{"line":40,"column":34}},"32":{"start":{"line":44,"column":4},"end":{"line":44,"column":25}},"33":{"start":{"line":48,"column":4},"end":{"line":51,"column":9}},"34":{"start":{"line":50,"column":6},"end":{"line":50,"column":18}},"35":{"start":{"line":57,"column":4},"end":{"line":57,"column":48}},"36":{"start":{"line":61,"column":4},"end":{"line":65,"column":5}},"37":{"start":{"line":64,"column":8},"end":{"line":64,"column":38}},"38":{"start":{"line":69,"column":0},"end":{"line":69,"column":28}},"39":{"start":{"line":72,"column":4},"end":{"line":72,"column":15}},"40":{"start":{"line":73,"column":4},"end":{"line":80,"column":5}},"41":{"start":{"line":75,"column":6},"end":{"line":75,"column":38}},"42":{"start":{"line":77,"column":6},"end":{"line":77,"column":58}},"43":{"start":{"line":79,"column":6},"end":{"line":79,"column":100}},"44":{"start":{"line":86,"column":26},"end":{"line":86,"column":50}},"45":{"start":{"line":87,"column":27},"end":{"line":87,"column":43}},"46":{"start":{"line":88,"column":4},"end":{"line":88,"column":128}},"47":{"start":{"line":88,"column":31},"end":{"line":88,"column":69}},"48":{"start":{"line":88,"column":74},"end":{"line":88,"column":128}},"49":{"start":{"line":90,"column":4},"end":{"line":90,"column":18}},"50":{"start":{"line":94,"column":16},"end":{"line":94,"column":20}},"51":{"start":{"line":96,"column":4},"end":{"line":120,"column":9}},"52":{"start":{"line":97,"column":6},"end":{"line":119,"column":7}},"53":{"start":{"line":99,"column":8},"end":{"line":99,"column":73}},"54":{"start":{"line":100,"column":8},"end":{"line":100,"column":77}},"55":{"start":{"line":101,"column":8},"end":{"line":101,"column":58}},"56":{"start":{"line":103,"column":8},"end":{"line":103,"column":28}},"57":{"start":{"line":104,"column":8},"end":{"line":104,"column":24}},"58":{"start":{"line":105,"column":8},"end":{"line":114,"column":9}},"59":{"start":{"line":106,"column":26},"end":{"line":106,"column":67}},"60":{"start":{"line":107,"column":10},"end":{"line":112,"column":11}},"61":{"start":{"line":107,"column":23},"end":{"line":107,"column":24}},"62":{"start":{"line":108,"column":27},"end":{"line":108,"column":37}},"63":{"start":{"line":109,"column":26},"end":{"line":109,"column":52}},"64":{"start":{"line":110,"column":12},"end":{"line":110,"column":79}},"65":{"start":{"line":111,"column":12},"end":{"line":111,"column":92}},"66":{"start":{"line":113,"column":10},"end":{"line":113,"column":64}},"67":{"start":{"line":115,"column":8},"end":{"line":115,"column":25}},"68":{"start":{"line":117,"column":8},"end":{"line":117,"column":130}},"69":{"start":{"line":118,"column":8},"end":{"line":118,"column":20}},"70":{"start":{"line":124,"column":17},"end":{"line":124,"column":21}},"71":{"start":{"line":126,"column":4},"end":{"line":145,"column":9}},"72":{"start":{"line":127,"column":6},"end":{"line":144,"column":7}},"73":{"start":{"line":128,"column":8},"end":{"line":128,"column":37}},"74":{"start":{"line":129,"column":8},"end":{"line":129,"column":64}},"75":{"start":{"line":130,"column":8},"end":{"line":130,"column":30}},"76":{"start":{"line":131,"column":8},"end":{"line":131,"column":26}},"77":{"start":{"line":132,"column":8},"end":{"line":140,"column":9}},"78":{"start":{"line":133,"column":26},"end":{"line":133,"column":66}},"79":{"start":{"line":134,"column":10},"end":{"line":136,"column":11}},"80":{"start":{"line":134,"column":23},"end":{"line":134,"column":24}},"81":{"start":{"line":135,"column":12},"end":{"line":135,"column":37}},"82":{"start":{"line":137,"column":10},"end":{"line":137,"column":31}},"83":{"start":{"line":138,"column":10},"end":{"line":138,"column":27}},"84":{"start":{"line":139,"column":10},"end":{"line":139,"column":70}},"85":{"start":{"line":142,"column":8},"end":{"line":142,"column":103}},"86":{"start":{"line":143,"column":8},"end":{"line":143,"column":20}},"87":{"start":{"line":149,"column":4},"end":{"line":149,"column":49}},"88":{"start":{"line":153,"column":4},"end":{"line":156,"column":5}},"89":{"start":{"line":155,"column":6},"end":{"line":155,"column":68}},"90":{"start":{"line":157,"column":4},"end":{"line":157,"column":39}},"91":{"start":{"line":160,"column":0},"end":{"line":160,"column":38}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":31}},"loc":{"start":{"line":26,"column":37},"end":{"line":26,"column":95}},"line":26},"1":{"name":"_asyncToGenerator","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":26}},"loc":{"start":{"line":28,"column":31},"end":{"line":28,"column":458}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":40},"end":{"line":28,"column":41}},"loc":{"start":{"line":28,"column":52},"end":{"line":28,"column":455}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":110},"end":{"line":28,"column":111}},"loc":{"start":{"line":28,"column":137},"end":{"line":28,"column":451}},"line":28},"4":{"name":"step","decl":{"start":{"line":28,"column":148},"end":{"line":28,"column":152}},"loc":{"start":{"line":28,"column":163},"end":{"line":28,"column":428}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":341},"end":{"line":28,"column":342}},"loc":{"start":{"line":28,"column":358},"end":{"line":28,"column":382}},"line":28},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":384},"end":{"line":28,"column":385}},"loc":{"start":{"line":28,"column":399},"end":{"line":28,"column":422}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":33,"column":2},"end":{"line":33,"column":3}},"loc":{"start":{"line":33,"column":19},"end":{"line":41,"column":3}},"line":33},"8":{"name":"(anonymous_8)","decl":{"start":{"line":43,"column":2},"end":{"line":43,"column":3}},"loc":{"start":{"line":43,"column":16},"end":{"line":45,"column":3}},"line":43},"9":{"name":"(anonymous_9)","decl":{"start":{"line":47,"column":2},"end":{"line":47,"column":3}},"loc":{"start":{"line":47,"column":12},"end":{"line":52,"column":3}},"line":47},"10":{"name":"(anonymous_10)","decl":{"start":{"line":48,"column":29},"end":{"line":48,"column":30}},"loc":{"start":{"line":48,"column":42},"end":{"line":51,"column":5}},"line":48},"11":{"name":"(anonymous_11)","decl":{"start":{"line":54,"column":2},"end":{"line":54,"column":3}},"loc":{"start":{"line":54,"column":15},"end":{"line":58,"column":3}},"line":54},"12":{"name":"(anonymous_12)","decl":{"start":{"line":57,"column":29},"end":{"line":57,"column":30}},"loc":{"start":{"line":57,"column":42},"end":{"line":57,"column":44}},"line":57},"13":{"name":"(anonymous_13)","decl":{"start":{"line":60,"column":2},"end":{"line":60,"column":3}},"loc":{"start":{"line":60,"column":21},"end":{"line":66,"column":3}},"line":60},"14":{"name":"(anonymous_14)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":19},"end":{"line":81,"column":3}},"line":71},"15":{"name":"(anonymous_15)","decl":{"start":{"line":83,"column":2},"end":{"line":83,"column":3}},"loc":{"start":{"line":83,"column":20},"end":{"line":91,"column":3}},"line":83},"16":{"name":"(anonymous_16)","decl":{"start":{"line":93,"column":2},"end":{"line":93,"column":3}},"loc":{"start":{"line":93,"column":12},"end":{"line":121,"column":3}},"line":93},"17":{"name":"(anonymous_17)","decl":{"start":{"line":96,"column":29},"end":{"line":96,"column":30}},"loc":{"start":{"line":96,"column":42},"end":{"line":120,"column":5}},"line":96},"18":{"name":"(anonymous_18)","decl":{"start":{"line":123,"column":2},"end":{"line":123,"column":3}},"loc":{"start":{"line":123,"column":15},"end":{"line":146,"column":3}},"line":123},"19":{"name":"(anonymous_19)","decl":{"start":{"line":126,"column":29},"end":{"line":126,"column":30}},"loc":{"start":{"line":126,"column":42},"end":{"line":145,"column":5}},"line":126},"20":{"name":"(anonymous_20)","decl":{"start":{"line":148,"column":2},"end":{"line":148,"column":3}},"loc":{"start":{"line":148,"column":13},"end":{"line":150,"column":3}},"line":148},"21":{"name":"(anonymous_21)","decl":{"start":{"line":152,"column":2},"end":{"line":152,"column":3}},"loc":{"start":{"line":152,"column":27},"end":{"line":158,"column":3}},"line":152}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":46},"end":{"line":26,"column":92}},"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}],"line":26},"1":{"loc":{"start":{"line":26,"column":46},"end":{"line":26,"column":67}},"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}],"line":26},"2":{"loc":{"start":{"line":28,"column":264},"end":{"line":28,"column":426}},"type":"if","locations":[{"start":{"line":28,"column":264},"end":{"line":28,"column":426}},{"start":{"line":28,"column":264},"end":{"line":28,"column":426}}],"line":28},"3":{"loc":{"start":{"line":61,"column":4},"end":{"line":65,"column":5}},"type":"switch","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":21}},{"start":{"line":63,"column":6},"end":{"line":64,"column":38}}],"line":61},"4":{"loc":{"start":{"line":77,"column":26},"end":{"line":77,"column":57}},"type":"binary-expr","locations":[{"start":{"line":77,"column":26},"end":{"line":77,"column":51}},{"start":{"line":77,"column":55},"end":{"line":77,"column":57}}],"line":77},"5":{"loc":{"start":{"line":88,"column":4},"end":{"line":88,"column":128}},"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":128}},{"start":{"line":88,"column":4},"end":{"line":88,"column":128}}],"line":88},"6":{"loc":{"start":{"line":105,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":114,"column":9}},{"start":{"line":105,"column":8},"end":{"line":114,"column":9}}],"line":105},"7":{"loc":{"start":{"line":132,"column":8},"end":{"line":140,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":140,"column":9}},{"start":{"line":132,"column":8},"end":{"line":140,"column":9}}],"line":132},"8":{"loc":{"start":{"line":149,"column":11},"end":{"line":149,"column":48}},"type":"cond-expr","locations":[{"start":{"line":149,"column":20},"end":{"line":149,"column":37}},{"start":{"line":149,"column":40},"end":{"line":149,"column":48}}],"line":149},"9":{"loc":{"start":{"line":153,"column":4},"end":{"line":156,"column":5}},"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":156,"column":5}},{"start":{"line":153,"column":4},"end":{"line":156,"column":5}}],"line":153}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":4,"12":2,"13":2,"14":2,"15":10,"16":10,"17":10,"18":0,"19":0,"20":10,"21":2,"22":8,"23":8,"24":0,"25":2,"26":1,"27":2,"28":2,"29":2,"30":0,"31":2,"32":14,"33":0,"34":0,"35":0,"36":2,"37":2,"38":1,"39":2,"40":2,"41":2,"42":2,"43":0,"44":4,"45":4,"46":4,"47":4,"48":0,"49":4,"50":2,"51":2,"52":2,"53":2,"54":2,"55":2,"56":2,"57":2,"58":2,"59":2,"60":2,"61":2,"62":2,"63":2,"64":2,"65":2,"66":2,"67":2,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":8,"88":15,"89":7,"90":15,"91":1},"f":{"0":4,"1":2,"2":2,"3":2,"4":10,"5":8,"6":0,"7":2,"8":14,"9":0,"10":0,"11":0,"12":0,"13":2,"14":2,"15":4,"16":2,"17":2,"18":0,"19":0,"20":8,"21":15},"b":{"0":[1,3],"1":[4,4],"2":[2,8],"3":[2,2],"4":[2,0],"5":[4,0],"6":[2,0],"7":[0,0],"8":[6,2],"9":[7,8]},"inputSourceMap":{"version":3,"sources":["db.js"],"names":["debug","Database","constructor","app","_adapter","get","adapter","error","errors","GeneralError","_collections","Map","connect","disconnect","create","MongoDatabase","_dbUrl","url","_secondaries","secondaries","connectionDb","dbName","indexOfDBName","lastIndexOf","indexOfOptions","indexOf","substring","_client","MongoClient","_db","db","_clients","_dbs","dbNames","_","keys","i","length","dbUrl","logger","close","clients","values","collection","name","has","set"],"mappings":"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","file":"db.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src","sourcesContent":["import { MongoClient } from 'mongodb'\nimport _ from 'lodash'\nimport logger from 'winston'\nimport makeDebug from 'debug'\nimport errors from '@feathersjs/errors'\n\nconst debug = makeDebug('weacast:weacast-core:db')\n\nexport class Database {\n  constructor (app) {\n    try {\n      this.app = app\n      this._adapter = app.get('db').adapter\n    } catch (error) {\n      throw new errors.GeneralError('Cannot find database adapter configuration in application')\n    }\n    this._collections = new Map()\n  }\n\n  get adapter () {\n    return this._adapter\n  }\n\n  async connect () {\n    // Default implementation\n    return null\n  }\n\n  async disconnect () {\n    // Default implementation\n  }\n\n  static create (app) {\n    switch (app.get('db').adapter) {\n      case 'mongodb':\n      default:\n        return new MongoDatabase(app)\n    }\n  }\n}\n\nexport class MongoDatabase extends Database {\n  constructor (app) {\n    super(app)\n    try {\n      // Primary DB\n      this._dbUrl = app.get('db').url\n      // Secondaries if any\n      this._secondaries = app.get('db').secondaries || {}\n    } catch (error) {\n      throw new errors.GeneralError('Cannot find database connection URL in application')\n    }\n  }\n\n  connectionDb (url) {\n    // Extract database name from url. Need to remove the connections options if any\n    let dbName\n    const indexOfDBName = url.lastIndexOf('/') + 1\n    const indexOfOptions = url.indexOf('?')\n    if (indexOfOptions === -1) dbName = url.substring(indexOfDBName)\n    else dbName = url.substring(indexOfDBName, indexOfOptions)\n\n    return dbName\n  }\n\n  async connect () {\n    try {\n      // Connect to primary\n      this._client = await MongoClient.connect(this._dbUrl)\n      this._db = await this._client.db(this.connectionDb(this._dbUrl))\n      debug('Connected to primary DB ' + this.adapter)\n      // Then secondaries if any\n      this._clients = {}\n      this._dbs = {}\n      if (this._secondaries) {\n        const dbNames = _.keys(this._secondaries)\n        for (let i = 0; i < dbNames.length; i++) {\n          const dbName = dbNames[i]\n          const dbUrl = this._secondaries[dbName]\n          this._clients[dbName] = await MongoClient.connect(dbUrl)\n          this._dbs[dbName] = await this._clients[dbName].db(this.connectionDb(dbUrl))\n        }\n        debug('Connected to secondaries DB ' + this.adapter)\n      }\n      return this._db\n    } catch (error) {\n      logger.error('Could not connect to ' + this.adapter + ' database(s), please check your configuration', error)\n      throw error\n    }\n  }\n\n  async disconnect () {\n    try {\n      await this._client.close()\n      debug('Disconnected from primary DB ' + this.adapter)\n      this._client = null\n      this._db = null\n      if (this._secondaries) {\n        const clients = _.values(this._clients)\n        for (let i = 0; i < clients.length; i++) {\n          await clients[i].close()\n        }\n        this._clients = {}\n        this._dbs = {}\n        debug('Disconnected from secondaries DB ' + this.adapter)\n      }\n    } catch (error) {\n      logger.error('Could not disconnect from ' + this.adapter + ' database(s)', error)\n      throw error\n    }\n  }\n\n  db (dbName) {\n    return (dbName ? this._dbs[dbName] : this._db)\n  }\n\n  collection (name, dbName) {\n    if (!this._collections.has(name)) {\n      // Get collection from secondary or primary DB\n      this._collections.set(name, this.db(dbName).collection(name))\n    }\n    return this._collections.get(name)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9960b0377963ccbf7d77799e414e3f9d4f67acaf","contentHash":"4e78d09fd86a3cf736c4ea2b2f0596c657ab96a68e3f921bc2a536e0f9ef1ccc"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/common/index.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/common/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":12},"end":{"line":7,"column":29}},"2":{"start":{"line":9,"column":0},"end":{"line":17,"column":3}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":56}},"4":{"start":{"line":10,"column":49},"end":{"line":10,"column":56}},"5":{"start":{"line":11,"column":2},"end":{"line":16,"column":5}},"6":{"start":{"line":14,"column":6},"end":{"line":14,"column":24}},"7":{"start":{"line":19,"column":13},"end":{"line":19,"column":31}},"8":{"start":{"line":21,"column":0},"end":{"line":29,"column":3}},"9":{"start":{"line":22,"column":2},"end":{"line":22,"column":56}},"10":{"start":{"line":22,"column":49},"end":{"line":22,"column":56}},"11":{"start":{"line":23,"column":2},"end":{"line":28,"column":5}},"12":{"start":{"line":26,"column":6},"end":{"line":26,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":27},"end":{"line":9,"column":28}},"loc":{"start":{"line":9,"column":42},"end":{"line":17,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":10}},"loc":{"start":{"line":13,"column":21},"end":{"line":15,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":28},"end":{"line":21,"column":29}},"loc":{"start":{"line":21,"column":43},"end":{"line":29,"column":1}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":10}},"loc":{"start":{"line":25,"column":21},"end":{"line":27,"column":5}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":56}},"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":56}},{"start":{"line":10,"column":2},"end":{"line":10,"column":56}}],"line":10},"1":{"loc":{"start":{"line":10,"column":6},"end":{"line":10,"column":47}},"type":"binary-expr","locations":[{"start":{"line":10,"column":6},"end":{"line":10,"column":23}},{"start":{"line":10,"column":27},"end":{"line":10,"column":47}}],"line":10},"2":{"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":56}},"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":56}},{"start":{"line":22,"column":2},"end":{"line":22,"column":56}}],"line":22},"3":{"loc":{"start":{"line":22,"column":6},"end":{"line":22,"column":47}},"type":"binary-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":23}},{"start":{"line":22,"column":27},"end":{"line":22,"column":47}}],"line":22}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1,"6":3,"7":1,"8":1,"9":3,"10":0,"11":3,"12":25},"f":{"0":1,"1":3,"2":3,"3":25},"b":{"0":[0,1],"1":[1,1],"2":[0,3],"3":[3,3]},"inputSourceMap":{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"index.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/common","sourcesContent":["export * from './grid'\nexport * from './utils'\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a996b7ad4626eac32c82c9ca387523a318938cd9","contentHash":"51fa7a43df8af7c63250199492ffcd3f6c93a42aa32e8136f2e381b8a2910c2d"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/common/grid.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/common/grid.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":10,"column":2},"end":{"line":10,"column":39}},"2":{"start":{"line":18,"column":2},"end":{"line":18,"column":35}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":41}},"4":{"start":{"line":35,"column":23},"end":{"line":35,"column":122}},"5":{"start":{"line":37,"column":2},"end":{"line":37,"column":62}},"6":{"start":{"line":45,"column":2},"end":{"line":52,"column":3}},"7":{"start":{"line":46,"column":4},"end":{"line":46,"column":39}},"8":{"start":{"line":47,"column":9},"end":{"line":52,"column":3}},"9":{"start":{"line":49,"column":4},"end":{"line":49,"column":37}},"10":{"start":{"line":51,"column":4},"end":{"line":51,"column":15}},"11":{"start":{"line":59,"column":4},"end":{"line":59,"column":33}},"12":{"start":{"line":62,"column":4},"end":{"line":62,"column":67}},"13":{"start":{"line":63,"column":4},"end":{"line":63,"column":67}},"14":{"start":{"line":65,"column":4},"end":{"line":65,"column":77}},"15":{"start":{"line":69,"column":4},"end":{"line":69,"column":29}},"16":{"start":{"line":69,"column":20},"end":{"line":69,"column":29}},"17":{"start":{"line":70,"column":4},"end":{"line":76,"column":5}},"18":{"start":{"line":71,"column":6},"end":{"line":75,"column":7}},"19":{"start":{"line":72,"column":8},"end":{"line":72,"column":31}},"20":{"start":{"line":74,"column":8},"end":{"line":74,"column":25}},"21":{"start":{"line":77,"column":18},"end":{"line":77,"column":38}},"22":{"start":{"line":78,"column":4},"end":{"line":82,"column":5}},"23":{"start":{"line":79,"column":6},"end":{"line":79,"column":30}},"24":{"start":{"line":81,"column":6},"end":{"line":81,"column":23}},"25":{"start":{"line":87,"column":4},"end":{"line":87,"column":42}},"26":{"start":{"line":89,"column":4},"end":{"line":89,"column":59}},"27":{"start":{"line":89,"column":42},"end":{"line":89,"column":59}},"28":{"start":{"line":91,"column":14},"end":{"line":91,"column":90}},"29":{"start":{"line":92,"column":15},"end":{"line":92,"column":28}},"30":{"start":{"line":93,"column":14},"end":{"line":93,"column":77}},"31":{"start":{"line":94,"column":15},"end":{"line":94,"column":28}},"32":{"start":{"line":96,"column":4},"end":{"line":96,"column":26}},"33":{"start":{"line":101,"column":15},"end":{"line":101,"column":20}},"34":{"start":{"line":102,"column":15},"end":{"line":102,"column":20}},"35":{"start":{"line":103,"column":14},"end":{"line":103,"column":21}},"36":{"start":{"line":104,"column":14},"end":{"line":104,"column":20}},"37":{"start":{"line":105,"column":14},"end":{"line":105,"column":20}},"38":{"start":{"line":106,"column":14},"end":{"line":106,"column":19}},"39":{"start":{"line":107,"column":4},"end":{"line":107,"column":49}},"40":{"start":{"line":117,"column":4},"end":{"line":117,"column":37}},"41":{"start":{"line":117,"column":20},"end":{"line":117,"column":37}},"42":{"start":{"line":118,"column":20},"end":{"line":118,"column":45}},"43":{"start":{"line":120,"column":4},"end":{"line":120,"column":48}},"44":{"start":{"line":120,"column":31},"end":{"line":120,"column":48}},"45":{"start":{"line":121,"column":27},"end":{"line":121,"column":34}},"46":{"start":{"line":123,"column":13},"end":{"line":123,"column":19}},"47":{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},"48":{"start":{"line":126,"column":6},"end":{"line":126,"column":13}},"49":{"start":{"line":128,"column":4},"end":{"line":128,"column":40}},"50":{"start":{"line":129,"column":15},"end":{"line":129,"column":49}},"51":{"start":{"line":131,"column":16},"end":{"line":131,"column":37}},"52":{"start":{"line":132,"column":16},"end":{"line":132,"column":37}},"53":{"start":{"line":133,"column":16},"end":{"line":133,"column":37}},"54":{"start":{"line":134,"column":16},"end":{"line":134,"column":37}},"55":{"start":{"line":137,"column":4},"end":{"line":141,"column":5}},"56":{"start":{"line":138,"column":6},"end":{"line":138,"column":74}},"57":{"start":{"line":140,"column":6},"end":{"line":140,"column":23}},"58":{"start":{"line":152,"column":17},"end":{"line":152,"column":19}},"59":{"start":{"line":153,"column":4},"end":{"line":160,"column":5}},"60":{"start":{"line":153,"column":17},"end":{"line":153,"column":18}},"61":{"start":{"line":154,"column":6},"end":{"line":159,"column":7}},"62":{"start":{"line":154,"column":19},"end":{"line":154,"column":20}},"63":{"start":{"line":155,"column":20},"end":{"line":155,"column":71}},"64":{"start":{"line":156,"column":20},"end":{"line":156,"column":71}},"65":{"start":{"line":157,"column":22},"end":{"line":157,"column":48}},"66":{"start":{"line":158,"column":8},"end":{"line":158,"column":25}},"67":{"start":{"line":161,"column":4},"end":{"line":161,"column":16}},"68":{"start":{"line":170,"column":22},"end":{"line":170,"column":127}},"69":{"start":{"line":171,"column":22},"end":{"line":171,"column":127}},"70":{"start":{"line":173,"column":24},"end":{"line":173,"column":102}},"71":{"start":{"line":175,"column":21},"end":{"line":175,"column":125}},"72":{"start":{"line":176,"column":27},"end":{"line":176,"column":67}},"73":{"start":{"line":177,"column":4},"end":{"line":177,"column":53}},"74":{"start":{"line":186,"column":54},"end":{"line":186,"column":80}},"75":{"start":{"line":188,"column":17},"end":{"line":188,"column":19}},"76":{"start":{"line":190,"column":4},"end":{"line":221,"column":5}},"77":{"start":{"line":190,"column":17},"end":{"line":190,"column":18}},"78":{"start":{"line":191,"column":6},"end":{"line":220,"column":7}},"79":{"start":{"line":191,"column":19},"end":{"line":191,"column":20}},"80":{"start":{"line":193,"column":27},"end":{"line":193,"column":143}},"81":{"start":{"line":194,"column":25},"end":{"line":194,"column":27}},"82":{"start":{"line":196,"column":8},"end":{"line":203,"column":9}},"83":{"start":{"line":196,"column":22},"end":{"line":196,"column":23}},"84":{"start":{"line":197,"column":10},"end":{"line":202,"column":11}},"85":{"start":{"line":197,"column":24},"end":{"line":197,"column":25}},"86":{"start":{"line":198,"column":24},"end":{"line":198,"column":84}},"87":{"start":{"line":199,"column":24},"end":{"line":199,"column":84}},"88":{"start":{"line":200,"column":26},"end":{"line":200,"column":52}},"89":{"start":{"line":201,"column":12},"end":{"line":201,"column":33}},"90":{"start":{"line":204,"column":21},"end":{"line":204,"column":34}},"91":{"start":{"line":205,"column":21},"end":{"line":205,"column":34}},"92":{"start":{"line":206,"column":21},"end":{"line":206,"column":70}},"93":{"start":{"line":207,"column":21},"end":{"line":207,"column":70}},"94":{"start":{"line":209,"column":8},"end":{"line":209,"column":71}},"95":{"start":{"line":209,"column":35},"end":{"line":209,"column":71}},"96":{"start":{"line":210,"column":8},"end":{"line":210,"column":71}},"97":{"start":{"line":210,"column":35},"end":{"line":210,"column":71}},"98":{"start":{"line":211,"column":8},"end":{"line":219,"column":11}},"99":{"start":{"line":222,"column":4},"end":{"line":222,"column":16}},"100":{"start":{"line":226,"column":43},"end":{"line":226,"column":49}},"101":{"start":{"line":228,"column":4},"end":{"line":228,"column":50}},"102":{"start":{"line":229,"column":4},"end":{"line":229,"column":50}},"103":{"start":{"line":231,"column":4},"end":{"line":239,"column":6}},"104":{"start":{"line":243,"column":4},"end":{"line":243,"column":53}},"105":{"start":{"line":243,"column":36},"end":{"line":243,"column":53}},"106":{"start":{"line":244,"column":19},"end":{"line":244,"column":26}},"107":{"start":{"line":245,"column":19},"end":{"line":245,"column":26}},"108":{"start":{"line":246,"column":4},"end":{"line":249,"column":5}},"109":{"start":{"line":246,"column":17},"end":{"line":246,"column":18}},"110":{"start":{"line":247,"column":6},"end":{"line":247,"column":45}},"111":{"start":{"line":248,"column":6},"end":{"line":248,"column":45}},"112":{"start":{"line":250,"column":4},"end":{"line":250,"column":34}},"113":{"start":{"line":253,"column":0},"end":{"line":253,"column":20}}},"fnMap":{"0":{"name":"isValue","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":16}},"loc":{"start":{"line":9,"column":20},"end":{"line":11,"column":1}},"line":9},"1":{"name":"floorMod","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":17}},"loc":{"start":{"line":17,"column":24},"end":{"line":19,"column":1}},"line":17},"2":{"name":"clamp","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":14}},"loc":{"start":{"line":24,"column":28},"end":{"line":26,"column":1}},"line":24},"3":{"name":"isInside","decl":{"start":{"line":34,"column":9},"end":{"line":34,"column":17}},"loc":{"start":{"line":34,"column":36},"end":{"line":38,"column":1}},"line":34},"4":{"name":"wrapLongitude","decl":{"start":{"line":43,"column":9},"end":{"line":43,"column":22}},"loc":{"start":{"line":43,"column":36},"end":{"line":53,"column":1}},"line":43},"5":{"name":"(anonymous_5)","decl":{"start":{"line":58,"column":2},"end":{"line":58,"column":3}},"loc":{"start":{"line":58,"column":23},"end":{"line":66,"column":3}},"line":58},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":2},"end":{"line":68,"column":3}},"loc":{"start":{"line":68,"column":17},"end":{"line":83,"column":3}},"line":68},"7":{"name":"(anonymous_7)","decl":{"start":{"line":85,"column":2},"end":{"line":85,"column":3}},"loc":{"start":{"line":85,"column":23},"end":{"line":97,"column":3}},"line":85},"8":{"name":"(anonymous_8)","decl":{"start":{"line":100,"column":2},"end":{"line":100,"column":3}},"loc":{"start":{"line":100,"column":48},"end":{"line":108,"column":3}},"line":100},"9":{"name":"(anonymous_9)","decl":{"start":{"line":116,"column":2},"end":{"line":116,"column":3}},"loc":{"start":{"line":116,"column":24},"end":{"line":142,"column":3}},"line":116},"10":{"name":"(anonymous_10)","decl":{"start":{"line":151,"column":2},"end":{"line":151,"column":3}},"loc":{"start":{"line":151,"column":37},"end":{"line":162,"column":3}},"line":151},"11":{"name":"(anonymous_11)","decl":{"start":{"line":169,"column":2},"end":{"line":169,"column":3}},"loc":{"start":{"line":169,"column":24},"end":{"line":178,"column":3}},"line":169},"12":{"name":"(anonymous_12)","decl":{"start":{"line":185,"column":2},"end":{"line":185,"column":3}},"loc":{"start":{"line":185,"column":22},"end":{"line":223,"column":3}},"line":185},"13":{"name":"(anonymous_13)","decl":{"start":{"line":225,"column":2},"end":{"line":225,"column":3}},"loc":{"start":{"line":225,"column":28},"end":{"line":240,"column":3}},"line":225},"14":{"name":"(anonymous_14)","decl":{"start":{"line":242,"column":2},"end":{"line":242,"column":3}},"loc":{"start":{"line":242,"column":25},"end":{"line":251,"column":3}},"line":242}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":9},"end":{"line":10,"column":38}},"type":"binary-expr","locations":[{"start":{"line":10,"column":9},"end":{"line":10,"column":19}},{"start":{"line":10,"column":23},"end":{"line":10,"column":38}}],"line":10},"1":{"loc":{"start":{"line":35,"column":23},"end":{"line":35,"column":122}},"type":"cond-expr","locations":[{"start":{"line":35,"column":47},"end":{"line":35,"column":83}},{"start":{"line":35,"column":86},"end":{"line":35,"column":122}}],"line":35},"2":{"loc":{"start":{"line":35,"column":47},"end":{"line":35,"column":83}},"type":"binary-expr","locations":[{"start":{"line":35,"column":47},"end":{"line":35,"column":63}},{"start":{"line":35,"column":67},"end":{"line":35,"column":83}}],"line":35},"3":{"loc":{"start":{"line":35,"column":86},"end":{"line":35,"column":122}},"type":"binary-expr","locations":[{"start":{"line":35,"column":86},"end":{"line":35,"column":102}},{"start":{"line":35,"column":106},"end":{"line":35,"column":122}}],"line":35},"4":{"loc":{"start":{"line":37,"column":9},"end":{"line":37,"column":61}},"type":"binary-expr","locations":[{"start":{"line":37,"column":9},"end":{"line":37,"column":25}},{"start":{"line":37,"column":29},"end":{"line":37,"column":45}},{"start":{"line":37,"column":49},"end":{"line":37,"column":61}}],"line":37},"5":{"loc":{"start":{"line":45,"column":2},"end":{"line":52,"column":3}},"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":52,"column":3}},{"start":{"line":45,"column":2},"end":{"line":52,"column":3}}],"line":45},"6":{"loc":{"start":{"line":46,"column":11},"end":{"line":46,"column":38}},"type":"cond-expr","locations":[{"start":{"line":46,"column":23},"end":{"line":46,"column":32}},{"start":{"line":46,"column":35},"end":{"line":46,"column":38}}],"line":46},"7":{"loc":{"start":{"line":47,"column":9},"end":{"line":52,"column":3}},"type":"if","locations":[{"start":{"line":47,"column":9},"end":{"line":52,"column":3}},{"start":{"line":47,"column":9},"end":{"line":52,"column":3}}],"line":47},"8":{"loc":{"start":{"line":49,"column":11},"end":{"line":49,"column":36}},"type":"cond-expr","locations":[{"start":{"line":49,"column":21},"end":{"line":49,"column":30}},{"start":{"line":49,"column":33},"end":{"line":49,"column":36}}],"line":49},"9":{"loc":{"start":{"line":62,"column":24},"end":{"line":62,"column":66}},"type":"cond-expr","locations":[{"start":{"line":62,"column":60},"end":{"line":62,"column":61}},{"start":{"line":62,"column":64},"end":{"line":62,"column":66}}],"line":62},"10":{"loc":{"start":{"line":63,"column":24},"end":{"line":63,"column":66}},"type":"cond-expr","locations":[{"start":{"line":63,"column":60},"end":{"line":63,"column":61}},{"start":{"line":63,"column":64},"end":{"line":63,"column":66}}],"line":63},"11":{"loc":{"start":{"line":69,"column":4},"end":{"line":69,"column":29}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":29}},{"start":{"line":69,"column":4},"end":{"line":69,"column":29}}],"line":69},"12":{"loc":{"start":{"line":70,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":76,"column":5}},{"start":{"line":70,"column":4},"end":{"line":76,"column":5}}],"line":70},"13":{"loc":{"start":{"line":71,"column":6},"end":{"line":75,"column":7}},"type":"if","locations":[{"start":{"line":71,"column":6},"end":{"line":75,"column":7}},{"start":{"line":71,"column":6},"end":{"line":75,"column":7}}],"line":71},"14":{"loc":{"start":{"line":71,"column":10},"end":{"line":71,"column":46}},"type":"binary-expr","locations":[{"start":{"line":71,"column":10},"end":{"line":71,"column":26}},{"start":{"line":71,"column":30},"end":{"line":71,"column":46}}],"line":71},"15":{"loc":{"start":{"line":78,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":82,"column":5}},{"start":{"line":78,"column":4},"end":{"line":82,"column":5}}],"line":78},"16":{"loc":{"start":{"line":89,"column":4},"end":{"line":89,"column":59}},"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":59}},{"start":{"line":89,"column":4},"end":{"line":89,"column":59}}],"line":89},"17":{"loc":{"start":{"line":117,"column":4},"end":{"line":117,"column":37}},"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":37}},{"start":{"line":117,"column":4},"end":{"line":117,"column":37}}],"line":117},"18":{"loc":{"start":{"line":120,"column":4},"end":{"line":120,"column":48}},"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":48}},{"start":{"line":120,"column":4},"end":{"line":120,"column":48}}],"line":120},"19":{"loc":{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},{"start":{"line":125,"column":4},"end":{"line":127,"column":5}}],"line":125},"20":{"loc":{"start":{"line":125,"column":8},"end":{"line":125,"column":47}},"type":"binary-expr","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":25}},{"start":{"line":125,"column":29},"end":{"line":125,"column":47}}],"line":125},"21":{"loc":{"start":{"line":137,"column":4},"end":{"line":141,"column":5}},"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":141,"column":5}},{"start":{"line":137,"column":4},"end":{"line":141,"column":5}}],"line":137},"22":{"loc":{"start":{"line":137,"column":8},"end":{"line":137,"column":68}},"type":"binary-expr","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":20}},{"start":{"line":137,"column":24},"end":{"line":137,"column":36}},{"start":{"line":137,"column":40},"end":{"line":137,"column":52}},{"start":{"line":137,"column":56},"end":{"line":137,"column":68}}],"line":137},"23":{"loc":{"start":{"line":170,"column":22},"end":{"line":170,"column":127}},"type":"cond-expr","locations":[{"start":{"line":170,"column":56},"end":{"line":170,"column":93}},{"start":{"line":170,"column":96},"end":{"line":170,"column":127}}],"line":170},"24":{"loc":{"start":{"line":171,"column":22},"end":{"line":171,"column":127}},"type":"cond-expr","locations":[{"start":{"line":171,"column":56},"end":{"line":171,"column":93}},{"start":{"line":171,"column":96},"end":{"line":171,"column":127}}],"line":171},"25":{"loc":{"start":{"line":209,"column":8},"end":{"line":209,"column":71}},"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":71}},{"start":{"line":209,"column":8},"end":{"line":209,"column":71}}],"line":209},"26":{"loc":{"start":{"line":210,"column":8},"end":{"line":210,"column":71}},"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":71}},{"start":{"line":210,"column":8},"end":{"line":210,"column":71}}],"line":210},"27":{"loc":{"start":{"line":228,"column":13},"end":{"line":228,"column":49}},"type":"cond-expr","locations":[{"start":{"line":228,"column":28},"end":{"line":228,"column":40}},{"start":{"line":228,"column":43},"end":{"line":228,"column":49}}],"line":228},"28":{"loc":{"start":{"line":229,"column":13},"end":{"line":229,"column":49}},"type":"cond-expr","locations":[{"start":{"line":229,"column":28},"end":{"line":229,"column":40}},{"start":{"line":229,"column":43},"end":{"line":229,"column":49}}],"line":229},"29":{"loc":{"start":{"line":243,"column":4},"end":{"line":243,"column":53}},"type":"if","locations":[{"start":{"line":243,"column":4},"end":{"line":243,"column":53}},{"start":{"line":243,"column":4},"end":{"line":243,"column":53}}],"line":243},"30":{"loc":{"start":{"line":243,"column":8},"end":{"line":243,"column":34}},"type":"binary-expr","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":13}},{"start":{"line":243,"column":17},"end":{"line":243,"column":34}}],"line":243}},"s":{"0":1,"1":3724,"2":931,"3":1862,"4":933,"5":933,"6":933,"7":933,"8":0,"9":0,"10":0,"11":32,"12":32,"13":32,"14":32,"15":3732,"16":0,"17":3732,"18":4,"19":4,"20":0,"21":3728,"22":3728,"23":3728,"24":0,"25":933,"26":933,"27":2,"28":931,"29":931,"30":931,"31":931,"32":931,"33":931,"34":931,"35":931,"36":931,"37":931,"38":931,"39":931,"40":933,"41":0,"42":933,"43":933,"44":2,"45":931,"46":931,"47":931,"48":226,"49":931,"50":931,"51":931,"52":931,"53":931,"54":931,"55":931,"56":931,"57":0,"58":4,"59":4,"60":4,"61":8,"62":8,"63":24,"64":24,"65":24,"66":24,"67":4,"68":28,"69":28,"70":28,"71":28,"72":28,"73":28,"74":28,"75":28,"76":28,"77":28,"78":56,"79":56,"80":224,"81":224,"82":224,"83":224,"84":448,"85":448,"86":896,"87":896,"88":896,"89":896,"90":224,"91":224,"92":224,"93":224,"94":224,"95":0,"96":224,"97":224,"98":224,"99":28,"100":216,"101":216,"102":216,"103":216,"104":246,"105":0,"106":246,"107":246,"108":246,"109":246,"110":960,"111":960,"112":246,"113":1},"f":{"0":3724,"1":931,"2":1862,"3":933,"4":933,"5":32,"6":3732,"7":933,"8":931,"9":933,"10":4,"11":28,"12":28,"13":216,"14":246},"b":{"0":[3724,3724],"1":[0,933],"2":[0,0],"3":[933,932],"4":[933,933,932],"5":[933,0],"6":[0,933],"7":[0,0],"8":[0,0],"9":[32,0],"10":[0,32],"11":[0,3732],"12":[4,3728],"13":[4,0],"14":[4,4],"15":[3728,0],"16":[2,931],"17":[0,933],"18":[2,931],"19":[226,705],"20":[931,931],"21":[931,0],"22":[931,931,931,931],"23":[0,28],"24":[0,28],"25":[0,224],"26":[224,0],"27":[0,216],"28":[0,216],"29":[0,246],"30":[246,246]},"inputSourceMap":{"version":3,"sources":["grid.js"],"names":["isValue","x","undefined","floorMod","a","n","Math","floor","clamp","min","max","isInside","lon","lat","bounds","isLonInRange","wrapLongitude","Grid","constructor","options","Object","assign","lonDirection","origin","latDirection","isContinuous","size","resolution","getValue","i","j","data","matrix","index","length","getIndices","fi","fj","bilinearInterpolate","y","g00","g10","g01","g11","rx","ry","b","c","d","interpolate","indices","ci","cj","resample","value","push","getTiling","lonExtent","latExtent","tilesetSize","tileSize","tileResolution","tileset","tileOrigin","tileData","tj","ti","minLon","minLat","maxLon","maxLat","toGeometry","geometry","type","coordinates","getMinMax","minValue","maxValue"],"mappings":"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","file":"grid.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/common","sourcesContent":["/**\n * @returns {Boolean} true if the specified value is not null and not undefined.\n */\nfunction isValue (x) {\n  return x !== null && x !== undefined\n}\n\n/**\n * @returns {Number} returns remainder of floored division, i.e., floor(a / n). Useful for consistent modulo\n *          of negative numbers. See http://en.wikipedia.org/wiki/Modulo_operation.\n */\nfunction floorMod (a, n) {\n  return a - n * Math.floor(a / n)\n}\n\n/**\n * @returns {Number} the value x clamped to the range [low, high].\n */\nfunction clamp (x, min, max) {\n  return Math.max(min, Math.min(x, max))\n}\n\n/**\n * @returns {Boolean} if the given point is inside the given bounding box e.g. [-180, -90, 180, 90].\n * This solution also takes in consideration a case in which the UI sends a box which crosses longitude 180/-180\n * (maps views on low zoom level where you can see the whole world, allow infinite cyclic horizontal scrolling,\n * so it is possible for example that a box's bottomLeft.lng=170 while topRight.lng=-170(=190) and by that including a range of 20 degrees\n */\nfunction isInside (lon, lat, bounds) {\n  const isLonInRange = (bounds[2] < bounds[0]\n    ? lon >= bounds[0] || lon <= bounds[2]\n    : lon >= bounds[0] && lon <= bounds[2])\n\n  return lat >= bounds[1] && lat <= bounds[3] && isLonInRange\n}\n\n/**\n * @returns {Number} Returns a new longitude with the value wrapped so it's always in the same range than the given bounding box (e.g. between -180 and +180 degrees).\n */\nfunction wrapLongitude (lon, bounds) {\n  // We have longitudes in range [-180, 180] so take care if longitude is given in range [0, 360]\n  if (bounds[0] < 0) {\n    return lon > 180 ? lon - 360 : lon\n  } else if (bounds[2] > 180) {\n    // We have longitudes in range [0, 360] so take care if longitude is given in range [-180, 180]\n    return lon < 0 ? lon + 360 : lon\n  } else {\n    return lon\n  }\n}\n\nexport class Grid {\n  // Options are similar to those defining the forecast model + a data json array for grid point values\n  // (bounds e.g. [-180, -90, 180, 90], e.g. origin: [-180, 90], e.g. size: [720, 361], e.g. resolution: [0.5, 0.5])\n  constructor (options) {\n    Object.assign(this, options)\n\n    // Depending on the model longitude/latitude increases/decreases according to grid scanning\n    this.lonDirection = (this.origin[0] === this.bounds[0] ? 1 : -1)\n    this.latDirection = (this.origin[1] === this.bounds[1] ? 1 : -1)\n    // Check for wrapped grids\n    this.isContinuous = Math.floor(this.size[0] * this.resolution[0]) >= 360\n  }\n\n  getValue (i, j) {\n    if (!this.data) return 0\n    if (this.matrix) {\n      if (i < this.size[0] && j < this.size[1]) {\n        return this.data[j][i]\n      } else {\n        return undefined\n      }\n    }\n    const index = i + j * this.size[0]\n    if (index < this.data.length) {\n      return this.data[index]\n    } else {\n      return undefined\n    }\n  }\n\n  getIndices (lon, lat) {\n    // Take care that some models express longitude in [0,360] and not [-180,180], so unify range here\n    lon = wrapLongitude(lon, this.bounds)\n    // Check for points outside bbox\n    if (!isInside(lon, lat, this.bounds)) return undefined\n\n    const i = this.lonDirection * floorMod(lon - this.origin[0], 360) / this.resolution[0] // calculate longitude index in wrapped range [0, 360)\n    const fi = Math.floor(i)\n    const j = this.latDirection * (lat - this.origin[1]) / this.resolution[1] // calculate latitude index in direction +90 to -90\n    const fj = Math.floor(j)\n\n    return [i, fi, j, fj]\n  }\n\n  // bilinear interpolation\n  bilinearInterpolate (x, y, g00, g10, g01, g11) {\n    const rx = (1 - x)\n    const ry = (1 - y)\n    const a = rx * ry\n    const b = x * ry\n    const c = rx * y\n    const d = x * y\n    return g00 * a + g10 * b + g01 * c + g11 * d\n  }\n\n  /**\n   * Get interpolated grid value from Lon/Lat position\n   * @param lon {Float} Longitude\n   * @param lat {Float} Latitude\n   * @returns {Object}\n   */\n  interpolate (lon, lat) {\n    if (!this.data) return undefined\n    const indices = this.getIndices(lon, lat)\n    // Check for points outside bbox\n    if (indices === undefined) return undefined\n    const [i, fi, j, fj] = indices\n\n    let ci = fi + 1\n    // In this case virtually duplicate first column as last column to simplify interpolation logic\n    if (this.isContinuous && ci >= this.size[0]) {\n      ci = 0\n    }\n    ci = clamp(ci, 0, this.size[0] - 1)\n    const cj = clamp(fj + 1, 0, this.size[1] - 1)\n\n    const g00 = this.getValue(fi, fj)\n    const g10 = this.getValue(ci, fj)\n    const g01 = this.getValue(fi, cj)\n    const g11 = this.getValue(ci, cj)\n\n    // All four points found, so interpolate the value\n    if (isValue(g00) && isValue(g10) && isValue(g01) && isValue(g11)) {\n      return this.bilinearInterpolate(i - fi, j - fj, g00, g10, g01, g11)\n    } else {\n      return undefined\n    }\n  }\n\n  /**\n   * Get a resampled version of the grid based on interpolated values\n   * @param origin {Array} Origin in longitude/latitude of the new data\n   * @param resolution {Array} Resolution in longitude/latitude of the new data\n   * @param size {Array} Grid size in longitude/latitude of the new data\n   * @returns {Array}\n   */\n  resample (origin, resolution, size) {\n    const data = []\n    for (let j = 0; j < size[1]; j++) {\n      for (let i = 0; i < size[0]; i++) {\n        const lon = origin[0] + this.lonDirection * (i * resolution[0])\n        const lat = origin[1] + this.latDirection * (j * resolution[1])\n        const value = this.interpolate(lon, lat)\n        data.push(value)\n      }\n    }\n    return data\n  }\n\n  /**\n   * Get tiling parameters for a tileset from the grid\n   * @param resolution {Array} Tile resolution in longitude/latitude of the tileset\n   * @returns {Object} tileset size, tile size, tile resolution\n   */\n  getTiling (resolution) {\n    const lonExtent = (this.bounds[2] < this.bounds[0] ? (360 + this.bounds[2] - this.bounds[0]) : (this.bounds[2] - this.bounds[0]))\n    const latExtent = (this.bounds[3] < this.bounds[1] ? (360 + this.bounds[3] - this.bounds[1]) : (this.bounds[3] - this.bounds[1]))\n    // Number of tiles is bound / tile resolution\n    const tilesetSize = [Math.floor(lonExtent / resolution[0]), Math.floor(latExtent / resolution[1])]\n    // Size of tiles is tile bound / resolution\n    const tileSize = [\n      Math.floor(resolution[0] / this.resolution[0]) + 1,\n      Math.floor(resolution[1] / this.resolution[1]) + 1\n    ]\n    const tileResolution = [this.resolution[0], this.resolution[1]]\n    return { tilesetSize, tileSize, tileResolution }\n  }\n\n  /**\n   * Get a tileset from the grid\n   * @param resolution {Array} Tile resolution in longitude/latitude of the tileset\n   * @returns {Array} a list of grid data for each tile\n   */\n  tileset (resolution) {\n    const { tilesetSize, tileSize, tileResolution } = this.getTiling(resolution)\n\n    const data = []\n    // Iterate over tiles\n    for (let j = 0; j < tilesetSize[1]; j++) {\n      for (let i = 0; i < tilesetSize[0]; i++) {\n        // Compute tile origin\n        const tileOrigin = [this.origin[0] + this.lonDirection * (i * resolution[0]),\n          this.origin[1] + this.latDirection * (j * resolution[1])]\n        const tileData = []\n        // Then over cell in tile\n        for (let tj = 0; tj < tileSize[1]; tj++) {\n          for (let ti = 0; ti < tileSize[0]; ti++) {\n            const lon = tileOrigin[0] + this.lonDirection * (ti * tileResolution[0])\n            const lat = tileOrigin[1] + this.latDirection * (tj * tileResolution[1])\n            const value = this.interpolate(lon, lat)\n            tileData.push(value)\n          }\n        }\n        let minLon = tileOrigin[0]\n        let minLat = tileOrigin[1]\n        let maxLon = tileOrigin[0] + this.lonDirection * resolution[0]\n        let maxLat = tileOrigin[1] + this.latDirection * resolution[1]\n        // Need to switch bounds if descending order\n        if (this.lonDirection < 0) [minLon, maxLon] = [maxLon, minLon]\n        if (this.latDirection < 0) [minLat, maxLat] = [maxLat, minLat]\n        data.push({\n          x: i,\n          y: j,\n          bounds: [minLon, minLat, maxLon, maxLat],\n          origin: tileOrigin,\n          size: tileSize,\n          resolution: tileResolution,\n          data: tileData\n        })\n      }\n    }\n    return data\n  }\n\n  static toGeometry (bounds) {\n    let [minLon, minLat, maxLon, maxLat] = bounds\n    // GeoJSON WGS84 > longitude should be in [-180, 180]\n    minLon = (minLon > 180 ? minLon - 360 : minLon)\n    maxLon = (maxLon > 180 ? maxLon - 360 : maxLon)\n\n    return {\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          // Exterior ring\n          [[minLon, minLat], [maxLon, minLat],\n            [maxLon, maxLat], [minLon, maxLat], [minLon, minLat]] // Closing point\n        ]\n      }\n    }\n  }\n\n  static getMinMax (data) {\n    if (!data || (data.length === 0)) return undefined\n    let minValue = data[0]\n    let maxValue = data[0]\n    for (let i = 1; i < data.length; i++) {\n      minValue = Math.min(minValue, data[i])\n      maxValue = Math.max(maxValue, data[i])\n    }\n    return { minValue, maxValue }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2013e3a98dc26ebbbd49ed0de0ba1f743af21c0c","contentHash":"db11467fb44a9d674a15b23736cd80c5b88ff5860629972a2aa31b0fead0521a"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/common/utils.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/common/utils.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":56}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":49}},"5":{"start":{"line":23,"column":12},"end":{"line":23,"column":60}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":73}},"7":{"start":{"line":33,"column":25},"end":{"line":33,"column":74}},"8":{"start":{"line":34,"column":12},"end":{"line":34,"column":63}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":79}}},"fnMap":{"0":{"name":"roundHours","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":19}},"loc":{"start":{"line":13,"column":37},"end":{"line":15,"column":1}},"line":13},"1":{"name":"getNearestRunTime","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":26}},"loc":{"start":{"line":21,"column":50},"end":{"line":25,"column":1}},"line":21},"2":{"name":"getNearestForecastTime","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":31}},"loc":{"start":{"line":31,"column":52},"end":{"line":36,"column":1}},"line":31}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":25,"5":14,"6":14,"7":11,"8":11,"9":11},"f":{"0":25,"1":14,"2":11},"b":{},"inputSourceMap":{"version":3,"sources":["utils.js"],"names":["roundHours","getNearestRunTime","getNearestForecastTime","hours","interval","Math","floor","datetime","runInterval","h","clone","minutes","seconds","milliseconds","offsetDateTime","add"],"mappings":";;;;;QAIgBA,U,GAAAA,U;QAQAC,iB,GAAAA,iB;QAUAC,sB,GAAAA,sB;AAtBhB;;;;AAIO,SAASF,UAAT,CAAqBG,KAArB,EAA4BC,QAA5B,EAAsC;AAC3C,SAAQC,KAAKC,KAAL,CAAWH,QAAQC,QAAnB,IAA+BA,QAAvC;AACD;;AAED;;;;AAIO,SAASH,iBAAT,CAA4BM,QAA5B,EAAsCC,WAAtC,EAAmD;AACxD;AACA,QAAMC,IAAIT,WAAWO,SAASJ,KAAT,EAAX,EAA6BK,cAAc,IAA3C,CAAV;AACA,SAAOD,SAASG,KAAT,GAAiBP,KAAjB,CAAuBM,CAAvB,EAA0BE,OAA1B,CAAkC,CAAlC,EAAqCC,OAArC,CAA6C,CAA7C,EAAgDC,YAAhD,CAA6D,CAA7D,CAAP;AACD;;AAED;;;;AAIO,SAASX,sBAAT,CAAiCK,QAAjC,EAA2CH,QAA3C,EAAqD;AAC1D;AACA,QAAMU,iBAAiBP,SAASG,KAAT,GAAiBK,GAAjB,CAAqB,EAAEH,SAAS,MAAMR,QAAjB,EAArB,CAAvB;AACA,QAAMK,IAAIT,WAAWc,eAAeX,KAAf,EAAX,EAAmCC,WAAW,IAA9C,CAAV;AACA,SAAOU,eAAeJ,KAAf,GAAuBP,KAAvB,CAA6BM,CAA7B,EAAgCE,OAAhC,CAAwC,CAAxC,EAA2CC,OAA3C,CAAmD,CAAnD,EAAsDC,YAAtD,CAAmE,CAAnE,CAAP;AACD","file":"utils.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/common","sourcesContent":["/*\n  Round hours to expected interval, e.g. we're currently using 6 hourly interval i.e. 00 || 06 || 12 || 18\n  @return {Number}\n */\nexport function roundHours (hours, interval) {\n  return (Math.floor(hours / interval) * interval)\n}\n\n/*\n  Round hours to expected run interval\n  @return {Date}\n */\nexport function getNearestRunTime (datetime, runInterval) {\n  // Compute nearest run T0, always in the past\n  const h = roundHours(datetime.hours(), runInterval / 3600)\n  return datetime.clone().hours(h).minutes(0).seconds(0).milliseconds(0)\n}\n\n/*\n  Round hours to expected forecast interval\n  @return {Date}\n */\nexport function getNearestForecastTime (datetime, interval) {\n  // Compute nearest forecast T0, can be in the past when between two forecast time\n  const offsetDateTime = datetime.clone().add({ seconds: 0.5 * interval })\n  const h = roundHours(offsetDateTime.hours(), interval / 3600)\n  return offsetDateTime.clone().hours(h).minutes(0).seconds(0).milliseconds(0)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3c8185aa58db9e3d3cd99d87795bb6b025702f2f","contentHash":"4cb20f2b2ff8186067a8982594e31554da473573485b02be9471ec375593c4b1"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/mixins/index.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/mixins/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":56}},"2":{"start":{"line":8,"column":13},"end":{"line":8,"column":39}},"3":{"start":{"line":10,"column":14},"end":{"line":10,"column":44}},"4":{"start":{"line":12,"column":14},"end":{"line":12,"column":40}},"5":{"start":{"line":14,"column":14},"end":{"line":14,"column":45}},"6":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":39}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":39}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":37},"end":{"line":16,"column":95}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":92}},"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}],"line":16},"1":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":67}},"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":1,"8":1,"9":1},"f":{"0":2},"b":{"0":[0,2],"1":[2,2]},"inputSourceMap":{"version":3,"sources":["index.js"],"names":["elementMixin","refreshMixin"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;kBAEe,CACbA,eADa,EAEbC,eAFa,C;QAKND,Y,GAAAA,e;QAAcC,Y,GAAAA,e","file":"index.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/mixins","sourcesContent":["import elementMixin from './mixin.element'\nimport refreshMixin from './mixin.refresh'\n\nexport default [\n  elementMixin,\n  refreshMixin\n]\n\nexport { elementMixin, refreshMixin }\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5cde299e369dc7a7eba27b136ab6d6a6142fb890","contentHash":"6e5d287afb725e913db5accb6a6a70b3af7e935084e32abd0830bbb0af6bb6be"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/mixins/mixin.element.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/mixins/mixin.element.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":15},"end":{"line":7,"column":34}},"2":{"start":{"line":9,"column":16},"end":{"line":9,"column":48}},"3":{"start":{"line":11,"column":12},"end":{"line":11,"column":27}},"4":{"start":{"line":13,"column":13},"end":{"line":13,"column":42}},"5":{"start":{"line":15,"column":15},"end":{"line":15,"column":33}},"6":{"start":{"line":17,"column":16},"end":{"line":17,"column":48}},"7":{"start":{"line":19,"column":14},"end":{"line":19,"column":34}},"8":{"start":{"line":21,"column":39},"end":{"line":21,"column":93}},"9":{"start":{"line":23,"column":33},"end":{"line":23,"column":456}},"10":{"start":{"line":23,"column":64},"end":{"line":23,"column":89}},"11":{"start":{"line":23,"column":91},"end":{"line":23,"column":453}},"12":{"start":{"line":23,"column":165},"end":{"line":23,"column":263}},"13":{"start":{"line":23,"column":182},"end":{"line":23,"column":195}},"14":{"start":{"line":23,"column":209},"end":{"line":23,"column":219}},"15":{"start":{"line":23,"column":239},"end":{"line":23,"column":253}},"16":{"start":{"line":23,"column":254},"end":{"line":23,"column":261}},"17":{"start":{"line":23,"column":264},"end":{"line":23,"column":426}},"18":{"start":{"line":23,"column":281},"end":{"line":23,"column":296}},"19":{"start":{"line":23,"column":306},"end":{"line":23,"column":424}},"20":{"start":{"line":23,"column":360},"end":{"line":23,"column":380}},"21":{"start":{"line":23,"column":401},"end":{"line":23,"column":420}},"22":{"start":{"line":23,"column":429},"end":{"line":23,"column":449}},"23":{"start":{"line":25,"column":0},"end":{"line":93,"column":2}},"24":{"start":{"line":28,"column":4},"end":{"line":28,"column":79}},"25":{"start":{"line":32,"column":21},"end":{"line":32,"column":68}},"26":{"start":{"line":33,"column":4},"end":{"line":33,"column":67}},"27":{"start":{"line":37,"column":4},"end":{"line":37,"column":82}},"28":{"start":{"line":41,"column":23},"end":{"line":41,"column":131}},"29":{"start":{"line":43,"column":4},"end":{"line":43,"column":72}},"30":{"start":{"line":45,"column":4},"end":{"line":53,"column":7}},"31":{"start":{"line":46,"column":6},"end":{"line":52,"column":9}},"32":{"start":{"line":47,"column":8},"end":{"line":47,"column":145}},"33":{"start":{"line":48,"column":8},"end":{"line":48,"column":22}},"34":{"start":{"line":50,"column":8},"end":{"line":50,"column":137}},"35":{"start":{"line":51,"column":8},"end":{"line":51,"column":18}},"36":{"start":{"line":57,"column":22},"end":{"line":57,"column":130}},"37":{"start":{"line":59,"column":4},"end":{"line":67,"column":7}},"38":{"start":{"line":60,"column":6},"end":{"line":66,"column":9}},"39":{"start":{"line":61,"column":8},"end":{"line":61,"column":156}},"40":{"start":{"line":62,"column":8},"end":{"line":62,"column":22}},"41":{"start":{"line":64,"column":8},"end":{"line":64,"column":143}},"42":{"start":{"line":65,"column":8},"end":{"line":65,"column":18}},"43":{"start":{"line":71,"column":16},"end":{"line":71,"column":20}},"44":{"start":{"line":73,"column":4},"end":{"line":76,"column":9}},"45":{"start":{"line":74,"column":20},"end":{"line":74,"column":74}},"46":{"start":{"line":75,"column":6},"end":{"line":75,"column":75}},"47":{"start":{"line":80,"column":17},"end":{"line":80,"column":21}},"48":{"start":{"line":82,"column":4},"end":{"line":90,"column":9}},"49":{"start":{"line":83,"column":23},"end":{"line":83,"column":74}},"50":{"start":{"line":84,"column":20},"end":{"line":86,"column":18}},"51":{"start":{"line":87,"column":6},"end":{"line":89,"column":10}},"52":{"start":{"line":88,"column":8},"end":{"line":88,"column":43}},"53":{"start":{"line":94,"column":0},"end":{"line":94,"column":33}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":31}},"loc":{"start":{"line":21,"column":37},"end":{"line":21,"column":95}},"line":21},"1":{"name":"_asyncToGenerator","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":26}},"loc":{"start":{"line":23,"column":31},"end":{"line":23,"column":458}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":40},"end":{"line":23,"column":41}},"loc":{"start":{"line":23,"column":52},"end":{"line":23,"column":455}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":110},"end":{"line":23,"column":111}},"loc":{"start":{"line":23,"column":137},"end":{"line":23,"column":451}},"line":23},"4":{"name":"step","decl":{"start":{"line":23,"column":148},"end":{"line":23,"column":152}},"loc":{"start":{"line":23,"column":163},"end":{"line":23,"column":428}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":341},"end":{"line":23,"column":342}},"loc":{"start":{"line":23,"column":358},"end":{"line":23,"column":382}},"line":23},"6":{"name":"(anonymous_6)","decl":{"start":{"line":23,"column":384},"end":{"line":23,"column":385}},"loc":{"start":{"line":23,"column":399},"end":{"line":23,"column":422}},"line":23},"7":{"name":"(anonymous_7)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":30},"end":{"line":29,"column":3}},"line":27},"8":{"name":"(anonymous_8)","decl":{"start":{"line":31,"column":2},"end":{"line":31,"column":3}},"loc":{"start":{"line":31,"column":35},"end":{"line":34,"column":3}},"line":31},"9":{"name":"(anonymous_9)","decl":{"start":{"line":36,"column":2},"end":{"line":36,"column":3}},"loc":{"start":{"line":36,"column":26},"end":{"line":38,"column":3}},"line":36},"10":{"name":"(anonymous_10)","decl":{"start":{"line":40,"column":2},"end":{"line":40,"column":3}},"loc":{"start":{"line":40,"column":27},"end":{"line":54,"column":3}},"line":40},"11":{"name":"(anonymous_11)","decl":{"start":{"line":45,"column":23},"end":{"line":45,"column":24}},"loc":{"start":{"line":45,"column":44},"end":{"line":53,"column":5}},"line":45},"12":{"name":"(anonymous_12)","decl":{"start":{"line":46,"column":116},"end":{"line":46,"column":117}},"loc":{"start":{"line":46,"column":125},"end":{"line":49,"column":7}},"line":46},"13":{"name":"(anonymous_13)","decl":{"start":{"line":49,"column":22},"end":{"line":49,"column":23}},"loc":{"start":{"line":49,"column":27},"end":{"line":52,"column":7}},"line":49},"14":{"name":"(anonymous_14)","decl":{"start":{"line":56,"column":2},"end":{"line":56,"column":3}},"loc":{"start":{"line":56,"column":35},"end":{"line":68,"column":3}},"line":56},"15":{"name":"(anonymous_15)","decl":{"start":{"line":59,"column":23},"end":{"line":59,"column":24}},"loc":{"start":{"line":59,"column":44},"end":{"line":67,"column":5}},"line":59},"16":{"name":"(anonymous_16)","decl":{"start":{"line":60,"column":120},"end":{"line":60,"column":121}},"loc":{"start":{"line":60,"column":129},"end":{"line":63,"column":7}},"line":60},"17":{"name":"(anonymous_17)","decl":{"start":{"line":63,"column":22},"end":{"line":63,"column":23}},"loc":{"start":{"line":63,"column":27},"end":{"line":66,"column":7}},"line":63},"18":{"name":"(anonymous_18)","decl":{"start":{"line":70,"column":2},"end":{"line":70,"column":3}},"loc":{"start":{"line":70,"column":29},"end":{"line":77,"column":3}},"line":70},"19":{"name":"(anonymous_19)","decl":{"start":{"line":73,"column":29},"end":{"line":73,"column":30}},"loc":{"start":{"line":73,"column":42},"end":{"line":76,"column":5}},"line":73},"20":{"name":"(anonymous_20)","decl":{"start":{"line":79,"column":2},"end":{"line":79,"column":3}},"loc":{"start":{"line":79,"column":24},"end":{"line":91,"column":3}},"line":79},"21":{"name":"(anonymous_21)","decl":{"start":{"line":82,"column":29},"end":{"line":82,"column":30}},"loc":{"start":{"line":82,"column":42},"end":{"line":90,"column":5}},"line":82},"22":{"name":"(anonymous_22)","decl":{"start":{"line":87,"column":34},"end":{"line":87,"column":35}},"loc":{"start":{"line":87,"column":50},"end":{"line":89,"column":7}},"line":87}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":46},"end":{"line":21,"column":92}},"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":92}}],"line":21},"1":{"loc":{"start":{"line":21,"column":46},"end":{"line":21,"column":67}},"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}],"line":21},"2":{"loc":{"start":{"line":23,"column":264},"end":{"line":23,"column":426}},"type":"if","locations":[{"start":{"line":23,"column":264},"end":{"line":23,"column":426}},{"start":{"line":23,"column":264},"end":{"line":23,"column":426}}],"line":23},"3":{"loc":{"start":{"line":32,"column":21},"end":{"line":32,"column":68}},"type":"binary-expr","locations":[{"start":{"line":32,"column":21},"end":{"line":32,"column":42}},{"start":{"line":32,"column":46},"end":{"line":32,"column":68}}],"line":32},"4":{"loc":{"start":{"line":37,"column":11},"end":{"line":37,"column":81}},"type":"binary-expr","locations":[{"start":{"line":37,"column":11},"end":{"line":37,"column":42}},{"start":{"line":37,"column":46},"end":{"line":37,"column":81}}],"line":37},"5":{"loc":{"start":{"line":41,"column":23},"end":{"line":41,"column":131}},"type":"cond-expr","locations":[{"start":{"line":41,"column":61},"end":{"line":41,"column":69}},{"start":{"line":41,"column":72},"end":{"line":41,"column":131}}],"line":41},"6":{"loc":{"start":{"line":57,"column":22},"end":{"line":57,"column":130}},"type":"cond-expr","locations":[{"start":{"line":57,"column":60},"end":{"line":57,"column":68}},{"start":{"line":57,"column":71},"end":{"line":57,"column":130}}],"line":57},"7":{"loc":{"start":{"line":75,"column":13},"end":{"line":75,"column":74}},"type":"cond-expr","locations":[{"start":{"line":75,"column":32},"end":{"line":75,"column":62}},{"start":{"line":75,"column":65},"end":{"line":75,"column":74}}],"line":75},"8":{"loc":{"start":{"line":83,"column":23},"end":{"line":83,"column":74}},"type":"binary-expr","locations":[{"start":{"line":83,"column":23},"end":{"line":83,"column":46}},{"start":{"line":83,"column":50},"end":{"line":83,"column":74}}],"line":83}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":3,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":12,"25":9,"26":9,"27":204,"28":2,"29":2,"30":2,"31":2,"32":0,"33":0,"34":2,"35":2,"36":9,"37":9,"38":9,"39":0,"40":0,"41":9,"42":9,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1},"f":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":12,"8":9,"9":204,"10":2,"11":2,"12":0,"13":2,"14":9,"15":9,"16":0,"17":9,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"0":[0,3],"1":[3,3],"2":[0,0],"3":[9,9],"4":[204,136],"5":[2,0],"6":[9,0],"7":[0,0],"8":[0,0]},"inputSourceMap":{"version":3,"sources":["mixin.element.js"],"names":["getNearestRunTime","datetime","forecast","runInterval","getNearestForecastTime","interval","element","isExternalDataStorage","dataStore","readFromGridFS","filePath","outputPath","path","isAbsolute","join","app","get","fs","ensureDirSync","dirname","Promise","resolve","reject","gfs","openDownloadStreamByName","pipe","createWriteStream","on","error","logger","name","_","verbose","saveToGridFS","metadata","inputPath","createReadStream","openUploadStream","removeFromGridFS","items","find","filename","toArray","length","delete","_id","undefined","cleanGridFS","$lte","clone","subtract","toDate","all","map","item"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe;;AAEbA,oBAAmBC,QAAnB,EAA6B;AAC3B,WAAO,+BAAkBA,QAAlB,EAA4B,KAAKC,QAAL,CAAcC,WAA1C,CAAP;AACD,GAJY;;AAMbC,yBAAwBH,QAAxB,EAAkC;AAChC,UAAMI,WAAW,KAAKC,OAAL,CAAaD,QAAb,IAAyB,KAAKH,QAAL,CAAcG,QAAxD;AACA,WAAO,oCAAuBJ,QAAvB,EAAiCI,QAAjC,CAAP;AACD,GATY;;AAWbE,0BAAyB;AACvB,WAAS,KAAKD,OAAL,CAAaE,SAAb,KAA2B,IAA5B,IAAsC,KAAKF,OAAL,CAAaE,SAAb,KAA2B,QAAzE;AACD,GAbY;;AAebC,iBAAgBC,QAAhB,EAA0B;AACxB,UAAMC,aAAcC,eAAKC,UAAL,CAAgBH,QAAhB,IAChBA,QADgB,GAEhBE,eAAKE,IAAL,CAAU,KAAKC,GAAL,CAASC,GAAT,CAAa,cAAb,CAAV,EAAwCN,QAAxC,CAFJ;AAGA;AACAO,sBAAGC,aAAH,CAAiBN,eAAKO,OAAL,CAAaR,UAAb,CAAjB;;AAEA,WAAO,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKC,GAAL,CAASC,wBAAT,CAAkCd,QAAlC,EACGe,IADH,CACQR,kBAAGS,iBAAH,CAAqBf,UAArB,CADR,EAEGgB,EAFH,CAEM,OAFN,EAEeC,SAAS;AACpBC,0BAAOD,KAAP,CAAa,oBAAoBlB,QAApB,GAA+B,mBAA/B,GAAqD,KAAKR,QAAL,CAAc4B,IAAnE,GAA0E,GAA1E,GAAgF,KAAKxB,OAAL,CAAawB,IAA7F,GAAoG,WAAjH;AACAR,eAAOM,KAAP;AACD,OALH,EAMGD,EANH,CAMM,QANN,EAMgBI,KAAK;AACjBF,0BAAOG,OAAP,CAAe,UAAUtB,QAAV,GAAqB,mBAArB,GAA2C,KAAKR,QAAL,CAAc4B,IAAzD,GAAgE,GAAhE,GAAsE,KAAKxB,OAAL,CAAawB,IAAnF,GAA0F,WAAzG;AACAT;AACD,OATH;AAUD,KAXM,CAAP;AAYD,GAlCY;;AAoCbY,eAAcvB,QAAd,EAAwBwB,QAAxB,EAAkC;AAChC,UAAMC,YAAavB,eAAKC,UAAL,CAAgBH,QAAhB,IACfA,QADe,GAEfE,eAAKE,IAAL,CAAU,KAAKC,GAAL,CAASC,GAAT,CAAa,cAAb,CAAV,EAAwCN,QAAxC,CAFJ;;AAIA,WAAO,IAAIU,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCL,wBAAGmB,gBAAH,CAAoBD,SAApB,EACGV,IADH,CACQ,KAAKF,GAAL,CAASc,gBAAT,CAA0B3B,QAA1B,EAAoC,EAAEwB,QAAF,EAApC,CADR,EAEGP,EAFH,CAEM,OAFN,EAEeC,SAAS;AACpBC,0BAAOD,KAAP,CAAa,0BAA0BlB,QAA1B,GAAqC,iBAArC,GAAyD,KAAKR,QAAL,CAAc4B,IAAvE,GAA8E,GAA9E,GAAoF,KAAKxB,OAAL,CAAawB,IAAjG,GAAwG,WAArH,EAAkIF,KAAlI;AACAN,eAAOM,KAAP;AACD,OALH,EAMGD,EANH,CAMM,QANN,EAMgBI,KAAK;AACjBF,0BAAOG,OAAP,CAAe,kBAAkBtB,QAAlB,GAA6B,iBAA7B,GAAiD,KAAKR,QAAL,CAAc4B,IAA/D,GAAsE,GAAtE,GAA4E,KAAKxB,OAAL,CAAawB,IAAzF,GAAgG,WAA/G;AACAT;AACD,OATH;AAUD,KAXM,CAAP;AAYD,GArDY;;AAuDPiB,kBAAN,CAAwB5B,QAAxB,EAAkC;AAAA;;AAAA;AAChC,YAAM6B,QAAQ,MAAM,MAAKhB,GAAL,CAASiB,IAAT,CAAc,EAAEC,UAAU/B,QAAZ,EAAd,EAAsCgC,OAAtC,EAApB;AACA,aAAQH,MAAMI,MAAN,GAAe,CAAf,GAAmB,MAAKpB,GAAL,CAASqB,MAAT,CAAgBL,MAAM,CAAN,EAASM,GAAzB,CAAnB,GAAmDC,SAA3D;AAFgC;AAGjC,GA1DY;;AA4DPC,aAAN,CAAmB9C,QAAnB,EAA6B;AAAA;;AAAA;AAC3B,YAAMI,WAAW,OAAKC,OAAL,CAAaD,QAAb,IAAyB,OAAKH,QAAL,CAAcG,QAAxD;AACA,YAAMkC,QAAQ,MAAM,OAAKhB,GAAL,CAASiB,IAAT,CAAc;AAChC,iCAAyB,EAAEQ,MAAM/C,SAASgD,KAAT,GAAiBC,QAAjB,CAA0B7C,QAA1B,EAAoC,SAApC,EAA+C8C,MAA/C,EAAR;AADO,OAAd,EAEjBT,OAFiB,EAApB;AAGA,YAAMtB,QAAQgC,GAAR,CAAYb,MAAMc,GAAN,CAAU;AAAA,eAAQ,OAAK9B,GAAL,CAASqB,MAAT,CAAgBU,KAAKT,GAArB,CAAR;AAAA,OAAV,CAAZ,CAAN;AAL2B;AAM5B;;AAlEY,C","file":"mixin.element.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/mixins","sourcesContent":["import fs from 'fs-extra'\nimport path from 'path'\nimport logger from 'winston'\nimport { getNearestRunTime, getNearestForecastTime } from '../common'\n\nexport default {\n\n  getNearestRunTime (datetime) {\n    return getNearestRunTime(datetime, this.forecast.runInterval)\n  },\n\n  getNearestForecastTime (datetime) {\n    const interval = this.element.interval || this.forecast.interval\n    return getNearestForecastTime(datetime, interval)\n  },\n\n  isExternalDataStorage () {\n    return ((this.element.dataStore === 'fs') || (this.element.dataStore === 'gridfs'))\n  },\n\n  readFromGridFS (filePath) {\n    const outputPath = (path.isAbsolute(filePath)\n      ? filePath\n      : path.join(this.app.get('forecastPath'), filePath))\n    // Make sure we've got somewhere to put data\n    fs.ensureDirSync(path.dirname(outputPath))\n\n    return new Promise((resolve, reject) => {\n      this.gfs.openDownloadStreamByName(filePath)\n        .pipe(fs.createWriteStream(outputPath))\n        .on('error', error => {\n          logger.error('Unable to read ' + filePath + ' from GridFS for ' + this.forecast.name + '/' + this.element.name + ' forecast')\n          reject(error)\n        })\n        .on('finish', _ => {\n          logger.verbose('Read ' + filePath + ' from GridFS for ' + this.forecast.name + '/' + this.element.name + ' forecast')\n          resolve()\n        })\n    })\n  },\n\n  saveToGridFS (filePath, metadata) {\n    const inputPath = (path.isAbsolute(filePath)\n      ? filePath\n      : path.join(this.app.get('forecastPath'), filePath))\n\n    return new Promise((resolve, reject) => {\n      fs.createReadStream(inputPath)\n        .pipe(this.gfs.openUploadStream(filePath, { metadata }))\n        .on('error', error => {\n          logger.error('Unable to write file ' + filePath + ' to GridFS for ' + this.forecast.name + '/' + this.element.name + ' forecast', error)\n          reject(error)\n        })\n        .on('finish', _ => {\n          logger.verbose('Written file ' + filePath + ' to GridFS for ' + this.forecast.name + '/' + this.element.name + ' forecast')\n          resolve()\n        })\n    })\n  },\n\n  async removeFromGridFS (filePath) {\n    const items = await this.gfs.find({ filename: filePath }).toArray()\n    return (items.length > 0 ? this.gfs.delete(items[0]._id) : undefined)\n  },\n\n  async cleanGridFS (datetime) {\n    const interval = this.element.interval || this.forecast.interval\n    const items = await this.gfs.find({\n      'metadata.forecastTime': { $lte: datetime.clone().subtract(interval, 'seconds').toDate() }\n    }).toArray()\n    await Promise.all(items.map(item => this.gfs.delete(item._id)))\n  }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6882017924e9ec5c23f0376ffb85feac73ad3843","contentHash":"98822192fb723dd48f03795adffc4f715a47fa57c4a62c6667c41f6209cd3b0d"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/mixins/mixin.refresh.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/mixins/mixin.refresh.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":12},"end":{"line":7,"column":27}},"2":{"start":{"line":9,"column":13},"end":{"line":9,"column":42}},"3":{"start":{"line":11,"column":15},"end":{"line":11,"column":34}},"4":{"start":{"line":13,"column":16},"end":{"line":13,"column":48}},"5":{"start":{"line":15,"column":14},"end":{"line":15,"column":31}},"6":{"start":{"line":17,"column":15},"end":{"line":17,"column":46}},"7":{"start":{"line":19,"column":14},"end":{"line":19,"column":31}},"8":{"start":{"line":21,"column":15},"end":{"line":21,"column":46}},"9":{"start":{"line":23,"column":15},"end":{"line":23,"column":33}},"10":{"start":{"line":25,"column":16},"end":{"line":25,"column":48}},"11":{"start":{"line":27,"column":14},"end":{"line":27,"column":43}},"12":{"start":{"line":29,"column":13},"end":{"line":29,"column":45}},"13":{"start":{"line":31,"column":15},"end":{"line":31,"column":33}},"14":{"start":{"line":33,"column":16},"end":{"line":33,"column":48}},"15":{"start":{"line":35,"column":13},"end":{"line":35,"column":29}},"16":{"start":{"line":37,"column":14},"end":{"line":37,"column":44}},"17":{"start":{"line":39,"column":12},"end":{"line":39,"column":37}},"18":{"start":{"line":41,"column":40},"end":{"line":41,"column":267}},"19":{"start":{"line":41,"column":69},"end":{"line":41,"column":80}},"20":{"start":{"line":41,"column":103},"end":{"line":41,"column":105}},"21":{"start":{"line":41,"column":107},"end":{"line":41,"column":228}},"22":{"start":{"line":41,"column":126},"end":{"line":41,"column":226}},"23":{"start":{"line":41,"column":149},"end":{"line":41,"column":224}},"24":{"start":{"line":41,"column":201},"end":{"line":41,"column":224}},"25":{"start":{"line":41,"column":229},"end":{"line":41,"column":250}},"26":{"start":{"line":41,"column":251},"end":{"line":41,"column":265}},"27":{"start":{"line":43,"column":39},"end":{"line":43,"column":93}},"28":{"start":{"line":45,"column":33},"end":{"line":45,"column":456}},"29":{"start":{"line":45,"column":64},"end":{"line":45,"column":89}},"30":{"start":{"line":45,"column":91},"end":{"line":45,"column":453}},"31":{"start":{"line":45,"column":165},"end":{"line":45,"column":263}},"32":{"start":{"line":45,"column":182},"end":{"line":45,"column":195}},"33":{"start":{"line":45,"column":209},"end":{"line":45,"column":219}},"34":{"start":{"line":45,"column":239},"end":{"line":45,"column":253}},"35":{"start":{"line":45,"column":254},"end":{"line":45,"column":261}},"36":{"start":{"line":45,"column":264},"end":{"line":45,"column":426}},"37":{"start":{"line":45,"column":281},"end":{"line":45,"column":296}},"38":{"start":{"line":45,"column":306},"end":{"line":45,"column":424}},"39":{"start":{"line":45,"column":360},"end":{"line":45,"column":380}},"40":{"start":{"line":45,"column":401},"end":{"line":45,"column":420}},"41":{"start":{"line":45,"column":429},"end":{"line":45,"column":449}},"42":{"start":{"line":47,"column":14},"end":{"line":47,"column":58}},"43":{"start":{"line":49,"column":0},"end":{"line":414,"column":2}},"44":{"start":{"line":53,"column":4},"end":{"line":53,"column":100}},"45":{"start":{"line":58,"column":21},"end":{"line":58,"column":72}},"46":{"start":{"line":59,"column":4},"end":{"line":59,"column":144}},"47":{"start":{"line":63,"column":20},"end":{"line":100,"column":6}},"48":{"start":{"line":64,"column":23},"end":{"line":64,"column":74}},"49":{"start":{"line":65,"column":6},"end":{"line":69,"column":7}},"50":{"start":{"line":66,"column":8},"end":{"line":66,"column":179}},"51":{"start":{"line":67,"column":8},"end":{"line":67,"column":26}},"52":{"start":{"line":68,"column":8},"end":{"line":68,"column":15}},"53":{"start":{"line":71,"column":6},"end":{"line":71,"column":170}},"54":{"start":{"line":72,"column":25},"end":{"line":72,"column":168}},"55":{"start":{"line":74,"column":6},"end":{"line":99,"column":9}},"56":{"start":{"line":75,"column":8},"end":{"line":75,"column":51}},"57":{"start":{"line":76,"column":8},"end":{"line":76,"column":20}},"58":{"start":{"line":78,"column":8},"end":{"line":78,"column":71}},"59":{"start":{"line":79,"column":8},"end":{"line":79,"column":20}},"60":{"start":{"line":81,"column":8},"end":{"line":98,"column":9}},"61":{"start":{"line":82,"column":10},"end":{"line":82,"column":87}},"62":{"start":{"line":83,"column":10},"end":{"line":86,"column":14}},"63":{"start":{"line":88,"column":23},"end":{"line":88,"column":68}},"64":{"start":{"line":89,"column":10},"end":{"line":97,"column":13}},"65":{"start":{"line":90,"column":12},"end":{"line":90,"column":25}},"66":{"start":{"line":91,"column":12},"end":{"line":91,"column":172}},"67":{"start":{"line":92,"column":12},"end":{"line":92,"column":30}},"68":{"start":{"line":94,"column":12},"end":{"line":94,"column":92}},"69":{"start":{"line":95,"column":12},"end":{"line":95,"column":56}},"70":{"start":{"line":96,"column":12},"end":{"line":96,"column":24}},"71":{"start":{"line":102,"column":4},"end":{"line":102,"column":19}},"72":{"start":{"line":106,"column":16},"end":{"line":106,"column":20}},"73":{"start":{"line":108,"column":4},"end":{"line":135,"column":9}},"74":{"start":{"line":109,"column":6},"end":{"line":109,"column":62}},"75":{"start":{"line":110,"column":19},"end":{"line":110,"column":73}},"76":{"start":{"line":111,"column":6},"end":{"line":113,"column":7}},"77":{"start":{"line":112,"column":8},"end":{"line":112,"column":137}},"78":{"start":{"line":115,"column":6},"end":{"line":121,"column":7}},"79":{"start":{"line":116,"column":8},"end":{"line":120,"column":9}},"80":{"start":{"line":116,"column":21},"end":{"line":116,"column":22}},"81":{"start":{"line":117,"column":10},"end":{"line":119,"column":13}},"82":{"start":{"line":123,"column":23},"end":{"line":126,"column":36}},"83":{"start":{"line":128,"column":6},"end":{"line":133,"column":7}},"84":{"start":{"line":129,"column":8},"end":{"line":132,"column":11}},"85":{"start":{"line":134,"column":6},"end":{"line":134,"column":53}},"86":{"start":{"line":139,"column":17},"end":{"line":139,"column":21}},"87":{"start":{"line":141,"column":4},"end":{"line":192,"column":9}},"88":{"start":{"line":143,"column":6},"end":{"line":156,"column":7}},"89":{"start":{"line":144,"column":8},"end":{"line":149,"column":11}},"90":{"start":{"line":151,"column":8},"end":{"line":155,"column":9}},"91":{"start":{"line":152,"column":10},"end":{"line":152,"column":71}},"92":{"start":{"line":153,"column":15},"end":{"line":155,"column":9}},"93":{"start":{"line":154,"column":10},"end":{"line":154,"column":70}},"94":{"start":{"line":159,"column":19},"end":{"line":159,"column":32}},"95":{"start":{"line":160,"column":6},"end":{"line":160,"column":63}},"96":{"start":{"line":160,"column":42},"end":{"line":160,"column":63}},"97":{"start":{"line":161,"column":21},"end":{"line":161,"column":50}},"98":{"start":{"line":163,"column":6},"end":{"line":190,"column":7}},"99":{"start":{"line":164,"column":21},"end":{"line":170,"column":10}},"100":{"start":{"line":171,"column":20},"end":{"line":171,"column":64}},"101":{"start":{"line":172,"column":8},"end":{"line":175,"column":10}},"102":{"start":{"line":173,"column":10},"end":{"line":173,"column":191}},"103":{"start":{"line":177,"column":8},"end":{"line":184,"column":9}},"104":{"start":{"line":178,"column":10},"end":{"line":183,"column":13}},"105":{"start":{"line":185,"column":8},"end":{"line":185,"column":35}},"106":{"start":{"line":187,"column":8},"end":{"line":189,"column":11}},"107":{"start":{"line":188,"column":10},"end":{"line":188,"column":34}},"108":{"start":{"line":191,"column":6},"end":{"line":191,"column":20}},"109":{"start":{"line":196,"column":17},"end":{"line":196,"column":21}},"110":{"start":{"line":198,"column":4},"end":{"line":241,"column":9}},"111":{"start":{"line":199,"column":25},"end":{"line":199,"column":37}},"112":{"start":{"line":200,"column":19},"end":{"line":205,"column":8}},"113":{"start":{"line":206,"column":30},"end":{"line":206,"column":76}},"114":{"start":{"line":207,"column":6},"end":{"line":207,"column":123}},"115":{"start":{"line":209,"column":6},"end":{"line":240,"column":7}},"116":{"start":{"line":209,"column":19},"end":{"line":209,"column":20}},"117":{"start":{"line":210,"column":8},"end":{"line":239,"column":9}},"118":{"start":{"line":210,"column":21},"end":{"line":210,"column":22}},"119":{"start":{"line":212,"column":10},"end":{"line":212,"column":81}},"120":{"start":{"line":214,"column":24},"end":{"line":227,"column":23}},"121":{"start":{"line":228,"column":10},"end":{"line":238,"column":11}},"122":{"start":{"line":229,"column":12},"end":{"line":229,"column":135}},"123":{"start":{"line":231,"column":25},"end":{"line":231,"column":33}},"124":{"start":{"line":233,"column":12},"end":{"line":233,"column":65}},"125":{"start":{"line":235,"column":12},"end":{"line":235,"column":64}},"126":{"start":{"line":236,"column":12},"end":{"line":236,"column":28}},"127":{"start":{"line":237,"column":12},"end":{"line":237,"column":38}},"128":{"start":{"line":245,"column":17},"end":{"line":245,"column":21}},"129":{"start":{"line":247,"column":4},"end":{"line":283,"column":9}},"130":{"start":{"line":249,"column":20},"end":{"line":252,"column":7}},"131":{"start":{"line":253,"column":6},"end":{"line":255,"column":7}},"132":{"start":{"line":254,"column":8},"end":{"line":254,"column":32}},"133":{"start":{"line":256,"column":21},"end":{"line":259,"column":8}},"134":{"start":{"line":261,"column":31},"end":{"line":261,"column":67}},"135":{"start":{"line":263,"column":6},"end":{"line":266,"column":7}},"136":{"start":{"line":264,"column":8},"end":{"line":264,"column":201}},"137":{"start":{"line":265,"column":8},"end":{"line":265,"column":32}},"138":{"start":{"line":268,"column":21},"end":{"line":268,"column":76}},"139":{"start":{"line":269,"column":6},"end":{"line":269,"column":87}},"140":{"start":{"line":270,"column":6},"end":{"line":270,"column":204}},"141":{"start":{"line":282,"column":6},"end":{"line":282,"column":22}},"142":{"start":{"line":287,"column":17},"end":{"line":287,"column":21}},"143":{"start":{"line":289,"column":4},"end":{"line":317,"column":9}},"144":{"start":{"line":290,"column":6},"end":{"line":316,"column":7}},"145":{"start":{"line":291,"column":23},"end":{"line":291,"column":88}},"146":{"start":{"line":293,"column":8},"end":{"line":293,"column":27}},"147":{"start":{"line":294,"column":8},"end":{"line":294,"column":22}},"148":{"start":{"line":298,"column":8},"end":{"line":304,"column":9}},"149":{"start":{"line":299,"column":10},"end":{"line":299,"column":181}},"150":{"start":{"line":300,"column":10},"end":{"line":300,"column":49}},"151":{"start":{"line":302,"column":10},"end":{"line":302,"column":183}},"152":{"start":{"line":303,"column":10},"end":{"line":303,"column":51}},"153":{"start":{"line":305,"column":32},"end":{"line":305,"column":98}},"154":{"start":{"line":309,"column":8},"end":{"line":315,"column":9}},"155":{"start":{"line":310,"column":10},"end":{"line":310,"column":205}},"156":{"start":{"line":311,"column":10},"end":{"line":311,"column":22}},"157":{"start":{"line":313,"column":10},"end":{"line":313,"column":155}},"158":{"start":{"line":314,"column":10},"end":{"line":314,"column":84}},"159":{"start":{"line":321,"column":17},"end":{"line":321,"column":21}},"160":{"start":{"line":323,"column":4},"end":{"line":354,"column":9}},"161":{"start":{"line":325,"column":23},"end":{"line":325,"column":74}},"162":{"start":{"line":327,"column":25},"end":{"line":327,"column":132}},"163":{"start":{"line":328,"column":25},"end":{"line":328,"column":132}},"164":{"start":{"line":330,"column":22},"end":{"line":330,"column":56}},"165":{"start":{"line":332,"column":24},"end":{"line":332,"column":72}},"166":{"start":{"line":333,"column":20},"end":{"line":333,"column":22}},"167":{"start":{"line":335,"column":6},"end":{"line":348,"column":7}},"168":{"start":{"line":335,"column":28},"end":{"line":335,"column":38}},"169":{"start":{"line":336,"column":29},"end":{"line":336,"column":73}},"170":{"start":{"line":337,"column":22},"end":{"line":337,"column":27}},"171":{"start":{"line":338,"column":8},"end":{"line":340,"column":9}},"172":{"start":{"line":339,"column":10},"end":{"line":339,"column":53}},"173":{"start":{"line":341,"column":8},"end":{"line":347,"column":9}},"174":{"start":{"line":342,"column":10},"end":{"line":346,"column":11}},"175":{"start":{"line":343,"column":12},"end":{"line":343,"column":92}},"176":{"start":{"line":350,"column":6},"end":{"line":352,"column":7}},"177":{"start":{"line":351,"column":8},"end":{"line":351,"column":32}},"178":{"start":{"line":353,"column":6},"end":{"line":353,"column":19}},"179":{"start":{"line":358,"column":17},"end":{"line":358,"column":21}},"180":{"start":{"line":360,"column":4},"end":{"line":387,"column":9}},"181":{"start":{"line":362,"column":6},"end":{"line":365,"column":7}},"182":{"start":{"line":363,"column":8},"end":{"line":363,"column":160}},"183":{"start":{"line":364,"column":8},"end":{"line":364,"column":15}},"184":{"start":{"line":366,"column":6},"end":{"line":366,"column":34}},"185":{"start":{"line":367,"column":18},"end":{"line":367,"column":40}},"186":{"start":{"line":368,"column":6},"end":{"line":368,"column":125}},"187":{"start":{"line":370,"column":22},"end":{"line":370,"column":47}},"188":{"start":{"line":371,"column":6},"end":{"line":375,"column":7}},"189":{"start":{"line":372,"column":8},"end":{"line":372,"column":49}},"190":{"start":{"line":374,"column":8},"end":{"line":374,"column":48}},"191":{"start":{"line":377,"column":6},"end":{"line":386,"column":7}},"192":{"start":{"line":378,"column":22},"end":{"line":378,"column":59}},"193":{"start":{"line":379,"column":8},"end":{"line":379,"column":120}},"194":{"start":{"line":380,"column":8},"end":{"line":380,"column":37}},"195":{"start":{"line":381,"column":8},"end":{"line":381,"column":21}},"196":{"start":{"line":383,"column":8},"end":{"line":383,"column":123}},"197":{"start":{"line":384,"column":8},"end":{"line":384,"column":37}},"198":{"start":{"line":385,"column":8},"end":{"line":385,"column":20}},"199":{"start":{"line":391,"column":17},"end":{"line":391,"column":21}},"200":{"start":{"line":393,"column":4},"end":{"line":412,"column":9}},"201":{"start":{"line":395,"column":6},"end":{"line":398,"column":7}},"202":{"start":{"line":396,"column":8},"end":{"line":396,"column":161}},"203":{"start":{"line":397,"column":8},"end":{"line":397,"column":15}},"204":{"start":{"line":399,"column":6},"end":{"line":399,"column":35}},"205":{"start":{"line":400,"column":18},"end":{"line":400,"column":40}},"206":{"start":{"line":401,"column":6},"end":{"line":401,"column":113}},"207":{"start":{"line":403,"column":6},"end":{"line":411,"column":7}},"208":{"start":{"line":404,"column":8},"end":{"line":404,"column":38}},"209":{"start":{"line":405,"column":8},"end":{"line":405,"column":121}},"210":{"start":{"line":406,"column":8},"end":{"line":406,"column":38}},"211":{"start":{"line":408,"column":8},"end":{"line":408,"column":124}},"212":{"start":{"line":409,"column":8},"end":{"line":409,"column":38}},"213":{"start":{"line":410,"column":8},"end":{"line":410,"column":20}},"214":{"start":{"line":415,"column":0},"end":{"line":415,"column":33}}},"fnMap":{"0":{"name":"_interopRequireWildcard","decl":{"start":{"line":41,"column":9},"end":{"line":41,"column":32}},"loc":{"start":{"line":41,"column":38},"end":{"line":41,"column":269}},"line":41},"1":{"name":"_interopRequireDefault","decl":{"start":{"line":43,"column":9},"end":{"line":43,"column":31}},"loc":{"start":{"line":43,"column":37},"end":{"line":43,"column":95}},"line":43},"2":{"name":"_asyncToGenerator","decl":{"start":{"line":45,"column":9},"end":{"line":45,"column":26}},"loc":{"start":{"line":45,"column":31},"end":{"line":45,"column":458}},"line":45},"3":{"name":"(anonymous_3)","decl":{"start":{"line":45,"column":40},"end":{"line":45,"column":41}},"loc":{"start":{"line":45,"column":52},"end":{"line":45,"column":455}},"line":45},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":110},"end":{"line":45,"column":111}},"loc":{"start":{"line":45,"column":137},"end":{"line":45,"column":451}},"line":45},"5":{"name":"step","decl":{"start":{"line":45,"column":148},"end":{"line":45,"column":152}},"loc":{"start":{"line":45,"column":163},"end":{"line":45,"column":428}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":45,"column":341},"end":{"line":45,"column":342}},"loc":{"start":{"line":45,"column":358},"end":{"line":45,"column":382}},"line":45},"7":{"name":"(anonymous_7)","decl":{"start":{"line":45,"column":384},"end":{"line":45,"column":385}},"loc":{"start":{"line":45,"column":399},"end":{"line":45,"column":422}},"line":45},"8":{"name":"(anonymous_8)","decl":{"start":{"line":52,"column":2},"end":{"line":52,"column":3}},"loc":{"start":{"line":52,"column":21},"end":{"line":54,"column":3}},"line":52},"9":{"name":"(anonymous_9)","decl":{"start":{"line":57,"column":2},"end":{"line":57,"column":3}},"loc":{"start":{"line":57,"column":58},"end":{"line":60,"column":3}},"line":57},"10":{"name":"(anonymous_10)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":46},"end":{"line":103,"column":3}},"line":62},"11":{"name":"(anonymous_11)","decl":{"start":{"line":63,"column":32},"end":{"line":63,"column":33}},"loc":{"start":{"line":63,"column":53},"end":{"line":100,"column":5}},"line":63},"12":{"name":"(anonymous_12)","decl":{"start":{"line":74,"column":92},"end":{"line":74,"column":93}},"loc":{"start":{"line":74,"column":99},"end":{"line":77,"column":7}},"line":74},"13":{"name":"(anonymous_13)","decl":{"start":{"line":77,"column":23},"end":{"line":77,"column":24}},"loc":{"start":{"line":77,"column":30},"end":{"line":80,"column":7}},"line":77},"14":{"name":"(anonymous_14)","decl":{"start":{"line":80,"column":24},"end":{"line":80,"column":25}},"loc":{"start":{"line":80,"column":36},"end":{"line":99,"column":7}},"line":80},"15":{"name":"(anonymous_15)","decl":{"start":{"line":89,"column":43},"end":{"line":89,"column":44}},"loc":{"start":{"line":89,"column":48},"end":{"line":93,"column":11}},"line":89},"16":{"name":"(anonymous_16)","decl":{"start":{"line":93,"column":25},"end":{"line":93,"column":26}},"loc":{"start":{"line":93,"column":32},"end":{"line":97,"column":11}},"line":93},"17":{"name":"(anonymous_17)","decl":{"start":{"line":105,"column":2},"end":{"line":105,"column":3}},"loc":{"start":{"line":105,"column":45},"end":{"line":136,"column":3}},"line":105},"18":{"name":"(anonymous_18)","decl":{"start":{"line":108,"column":29},"end":{"line":108,"column":30}},"loc":{"start":{"line":108,"column":42},"end":{"line":135,"column":5}},"line":108},"19":{"name":"(anonymous_19)","decl":{"start":{"line":138,"column":2},"end":{"line":138,"column":3}},"loc":{"start":{"line":138,"column":59},"end":{"line":193,"column":3}},"line":138},"20":{"name":"(anonymous_20)","decl":{"start":{"line":141,"column":29},"end":{"line":141,"column":30}},"loc":{"start":{"line":141,"column":42},"end":{"line":192,"column":5}},"line":141},"21":{"name":"(anonymous_21)","decl":{"start":{"line":172,"column":26},"end":{"line":172,"column":27}},"loc":{"start":{"line":172,"column":42},"end":{"line":174,"column":9}},"line":172},"22":{"name":"(anonymous_22)","decl":{"start":{"line":187,"column":22},"end":{"line":187,"column":23}},"loc":{"start":{"line":187,"column":38},"end":{"line":189,"column":9}},"line":187},"23":{"name":"(anonymous_23)","decl":{"start":{"line":195,"column":2},"end":{"line":195,"column":3}},"loc":{"start":{"line":195,"column":19},"end":{"line":242,"column":3}},"line":195},"24":{"name":"(anonymous_24)","decl":{"start":{"line":198,"column":29},"end":{"line":198,"column":30}},"loc":{"start":{"line":198,"column":42},"end":{"line":241,"column":5}},"line":198},"25":{"name":"(anonymous_25)","decl":{"start":{"line":244,"column":2},"end":{"line":244,"column":3}},"loc":{"start":{"line":244,"column":55},"end":{"line":284,"column":3}},"line":244},"26":{"name":"(anonymous_26)","decl":{"start":{"line":247,"column":29},"end":{"line":247,"column":30}},"loc":{"start":{"line":247,"column":42},"end":{"line":283,"column":5}},"line":247},"27":{"name":"(anonymous_27)","decl":{"start":{"line":286,"column":2},"end":{"line":286,"column":3}},"loc":{"start":{"line":286,"column":55},"end":{"line":318,"column":3}},"line":286},"28":{"name":"(anonymous_28)","decl":{"start":{"line":289,"column":29},"end":{"line":289,"column":30}},"loc":{"start":{"line":289,"column":42},"end":{"line":317,"column":5}},"line":289},"29":{"name":"(anonymous_29)","decl":{"start":{"line":320,"column":2},"end":{"line":320,"column":3}},"loc":{"start":{"line":320,"column":32},"end":{"line":355,"column":3}},"line":320},"30":{"name":"(anonymous_30)","decl":{"start":{"line":323,"column":29},"end":{"line":323,"column":30}},"loc":{"start":{"line":323,"column":42},"end":{"line":354,"column":5}},"line":323},"31":{"name":"(anonymous_31)","decl":{"start":{"line":357,"column":2},"end":{"line":357,"column":3}},"loc":{"start":{"line":357,"column":23},"end":{"line":388,"column":3}},"line":357},"32":{"name":"(anonymous_32)","decl":{"start":{"line":360,"column":29},"end":{"line":360,"column":30}},"loc":{"start":{"line":360,"column":42},"end":{"line":387,"column":5}},"line":360},"33":{"name":"(anonymous_33)","decl":{"start":{"line":390,"column":2},"end":{"line":390,"column":3}},"loc":{"start":{"line":390,"column":22},"end":{"line":413,"column":3}},"line":390},"34":{"name":"(anonymous_34)","decl":{"start":{"line":393,"column":29},"end":{"line":393,"column":30}},"loc":{"start":{"line":393,"column":42},"end":{"line":412,"column":5}},"line":393}},"branchMap":{"0":{"loc":{"start":{"line":41,"column":40},"end":{"line":41,"column":267}},"type":"if","locations":[{"start":{"line":41,"column":40},"end":{"line":41,"column":267}},{"start":{"line":41,"column":40},"end":{"line":41,"column":267}}],"line":41},"1":{"loc":{"start":{"line":41,"column":44},"end":{"line":41,"column":65}},"type":"binary-expr","locations":[{"start":{"line":41,"column":44},"end":{"line":41,"column":47}},{"start":{"line":41,"column":51},"end":{"line":41,"column":65}}],"line":41},"2":{"loc":{"start":{"line":41,"column":107},"end":{"line":41,"column":228}},"type":"if","locations":[{"start":{"line":41,"column":107},"end":{"line":41,"column":228}},{"start":{"line":41,"column":107},"end":{"line":41,"column":228}}],"line":41},"3":{"loc":{"start":{"line":41,"column":149},"end":{"line":41,"column":224}},"type":"if","locations":[{"start":{"line":41,"column":149},"end":{"line":41,"column":224}},{"start":{"line":41,"column":149},"end":{"line":41,"column":224}}],"line":41},"4":{"loc":{"start":{"line":43,"column":46},"end":{"line":43,"column":92}},"type":"cond-expr","locations":[{"start":{"line":43,"column":70},"end":{"line":43,"column":73}},{"start":{"line":43,"column":76},"end":{"line":43,"column":92}}],"line":43},"5":{"loc":{"start":{"line":43,"column":46},"end":{"line":43,"column":67}},"type":"binary-expr","locations":[{"start":{"line":43,"column":46},"end":{"line":43,"column":49}},{"start":{"line":43,"column":53},"end":{"line":43,"column":67}}],"line":43},"6":{"loc":{"start":{"line":45,"column":264},"end":{"line":45,"column":426}},"type":"if","locations":[{"start":{"line":45,"column":264},"end":{"line":45,"column":426}},{"start":{"line":45,"column":264},"end":{"line":45,"column":426}}],"line":45},"7":{"loc":{"start":{"line":65,"column":6},"end":{"line":69,"column":7}},"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":69,"column":7}},{"start":{"line":65,"column":6},"end":{"line":69,"column":7}}],"line":65},"8":{"loc":{"start":{"line":81,"column":8},"end":{"line":98,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":98,"column":9}},{"start":{"line":81,"column":8},"end":{"line":98,"column":9}}],"line":81},"9":{"loc":{"start":{"line":111,"column":6},"end":{"line":113,"column":7}},"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":113,"column":7}},{"start":{"line":111,"column":6},"end":{"line":113,"column":7}}],"line":111},"10":{"loc":{"start":{"line":115,"column":6},"end":{"line":121,"column":7}},"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":121,"column":7}},{"start":{"line":115,"column":6},"end":{"line":121,"column":7}}],"line":115},"11":{"loc":{"start":{"line":128,"column":6},"end":{"line":133,"column":7}},"type":"if","locations":[{"start":{"line":128,"column":6},"end":{"line":133,"column":7}},{"start":{"line":128,"column":6},"end":{"line":133,"column":7}}],"line":128},"12":{"loc":{"start":{"line":143,"column":6},"end":{"line":156,"column":7}},"type":"if","locations":[{"start":{"line":143,"column":6},"end":{"line":156,"column":7}},{"start":{"line":143,"column":6},"end":{"line":156,"column":7}}],"line":143},"13":{"loc":{"start":{"line":143,"column":10},"end":{"line":143,"column":91}},"type":"binary-expr","locations":[{"start":{"line":143,"column":10},"end":{"line":143,"column":26}},{"start":{"line":143,"column":30},"end":{"line":143,"column":59}},{"start":{"line":143,"column":63},"end":{"line":143,"column":91}}],"line":143},"14":{"loc":{"start":{"line":151,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":155,"column":9}},{"start":{"line":151,"column":8},"end":{"line":155,"column":9}}],"line":151},"15":{"loc":{"start":{"line":153,"column":15},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":153,"column":15},"end":{"line":155,"column":9}},{"start":{"line":153,"column":15},"end":{"line":155,"column":9}}],"line":153},"16":{"loc":{"start":{"line":160,"column":6},"end":{"line":160,"column":63}},"type":"if","locations":[{"start":{"line":160,"column":6},"end":{"line":160,"column":63}},{"start":{"line":160,"column":6},"end":{"line":160,"column":63}}],"line":160},"17":{"loc":{"start":{"line":163,"column":6},"end":{"line":190,"column":7}},"type":"if","locations":[{"start":{"line":163,"column":6},"end":{"line":190,"column":7}},{"start":{"line":163,"column":6},"end":{"line":190,"column":7}}],"line":163},"18":{"loc":{"start":{"line":177,"column":8},"end":{"line":184,"column":9}},"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":184,"column":9}},{"start":{"line":177,"column":8},"end":{"line":184,"column":9}}],"line":177},"19":{"loc":{"start":{"line":177,"column":12},"end":{"line":177,"column":93}},"type":"binary-expr","locations":[{"start":{"line":177,"column":12},"end":{"line":177,"column":28}},{"start":{"line":177,"column":32},"end":{"line":177,"column":61}},{"start":{"line":177,"column":65},"end":{"line":177,"column":93}}],"line":177},"20":{"loc":{"start":{"line":228,"column":10},"end":{"line":238,"column":11}},"type":"if","locations":[{"start":{"line":228,"column":10},"end":{"line":238,"column":11}},{"start":{"line":228,"column":10},"end":{"line":238,"column":11}}],"line":228},"21":{"loc":{"start":{"line":253,"column":6},"end":{"line":255,"column":7}},"type":"if","locations":[{"start":{"line":253,"column":6},"end":{"line":255,"column":7}},{"start":{"line":253,"column":6},"end":{"line":255,"column":7}}],"line":253},"22":{"loc":{"start":{"line":253,"column":10},"end":{"line":253,"column":69}},"type":"binary-expr","locations":[{"start":{"line":253,"column":10},"end":{"line":253,"column":38}},{"start":{"line":253,"column":42},"end":{"line":253,"column":69}}],"line":253},"23":{"loc":{"start":{"line":261,"column":31},"end":{"line":261,"column":67}},"type":"cond-expr","locations":[{"start":{"line":261,"column":51},"end":{"line":261,"column":60}},{"start":{"line":261,"column":63},"end":{"line":261,"column":67}}],"line":261},"24":{"loc":{"start":{"line":263,"column":6},"end":{"line":266,"column":7}},"type":"if","locations":[{"start":{"line":263,"column":6},"end":{"line":266,"column":7}},{"start":{"line":263,"column":6},"end":{"line":266,"column":7}}],"line":263},"25":{"loc":{"start":{"line":263,"column":10},"end":{"line":263,"column":78}},"type":"binary-expr","locations":[{"start":{"line":263,"column":10},"end":{"line":263,"column":26}},{"start":{"line":263,"column":30},"end":{"line":263,"column":78}}],"line":263},"26":{"loc":{"start":{"line":270,"column":33},"end":{"line":270,"column":75}},"type":"cond-expr","locations":[{"start":{"line":270,"column":52},"end":{"line":270,"column":62}},{"start":{"line":270,"column":65},"end":{"line":270,"column":75}}],"line":270},"27":{"loc":{"start":{"line":298,"column":8},"end":{"line":304,"column":9}},"type":"if","locations":[{"start":{"line":298,"column":8},"end":{"line":304,"column":9}},{"start":{"line":298,"column":8},"end":{"line":304,"column":9}}],"line":298},"28":{"loc":{"start":{"line":298,"column":12},"end":{"line":298,"column":55}},"type":"binary-expr","locations":[{"start":{"line":298,"column":12},"end":{"line":298,"column":18}},{"start":{"line":298,"column":22},"end":{"line":298,"column":33}},{"start":{"line":298,"column":37},"end":{"line":298,"column":55}}],"line":298},"29":{"loc":{"start":{"line":309,"column":8},"end":{"line":315,"column":9}},"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":315,"column":9}},{"start":{"line":309,"column":8},"end":{"line":315,"column":9}}],"line":309},"30":{"loc":{"start":{"line":325,"column":23},"end":{"line":325,"column":74}},"type":"binary-expr","locations":[{"start":{"line":325,"column":23},"end":{"line":325,"column":46}},{"start":{"line":325,"column":50},"end":{"line":325,"column":74}}],"line":325},"31":{"loc":{"start":{"line":327,"column":25},"end":{"line":327,"column":132}},"type":"cond-expr","locations":[{"start":{"line":327,"column":78},"end":{"line":327,"column":103}},{"start":{"line":327,"column":106},"end":{"line":327,"column":132}}],"line":327},"32":{"loc":{"start":{"line":328,"column":25},"end":{"line":328,"column":132}},"type":"cond-expr","locations":[{"start":{"line":328,"column":78},"end":{"line":328,"column":103}},{"start":{"line":328,"column":106},"end":{"line":328,"column":132}}],"line":328},"33":{"loc":{"start":{"line":338,"column":8},"end":{"line":340,"column":9}},"type":"if","locations":[{"start":{"line":338,"column":8},"end":{"line":340,"column":9}},{"start":{"line":338,"column":8},"end":{"line":340,"column":9}}],"line":338},"34":{"loc":{"start":{"line":341,"column":8},"end":{"line":347,"column":9}},"type":"if","locations":[{"start":{"line":341,"column":8},"end":{"line":347,"column":9}},{"start":{"line":341,"column":8},"end":{"line":347,"column":9}}],"line":341},"35":{"loc":{"start":{"line":350,"column":6},"end":{"line":352,"column":7}},"type":"if","locations":[{"start":{"line":350,"column":6},"end":{"line":352,"column":7}},{"start":{"line":350,"column":6},"end":{"line":352,"column":7}}],"line":350},"36":{"loc":{"start":{"line":350,"column":10},"end":{"line":350,"column":70}},"type":"binary-expr","locations":[{"start":{"line":350,"column":10},"end":{"line":350,"column":40}},{"start":{"line":350,"column":44},"end":{"line":350,"column":70}}],"line":350},"37":{"loc":{"start":{"line":362,"column":6},"end":{"line":365,"column":7}},"type":"if","locations":[{"start":{"line":362,"column":6},"end":{"line":365,"column":7}},{"start":{"line":362,"column":6},"end":{"line":365,"column":7}}],"line":362},"38":{"loc":{"start":{"line":371,"column":6},"end":{"line":375,"column":7}},"type":"if","locations":[{"start":{"line":371,"column":6},"end":{"line":375,"column":7}},{"start":{"line":371,"column":6},"end":{"line":375,"column":7}}],"line":371},"39":{"loc":{"start":{"line":395,"column":6},"end":{"line":398,"column":7}},"type":"if","locations":[{"start":{"line":395,"column":6},"end":{"line":398,"column":7}},{"start":{"line":395,"column":6},"end":{"line":398,"column":7}}],"line":395}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":7,"28":159,"29":159,"30":159,"31":471,"32":471,"33":444,"34":27,"35":27,"36":444,"37":132,"38":312,"39":276,"40":36,"41":159,"42":1,"43":1,"44":51,"45":54,"46":54,"47":36,"48":36,"49":36,"50":0,"51":0,"52":0,"53":36,"54":36,"55":36,"56":3,"57":3,"58":0,"59":0,"60":33,"61":3,"62":3,"63":30,"64":30,"65":30,"66":30,"67":30,"68":0,"69":0,"70":0,"71":36,"72":36,"73":36,"74":36,"75":30,"76":27,"77":9,"78":27,"79":0,"80":0,"81":0,"82":27,"83":27,"84":18,"85":27,"86":27,"87":27,"88":27,"89":0,"90":0,"91":0,"92":0,"93":0,"94":27,"95":27,"96":18,"97":27,"98":27,"99":27,"100":27,"101":27,"102":216,"103":27,"104":0,"105":27,"106":27,"107":216,"108":27,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":36,"129":36,"130":36,"131":36,"132":0,"133":36,"134":36,"135":36,"136":0,"137":0,"138":36,"139":27,"140":27,"141":27,"142":36,"143":36,"144":36,"145":36,"146":27,"147":27,"148":9,"149":9,"150":9,"151":0,"152":0,"153":9,"154":9,"155":9,"156":9,"157":0,"158":0,"159":12,"160":12,"161":12,"162":12,"163":12,"164":12,"165":12,"166":12,"167":12,"168":12,"169":36,"170":36,"171":36,"172":0,"173":36,"174":36,"175":36,"176":12,"177":0,"178":12,"179":12,"180":12,"181":12,"182":0,"183":0,"184":12,"185":12,"186":12,"187":12,"188":12,"189":4,"190":8,"191":12,"192":12,"193":12,"194":12,"195":12,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1},"f":{"0":1,"1":7,"2":159,"3":159,"4":159,"5":471,"6":276,"7":36,"8":51,"9":54,"10":36,"11":36,"12":3,"13":0,"14":33,"15":30,"16":0,"17":36,"18":36,"19":27,"20":27,"21":216,"22":216,"23":0,"24":0,"25":36,"26":36,"27":36,"28":36,"29":12,"30":12,"31":12,"32":12,"33":0,"34":0},"b":{"0":[1,0],"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,7],"5":[7,7],"6":[132,312],"7":[0,36],"8":[3,30],"9":[9,18],"10":[0,27],"11":[18,9],"12":[0,27],"13":[27,0,0],"14":[0,0],"15":[0,0],"16":[18,9],"17":[27,0],"18":[0,27],"19":[27,0,0],"20":[0,0],"21":[0,36],"22":[36,36],"23":[0,36],"24":[0,36],"25":[36,0],"26":[0,27],"27":[9,0],"28":[9,9,6],"29":[9,0],"30":[12,12],"31":[0,12],"32":[0,12],"33":[0,36],"34":[36,0],"35":[0,12],"36":[12,12],"37":[0,12],"38":[4,8],"39":[0,0]},"inputSourceMap":{"version":3,"sources":["mixin.refresh.js"],"names":["errors","debug","getDataDirectory","path","join","app","get","forecast","name","element","getForecastTimeConvertedFilePath","runTime","forecastTime","filePath","getForecastTimeFilePath","dirname","basename","extname","downloadForecastTime","promise","Promise","resolve","reject","fs","existsSync","logger","verbose","format","errorMessage","request","getForecastTimeRequest","on","err","error","response","statusCode","convert","message","file","createWriteStream","pipe","_","close","processForecastTime","grid","convertForecastTime","dataStore","saveToGridFS","toDate","transform","i","length","value","index","data","Object","assign","Grid","getMinMax","isExternalDataStorage","convertedFilePath","updateForecastTimeInDatabase","previousForecast","keepPastRuns","remove","query","geometry","$exists","removeFromGridFS","result","create","tileResolution","bounds","origin","size","resolution","tiles","tileset","map","toGeometry","tile","pick","timeseries","forEach","aggregateTiles","collection","Model","tilesetSize","getTiling","j","x","y","aggregate","$match","$group","_id","$push","minValue","maxValue","$last","toArray","refreshForecastTime","datetime","$select","find","paginate","isSameOrBefore","harvestForecastTime","code","previousRunTime","clone","subtract","seconds","runInterval","diff","oldestRunInterval","refreshForecastData","interval","lowerLimit","has","upperLimit","getNearestRunTime","lowerTime","times","timeOffset","add","discard","keepPastForecasts","isBefore","push","updateForecastData","updateRunning","info","now","moment","utc","dataDir","ensureDirSync","emptyDirSync","cleanForecastData","cleanupRunning","cleanGridFS"],"mappings":"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","file":"mixin.refresh.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/mixins","sourcesContent":["import path from 'path'\nimport fs from 'fs-extra'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport request from 'request'\nimport * as errors from '@feathersjs/errors'\nimport logger from 'winston'\nimport makeDebug from 'debug'\nimport { Grid } from '../common/grid'\nconst debug = makeDebug('weacast:weacast-core')\n\nexport default {\n\n  // Retrieve the path where downloaded/persited data are\n  getDataDirectory () {\n    return path.join(this.app.get('forecastPath'), this.forecast.name, this.element.name)\n  },\n\n  // Generate file name to store temporary output (i.e. converted) data, assume by default a similar name than getForecastTimeFilePath() with a json extension\n  getForecastTimeConvertedFilePath (runTime, forecastTime) {\n    const filePath = this.getForecastTimeFilePath(runTime, forecastTime)\n    return path.join(path.dirname(filePath), path.basename(filePath, path.extname(filePath)) + '.json')\n  },\n\n  downloadForecastTime (runTime, forecastTime) {\n    const promise = new Promise((resolve, reject) => {\n      const filePath = this.getForecastTimeFilePath(runTime, forecastTime)\n      if (fs.existsSync(filePath)) {\n        logger.verbose('Already downloaded ' + this.forecast.name + '/' + this.element.name + ' forecast at ' + forecastTime.format() + ' for run ' + runTime.format())\n        resolve(filePath)\n        return\n      }\n      // Get request options\n      logger.verbose('Downloading ' + this.forecast.name + '/' + this.element.name + ' forecast at ' + forecastTime.format() + ' for run ' + runTime.format())\n      let errorMessage = 'Could not download ' + this.forecast.name + '/' + this.element.name + ' forecast at ' + forecastTime.format() + ' for run ' + runTime.format()\n      // Get request options\n      request.get(this.getForecastTimeRequest(runTime, forecastTime))\n        .on('error', err => {\n          logger.error(errorMessage, err)\n          reject(err)\n        })\n        .on('timeout', err => {\n          logger.error(errorMessage + ', provider timed out')\n          reject(err)\n        })\n        .on('response', response => {\n          if (response.statusCode !== 200) {\n            errorMessage += ', provider responded with HTTP code ' + response.statusCode\n            reject(errors.convert({\n              name: response.statusCode,\n              message: errorMessage\n            }))\n          } else {\n            const file = fs.createWriteStream(filePath)\n            response.pipe(file)\n              .on('finish', _ => {\n                file.close()\n                logger.verbose('Written ' + this.forecast.name + '/' + this.element.name + ' forecast at ' + forecastTime.format() + ' for run ' + runTime.format())\n                resolve(filePath)\n              })\n              .on('error', err => {\n                logger.error(errorMessage + ', unable to write temporary file', err)\n                debug('Output TIFF file was : ' + filePath)\n                reject(err)\n              })\n          }\n        })\n    })\n\n    return promise\n  },\n\n  async processForecastTime (runTime, forecastTime) {\n    await this.downloadForecastTime(runTime, forecastTime)\n    const grid = await this.convertForecastTime(runTime, forecastTime)\n    if (this.element.dataStore === 'gridfs') {\n      await this.saveToGridFS(this.getForecastTimeConvertedFilePath(runTime, forecastTime),\n        { forecastTime: forecastTime.toDate() })\n    }\n    // Check for processing function\n    if (typeof this.element.transform === 'function') {\n      for (let i = 0; i < grid.length; i++) {\n        grid[i] = this.element.transform({\n          runTime, forecastTime, value: grid[i], index: i, data: grid, forecast: this.forecast, element: this.element\n        })\n      }\n    }\n    // Compute min/max values\n    const forecast = Object.assign({\n      runTime: runTime,\n      forecastTime: forecastTime\n    }, Grid.getMinMax(grid))\n    // Depending on data storage if we keep files include a link to files in addition to data directly in the object\n    if (this.isExternalDataStorage()) {\n      Object.assign(forecast, {\n        filePath: this.getForecastTimeFilePath(runTime, forecastTime),\n        convertedFilePath: this.getForecastTimeConvertedFilePath(runTime, forecastTime)\n      })\n    }\n    return Object.assign(forecast, { data: grid })\n  },\n\n  async updateForecastTimeInDatabase (forecast, previousForecast) {\n    // Test if we have to remove existing data first, except if keeping all run times\n    if (previousForecast && !this.forecast.keepPastRuns && !this.element.keepPastRuns) {\n      await this.remove(null, {\n        query: {\n          forecastTime: forecast.forecastTime,\n          geometry: { $exists: false } // Raw data doesn't have a geometry\n        }\n      })\n      // Remove persistent file associated with data if any\n      if (this.element.dataStore === 'fs') {\n        fs.remove(previousForecast.convertedFilePath)\n      } else if (this.element.dataStore === 'gridfs') {\n        this.removeFromGridFS(previousForecast.convertedFilePath)\n      }\n    }\n\n    // Do not store in-memory data if delegated to external storage\n    const data = forecast.data\n    if (this.isExternalDataStorage()) delete forecast.data\n    const result = await this.create(forecast)\n    // Save tiles if tiling is enabled\n    if (this.forecast.tileResolution) {\n      const grid = new Grid({\n        bounds: this.forecast.bounds,\n        origin: this.forecast.origin,\n        size: this.forecast.size,\n        resolution: this.forecast.resolution,\n        data\n      })\n      let tiles = grid.tileset(this.forecast.tileResolution)\n      tiles = tiles.map(tile =>\n        Object.assign(Grid.toGeometry(tile.bounds),\n          tile,\n          Grid.getMinMax(tile.data),\n          _.pick(forecast, ['runTime', 'forecastTime']),\n          { timeseries: false }) // Tag this is not an aggregated tile\n      )\n      // Test if we have to remove existing data first, except if keeping all run times\n      if (previousForecast && !this.forecast.keepPastRuns && !this.element.keepPastRuns) {\n        await this.remove(null, {\n          query: {\n            forecastTime: forecast.forecastTime,\n            geometry: { $exists: true } // Only tiles have a geometry\n          }\n        })\n      }\n      await this.create(tiles)\n      // Do not keep track of all in-memory data\n      tiles.forEach(tile => delete tile.data)\n    }\n    return result\n  },\n\n  async aggregateTiles () {\n    const collection = this.Model\n    const grid = new Grid({\n      bounds: this.forecast.bounds,\n      origin: this.forecast.origin,\n      size: this.forecast.size,\n      resolution: this.forecast.resolution\n    })\n    const { tilesetSize } = grid.getTiling(this.forecast.tileResolution)\n    logger.verbose('Aggregating tiles for ' + this.forecast.name + '/' + this.element.name + ' forecast')\n    // Iterate over tiles\n    for (let j = 0; j < tilesetSize[1]; j++) {\n      for (let i = 0; i < tilesetSize[0]; i++) {\n        // Delete previous aggregated tile if any\n        await this.remove(null, { query: { x: i, y: j, timeseries: true } })\n        // Aggregate data over time for current tile\n        const tiles = await collection.aggregate([{\n          // Select only single and available data for current tile\n          $match: { x: i, y: j, timeseries: false, data: { $exists: true } }\n        }, {\n          $group: {\n            _id: { x: '$x', y: '$y' }, // Group by tile so that we get a single merged result\n            forecastTime: { $push: '$forecastTime' }, // Keep track of all forecast times\n            runTime: { $push: '$runTime' }, // Keep track of all run times\n            data: { $push: '$data' }, // Accumulate data\n            minValue: { $push: '$minValue' }, // Accumulate min\n            maxValue: { $push: '$maxValue' }, // Accumulate max\n            geometry: { $last: '$geometry' } // geometry is similar for all results, keep last\n          }\n        }]).toArray()\n        if (tiles.length !== 1) {\n          logger.error('Could not aggregate tiles for ' + this.forecast.name + '/' + this.element.name + ' forecast')\n        } else {\n          const tile = tiles[0]\n          // Delete temporary tiles with a single forecast time\n          await this.remove(null, { query: { x: i, y: j } })\n          // Then save aggregated tile extracting x/y from group by ID and tagging as timeseries aggregation\n          Object.assign(tile, tile._id, { timeseries: true })\n          delete tile._id\n          await this.create(tile)\n        }\n      }\n    }\n  },\n\n  async refreshForecastTime (datetime, runTime, forecastTime) {\n    // Retrieve last available forecast if any\n    const query = {\n      $select: ['_id', 'runTime', 'forecastTime'], // We only need object ID\n      forecastTime\n    }\n    if (this.forecast.keepPastRuns || this.element.keepPastRuns) {\n      query.runTime = runTime\n    }\n    const result = await this.find({\n      query,\n      paginate: false\n    })\n\n    const previousForecast = (result.length > 0 ? result[0] : null)\n    // Check if we are already up-to-date\n    if (previousForecast && runTime.isSameOrBefore(previousForecast.runTime)) {\n      logger.verbose('Up-to-date ' + this.forecast.name + '/' + this.element.name + ' forecast at ' + forecastTime.format() + ' for run ' + runTime.format() + ', not looking further')\n      return previousForecast\n    }\n    // Otherwise download and process data\n    let forecast = await this.processForecastTime(runTime, forecastTime)\n    forecast = await this.updateForecastTimeInDatabase(forecast, previousForecast)\n    logger.verbose((previousForecast ? 'Updated ' : 'Created ') + this.forecast.name + '/' + this.element.name + ' forecast at ' + forecastTime.format() + ' for run ' + runTime.format())\n    // Remove temporary file associated with data except when using fs data store\n    // FIXME: trying to remove temporary files as soon as possible raises \"EBUSY: resource busy or locked\" because there is probably some async operation still running\n    // For now we remove temporary files as a whole by removing the data dir on each update process of the element\n    /*\n    if (this.element.dataStore !== 'fs') {\n      const filePath = this.getForecastTimeFilePath(runTime, forecastTime)\n      const convertedFilePath = this.getForecastTimeConvertedFilePath(runTime, forecastTime)\n      if (fs.existsSync(filePath)) fs.remove(filePath)\n      if (fs.existsSync(convertedFilePath)) fs.remove(convertedFilePath)\n    }\n    */\n    return forecast\n  },\n\n  async harvestForecastTime (datetime, runTime, forecastTime) {\n    try {\n      const result = await this.refreshForecastTime(datetime, runTime, forecastTime)\n      // Do not keep track of all in-memory data\n      delete result.data\n      return result\n    } catch (error) {\n      // 404 might be 'normal' errors because some data are not available at the planned run time from meteo providers\n      // or some might vary the time steps available in the forecast depending on the run\n      if (!error || !error.code || error.code !== 404) {\n        logger.error('Could not update ' + this.forecast.name + '/' + this.element.name + ' forecast at ' + forecastTime.format() + ' for run ' + runTime.format())\n        logger.error(error.message)\n      } else {\n        logger.verbose('Could not update ' + this.forecast.name + '/' + this.element.name + ' forecast at ' + forecastTime.format() + ' for run ' + runTime.format())\n        logger.verbose(error.message)\n      }\n      const previousRunTime = runTime.clone().subtract({ seconds: this.forecast.runInterval })\n      // When data for current time is not available we might try previous data\n      // check here that we go back until the configured limit\n      // because otherwise this means there is a real problem with the provider and/or we will have outdated data\n      if (datetime.diff(previousRunTime, 'seconds') > this.forecast.oldestRunInterval) {\n        logger.verbose('Hit oldest run time limit ' + runTime.format() + ' on ' + this.forecast.name + '/' + this.element.name + ', there is a too much big gap in data from the provider')\n        throw error\n      } else {\n        logger.verbose('Harvesting further run time ' + previousRunTime.format() + ' on ' + this.forecast.name + '/' + this.element.name)\n        await this.harvestForecastTime(datetime, previousRunTime, forecastTime)\n      }\n    }\n  },\n\n  async refreshForecastData (datetime) {\n    // Retrieve forecast or overriden element update options\n    const interval = this.element.interval || this.forecast.interval\n    // These ones can be 0 take care the way the test is written\n    const lowerLimit = (_.has(this.element, 'lowerLimit') ? this.element.lowerLimit : this.forecast.lowerLimit)\n    const upperLimit = (_.has(this.element, 'upperLimit') ? this.element.upperLimit : this.forecast.upperLimit)\n    // Compute nearest run T0\n    const runTime = this.getNearestRunTime(datetime)\n    // We don't care about the past, however a forecast is still potentially valid at least until we reach the next one\n    const lowerTime = datetime.clone().subtract({ seconds: interval })\n    const times = []\n    // Check for each forecast step if update is required\n    for (let timeOffset = lowerLimit; timeOffset <= upperLimit; timeOffset += interval) {\n      const forecastTime = runTime.clone().add({ seconds: timeOffset })\n      let discard = false\n      if (!this.forecast.keepPastForecasts) {\n        discard = forecastTime.isBefore(lowerTime)\n      }\n      if (!discard) {\n        try {\n          times.push(await this.harvestForecastTime(datetime, runTime, forecastTime))\n        } catch (error) {\n          // This catch does not rethrow the error so that the update process will not stop and we try the next time\n        }\n      }\n    }\n    // Aggregate tiles to generate timeseries if anabled and tiling as well\n    if (this.forecast.tileResolution && this.forecast.timeseries) {\n      this.aggregateTiles()\n    }\n    return times\n  },\n\n  async updateForecastData () {\n    // Avoid stacking updates\n    if (this.updateRunning) {\n      logger.info('Skipping forecast data update on ' + this.forecast.name + '/' + this.element.name + ' as previous one is not yet finished')\n      return\n    }\n    this.updateRunning = true\n    const now = moment.utc()\n    logger.info('Checking for up-to-date forecast data on ' + this.forecast.name + '/' + this.element.name)\n    // Make sure we've got somewhere to put data and clean it up if we only use file as a temporary data store\n    const dataDir = this.getDataDirectory()\n    if (this.element.dataStore === 'fs') {\n      fs.ensureDirSync(dataDir)\n    } else {\n      fs.emptyDirSync(dataDir)\n    }\n    // Try data refresh for current time\n    try {\n      const times = await this.refreshForecastData(now)\n      logger.info('Completed forecast data update on ' + this.forecast.name + '/' + this.element.name)\n      this.updateRunning = false\n      return times\n    } catch (error) {\n      logger.error('Forecast data update on ' + this.forecast.name + '/' + this.element.name + ' failed')\n      this.updateRunning = false\n      throw error\n    }\n  },\n\n  async cleanForecastData () {\n    // Avoid stacking cleanups\n    if (this.cleanupRunning) {\n      logger.info('Skipping forecast data cleanup on ' + this.forecast.name + '/' + this.element.name + ' as previous one is not yet finished')\n      return\n    }\n    this.cleanupRunning = true\n    const now = moment.utc()\n    logger.info('Cleaning up forecast data on ' + this.forecast.name + '/' + this.element.name)\n    // Try data cleanup for current time\n    try {\n      await this.cleanGridFS(now)\n      logger.info('Completed forecast data cleanup on ' + this.forecast.name + '/' + this.element.name)\n      this.cleanupRunning = false\n    } catch (error) {\n      logger.error('Forecast data cleanup on ' + this.forecast.name + '/' + this.element.name + ' failed')\n      this.cleanupRunning = false\n      throw error\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e02f5a3fd658c8dce4d12a82a5aa2bad191c5f7a","contentHash":"eed4b16a5dfce59ee2e34fc1361b268b9bed4cf1a4930f2ce63b51ac13e3ed0c"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/services/index.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/services/index.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":13},"end":{"line":5,"column":42}},"2":{"start":{"line":7,"column":39},"end":{"line":7,"column":93}},"3":{"start":{"line":9,"column":0},"end":{"line":13,"column":2}},"4":{"start":{"line":10,"column":14},"end":{"line":10,"column":18}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":167}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":31}},"loc":{"start":{"line":7,"column":37},"end":{"line":7,"column":95}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":17},"end":{"line":9,"column":18}},"loc":{"start":{"line":9,"column":29},"end":{"line":13,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":46},"end":{"line":7,"column":92}},"type":"cond-expr","locations":[{"start":{"line":7,"column":70},"end":{"line":7,"column":73}},{"start":{"line":7,"column":76},"end":{"line":7,"column":92}}],"line":7},"1":{"loc":{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":49}},{"start":{"line":7,"column":53},"end":{"line":7,"column":67}}],"line":7}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2},"f":{"0":1,"1":2},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["index.js"],"names":["module","exports","app","createService","path","join","__dirname","getServiceOptions"],"mappings":";;AAAA;;;;;;AAEAA,OAAOC,OAAP,GAAiB,YAAY;AAC3B,QAAMC,MAAM,IAAZ;;AAEAA,MAAIC,aAAJ,CAAkB,WAAlB,EACEC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,QAA3B,CADF,EAEEF,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,UAA3B,CAFF,EAGEJ,IAAIK,iBAAJ,CAAsB,WAAtB,CAHF;AAID,CAPD","file":"index.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/services","sourcesContent":["import path from 'path'\n\nmodule.exports = function () {\n  const app = this\n\n  app.createService('forecasts',\n    path.join(__dirname, '..', 'models'),\n    path.join(__dirname, '..', 'services'),\n    app.getServiceOptions('forecasts'))\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f96b1d184139f1057033133a70759f3a2c79394c","contentHash":"a7f982812f4a6af29b8d8bd7107cb766c6f2d07adae9890c7f3f948682daed7c"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/elements.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/elements.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":14},"end":{"line":7,"column":31}},"2":{"start":{"line":9,"column":15},"end":{"line":9,"column":46}},"3":{"start":{"line":11,"column":15},"end":{"line":11,"column":33}},"4":{"start":{"line":13,"column":16},"end":{"line":13,"column":48}},"5":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"6":{"start":{"line":17,"column":33},"end":{"line":17,"column":456}},"7":{"start":{"line":17,"column":64},"end":{"line":17,"column":89}},"8":{"start":{"line":17,"column":91},"end":{"line":17,"column":453}},"9":{"start":{"line":17,"column":165},"end":{"line":17,"column":263}},"10":{"start":{"line":17,"column":182},"end":{"line":17,"column":195}},"11":{"start":{"line":17,"column":209},"end":{"line":17,"column":219}},"12":{"start":{"line":17,"column":239},"end":{"line":17,"column":253}},"13":{"start":{"line":17,"column":254},"end":{"line":17,"column":261}},"14":{"start":{"line":17,"column":264},"end":{"line":17,"column":426}},"15":{"start":{"line":17,"column":281},"end":{"line":17,"column":296}},"16":{"start":{"line":17,"column":306},"end":{"line":17,"column":424}},"17":{"start":{"line":17,"column":360},"end":{"line":17,"column":380}},"18":{"start":{"line":17,"column":401},"end":{"line":17,"column":420}},"19":{"start":{"line":17,"column":429},"end":{"line":17,"column":449}},"20":{"start":{"line":20,"column":0},"end":{"line":132,"column":5}},"21":{"start":{"line":21,"column":13},"end":{"line":125,"column":4}},"22":{"start":{"line":22,"column":17},"end":{"line":41,"column":8}},"23":{"start":{"line":23,"column":18},"end":{"line":36,"column":8}},"24":{"start":{"line":25,"column":24},"end":{"line":25,"column":61}},"25":{"start":{"line":26,"column":8},"end":{"line":35,"column":9}},"26":{"start":{"line":26,"column":21},"end":{"line":26,"column":22}},"27":{"start":{"line":27,"column":25},"end":{"line":27,"column":35}},"28":{"start":{"line":29,"column":10},"end":{"line":34,"column":14}},"29":{"start":{"line":30,"column":12},"end":{"line":33,"column":15}},"30":{"start":{"line":31,"column":14},"end":{"line":31,"column":53}},"31":{"start":{"line":32,"column":14},"end":{"line":32,"column":44}},"32":{"start":{"line":38,"column":6},"end":{"line":40,"column":8}},"33":{"start":{"line":39,"column":8},"end":{"line":39,"column":44}},"34":{"start":{"line":43,"column":16},"end":{"line":60,"column":8}},"35":{"start":{"line":44,"column":18},"end":{"line":55,"column":8}},"36":{"start":{"line":46,"column":8},"end":{"line":54,"column":9}},"37":{"start":{"line":46,"column":21},"end":{"line":46,"column":22}},"38":{"start":{"line":47,"column":24},"end":{"line":47,"column":85}},"39":{"start":{"line":49,"column":10},"end":{"line":53,"column":11}},"40":{"start":{"line":50,"column":12},"end":{"line":50,"column":46}},"41":{"start":{"line":52,"column":12},"end":{"line":52,"column":51}},"42":{"start":{"line":57,"column":6},"end":{"line":59,"column":8}},"43":{"start":{"line":58,"column":8},"end":{"line":58,"column":44}},"44":{"start":{"line":62,"column":4},"end":{"line":62,"column":74}},"45":{"start":{"line":63,"column":29},"end":{"line":63,"column":56}},"46":{"start":{"line":65,"column":19},"end":{"line":70,"column":6}},"47":{"start":{"line":71,"column":4},"end":{"line":75,"column":5}},"48":{"start":{"line":72,"column":6},"end":{"line":72,"column":65}},"49":{"start":{"line":74,"column":6},"end":{"line":74,"column":46}},"50":{"start":{"line":78,"column":25},"end":{"line":78,"column":27}},"51":{"start":{"line":79,"column":4},"end":{"line":84,"column":7}},"52":{"start":{"line":80,"column":21},"end":{"line":80,"column":40}},"53":{"start":{"line":82,"column":6},"end":{"line":82,"column":63}},"54":{"start":{"line":82,"column":35},"end":{"line":82,"column":63}},"55":{"start":{"line":83,"column":6},"end":{"line":83,"column":43}},"56":{"start":{"line":88,"column":34},"end":{"line":88,"column":67}},"57":{"start":{"line":89,"column":4},"end":{"line":93,"column":7}},"58":{"start":{"line":90,"column":6},"end":{"line":92,"column":9}},"59":{"start":{"line":91,"column":8},"end":{"line":91,"column":139}},"60":{"start":{"line":95,"column":4},"end":{"line":104,"column":5}},"61":{"start":{"line":98,"column":6},"end":{"line":98,"column":36}},"62":{"start":{"line":100,"column":6},"end":{"line":103,"column":7}},"63":{"start":{"line":101,"column":8},"end":{"line":101,"column":131}},"64":{"start":{"line":102,"column":8},"end":{"line":102,"column":60}},"65":{"start":{"line":107,"column":28},"end":{"line":109,"column":6}},"66":{"start":{"line":108,"column":6},"end":{"line":108,"column":44}},"67":{"start":{"line":111,"column":4},"end":{"line":124,"column":5}},"68":{"start":{"line":114,"column":6},"end":{"line":114,"column":35}},"69":{"start":{"line":117,"column":28},"end":{"line":117,"column":92}},"70":{"start":{"line":118,"column":6},"end":{"line":123,"column":7}},"71":{"start":{"line":119,"column":8},"end":{"line":122,"column":32}},"72":{"start":{"line":120,"column":10},"end":{"line":120,"column":124}},"73":{"start":{"line":121,"column":10},"end":{"line":121,"column":51}},"74":{"start":{"line":128,"column":4},"end":{"line":128,"column":39}},"75":{"start":{"line":131,"column":2},"end":{"line":131,"column":28}},"76":{"start":{"line":134,"column":0},"end":{"line":134,"column":33}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":31}},"loc":{"start":{"line":15,"column":37},"end":{"line":15,"column":95}},"line":15},"1":{"name":"_asyncToGenerator","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":26}},"loc":{"start":{"line":17,"column":31},"end":{"line":17,"column":458}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":40},"end":{"line":17,"column":41}},"loc":{"start":{"line":17,"column":52},"end":{"line":17,"column":455}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":110},"end":{"line":17,"column":111}},"loc":{"start":{"line":17,"column":137},"end":{"line":17,"column":451}},"line":17},"4":{"name":"step","decl":{"start":{"line":17,"column":148},"end":{"line":17,"column":152}},"loc":{"start":{"line":17,"column":163},"end":{"line":17,"column":428}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":17,"column":341},"end":{"line":17,"column":342}},"loc":{"start":{"line":17,"column":358},"end":{"line":17,"column":382}},"line":17},"6":{"name":"(anonymous_6)","decl":{"start":{"line":17,"column":384},"end":{"line":17,"column":385}},"loc":{"start":{"line":17,"column":399},"end":{"line":17,"column":422}},"line":17},"7":{"name":"(anonymous_7)","decl":{"start":{"line":20,"column":19},"end":{"line":20,"column":20}},"loc":{"start":{"line":20,"column":25},"end":{"line":132,"column":1}},"line":20},"8":{"name":"(anonymous_8)","decl":{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},"loc":{"start":{"line":21,"column":71},"end":{"line":125,"column":3}},"line":21},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":18},"end":{"line":22,"column":19}},"loc":{"start":{"line":22,"column":24},"end":{"line":41,"column":5}},"line":22},"10":{"name":"(anonymous_10)","decl":{"start":{"line":23,"column":36},"end":{"line":23,"column":37}},"loc":{"start":{"line":23,"column":49},"end":{"line":36,"column":7}},"line":23},"11":{"name":"(anonymous_11)","decl":{"start":{"line":29,"column":55},"end":{"line":29,"column":56}},"loc":{"start":{"line":29,"column":74},"end":{"line":34,"column":11}},"line":29},"12":{"name":"(anonymous_12)","decl":{"start":{"line":30,"column":54},"end":{"line":30,"column":55}},"loc":{"start":{"line":30,"column":71},"end":{"line":33,"column":13}},"line":30},"13":{"name":"update","decl":{"start":{"line":38,"column":22},"end":{"line":38,"column":28}},"loc":{"start":{"line":38,"column":31},"end":{"line":40,"column":7}},"line":38},"14":{"name":"(anonymous_14)","decl":{"start":{"line":43,"column":17},"end":{"line":43,"column":18}},"loc":{"start":{"line":43,"column":23},"end":{"line":60,"column":5}},"line":43},"15":{"name":"(anonymous_15)","decl":{"start":{"line":44,"column":36},"end":{"line":44,"column":37}},"loc":{"start":{"line":44,"column":49},"end":{"line":55,"column":7}},"line":44},"16":{"name":"clean","decl":{"start":{"line":57,"column":22},"end":{"line":57,"column":27}},"loc":{"start":{"line":57,"column":30},"end":{"line":59,"column":7}},"line":57},"17":{"name":"(anonymous_17)","decl":{"start":{"line":79,"column":30},"end":{"line":79,"column":31}},"loc":{"start":{"line":79,"column":49},"end":{"line":84,"column":5}},"line":79},"18":{"name":"(anonymous_18)","decl":{"start":{"line":89,"column":64},"end":{"line":89,"column":65}},"loc":{"start":{"line":89,"column":84},"end":{"line":93,"column":5}},"line":89},"19":{"name":"(anonymous_19)","decl":{"start":{"line":90,"column":26},"end":{"line":90,"column":27}},"loc":{"start":{"line":90,"column":45},"end":{"line":92,"column":7}},"line":90},"20":{"name":"(anonymous_20)","decl":{"start":{"line":107,"column":53},"end":{"line":107,"column":54}},"loc":{"start":{"line":107,"column":72},"end":{"line":109,"column":5}},"line":107},"21":{"name":"(anonymous_21)","decl":{"start":{"line":119,"column":19},"end":{"line":119,"column":20}},"loc":{"start":{"line":119,"column":31},"end":{"line":122,"column":9}},"line":119},"22":{"name":"initializeElements","decl":{"start":{"line":127,"column":11},"end":{"line":127,"column":29}},"loc":{"start":{"line":127,"column":44},"end":{"line":129,"column":3}},"line":127}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":46},"end":{"line":15,"column":92}},"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}],"line":15},"1":{"loc":{"start":{"line":15,"column":46},"end":{"line":15,"column":67}},"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}],"line":15},"2":{"loc":{"start":{"line":17,"column":264},"end":{"line":17,"column":426}},"type":"if","locations":[{"start":{"line":17,"column":264},"end":{"line":17,"column":426}},{"start":{"line":17,"column":264},"end":{"line":17,"column":426}}],"line":17},"3":{"loc":{"start":{"line":71,"column":4},"end":{"line":75,"column":5}},"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":75,"column":5}},{"start":{"line":71,"column":4},"end":{"line":75,"column":5}}],"line":71},"4":{"loc":{"start":{"line":80,"column":21},"end":{"line":80,"column":40}},"type":"binary-expr","locations":[{"start":{"line":80,"column":21},"end":{"line":80,"column":35}},{"start":{"line":80,"column":39},"end":{"line":80,"column":40}}],"line":80},"5":{"loc":{"start":{"line":82,"column":6},"end":{"line":82,"column":63}},"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":63}},{"start":{"line":82,"column":6},"end":{"line":82,"column":63}}],"line":82},"6":{"loc":{"start":{"line":95,"column":4},"end":{"line":104,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":104,"column":5}},{"start":{"line":95,"column":4},"end":{"line":104,"column":5}}],"line":95},"7":{"loc":{"start":{"line":100,"column":6},"end":{"line":103,"column":7}},"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":103,"column":7}},{"start":{"line":100,"column":6},"end":{"line":103,"column":7}}],"line":100},"8":{"loc":{"start":{"line":111,"column":4},"end":{"line":124,"column":5}},"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":124,"column":5}},{"start":{"line":111,"column":4},"end":{"line":124,"column":5}}],"line":111},"9":{"loc":{"start":{"line":117,"column":28},"end":{"line":117,"column":92}},"type":"cond-expr","locations":[{"start":{"line":117,"column":59},"end":{"line":117,"column":82}},{"start":{"line":117,"column":85},"end":{"line":117,"column":92}}],"line":117},"10":{"loc":{"start":{"line":118,"column":6},"end":{"line":123,"column":7}},"type":"if","locations":[{"start":{"line":118,"column":6},"end":{"line":123,"column":7}},{"start":{"line":118,"column":6},"end":{"line":123,"column":7}}],"line":118}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":1},"f":{"0":2,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"0":[0,2],"1":[2,2],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"inputSourceMap":{"version":3,"sources":["elements.js"],"names":["app","forecast","servicesPath","buckets","_","keys","elementBuckets","i","length","bucket","Promise","all","map","service","updateForecastData","catch","logger","error","message","updateRunning","update","elementsToClean","getService","name","cleanForecastData","clean","info","forecastsService","result","find","query","$select","data","patch","_id","create","elements","forEach","element","push","elementServiceOptions","getServiceOptions","mapValues","createElementService","Object","assign","serviceOptions","updateInterval","setTimeout","setInterval","filter","dataStore","cleanInterval","initializeElements"],"mappings":"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","file":"elements.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src","sourcesContent":["import _ from 'lodash'\nimport logger from 'winston'\n\n// Create all element services\nexport default async function initializeElements (app, forecast, servicesPath) {\n  logger.info('Initializing ' + forecast.name + ' forecast')\n  const forecastsService = app.getService('forecasts')\n  // Register the forecast model if not already done\n  const result = await forecastsService.find({\n    query: {\n      name: forecast.name,\n      $select: ['_id'] // We only need object ID\n    }\n  })\n  if (result.data.length > 0) {\n    await forecastsService.patch(result.data[0]._id, forecast)\n  } else {\n    await forecastsService.create(forecast)\n  }\n\n  // Create download buckets\n  let elementBuckets = {}\n  forecast.elements.forEach(element => {\n    const bucket = element.bucket || 0\n    // Initialize bucket\n    if (!elementBuckets[bucket]) elementBuckets[bucket] = []\n    elementBuckets[bucket].push(element)\n  })\n\n  // Then generate services for each forecast element in buckets\n  // Retrieve generic elements options if any\n  const elementServiceOptions = app.getServiceOptions('elements')\n  elementBuckets = _.mapValues(elementBuckets, elements => {\n    return elements.map(element => app.createElementService(forecast, element, servicesPath,\n      Object.assign({}, element.serviceOptions, elementServiceOptions)))\n  })\n\n  async function update () {\n    // Iterate over buckets\n    const buckets = _.keys(elementBuckets)\n    for (let i = 0; i < buckets.length; i++) {\n      const bucket = buckets[i]\n      // For each bucket launch download tasks in parallel\n      await Promise.all(elementBuckets[bucket].map(service => {\n        return service.updateForecastData().catch(error => {\n          logger.error(error.message)\n          service.updateRunning = false\n        })\n      }))\n    }\n  }\n\n  if (forecast.updateInterval >= 0) {\n    // Trigger the initial harvesting, i.e. try data refresh for current time\n    // Add a small offset to wait for everything being initialized\n    setTimeout(update, 30 * 1000)\n    // Then plan next updates according to provided update interval if required\n    if (forecast.updateInterval > 0) {\n      logger.info('Installing forecast update on ' + forecast.name + ' with interval (s) ' + forecast.updateInterval)\n      setInterval(update, 1000 * forecast.updateInterval)\n    }\n  }\n\n  // Process elements with GridFS data store which requires manual cleanup\n  const elementsToClean = forecast.elements.filter(element => element.dataStore === 'gridfs')\n\n  async function clean () {\n    // Iterate over required elements\n    for (let i = 0; i < elementsToClean.length; i++) {\n      let service = app.getService(forecast.name + '/' + elementsToClean[i].name)\n      // Launch clean task\n      try {\n        await service.cleanForecastData()\n      } catch (error) {\n        logger.error(error.message)\n      }\n    }\n  }\n\n  if (elementsToClean.length > 0) {\n    // Trigger the initial cleanup, i.e. try data cleanup for current time\n    // Add a small offset to wait for everything being initialized\n    setTimeout(clean, 10 * 1000)\n    // Then plan next cleanups according to provided clean interval if required, alternatively with data update\n    // Provide a default interval if no updates\n    const cleanInterval = (forecast.updateInterval >= 0 ? forecast.updateInterval : 30 * 60)\n    if (cleanInterval > 0) {\n      setTimeout(() => {\n        logger.info('Installing forecast cleanup on ' + forecast.name + ' with interval (s) ' + cleanInterval)\n        setInterval(clean, 1000 * cleanInterval)\n      }, 0.5 * cleanInterval)\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"58a82ddad52f7a08086c8f9ff2db42a33302fe41","contentHash":"263e09a28d975d4b14d13a88e65df1af4e66b96c528f21d12bb3ffa28cd37659"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/plugin.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/plugin.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":15},"end":{"line":7,"column":33}},"2":{"start":{"line":9,"column":16},"end":{"line":9,"column":48}},"3":{"start":{"line":11,"column":16},"end":{"line":11,"column":37}},"4":{"start":{"line":13,"column":17},"end":{"line":13,"column":50}},"5":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"6":{"start":{"line":17,"column":33},"end":{"line":17,"column":456}},"7":{"start":{"line":17,"column":64},"end":{"line":17,"column":89}},"8":{"start":{"line":17,"column":91},"end":{"line":17,"column":453}},"9":{"start":{"line":17,"column":165},"end":{"line":17,"column":263}},"10":{"start":{"line":17,"column":182},"end":{"line":17,"column":195}},"11":{"start":{"line":17,"column":209},"end":{"line":17,"column":219}},"12":{"start":{"line":17,"column":239},"end":{"line":17,"column":253}},"13":{"start":{"line":17,"column":254},"end":{"line":17,"column":261}},"14":{"start":{"line":17,"column":264},"end":{"line":17,"column":426}},"15":{"start":{"line":17,"column":281},"end":{"line":17,"column":296}},"16":{"start":{"line":17,"column":306},"end":{"line":17,"column":424}},"17":{"start":{"line":17,"column":360},"end":{"line":17,"column":380}},"18":{"start":{"line":17,"column":401},"end":{"line":17,"column":420}},"19":{"start":{"line":17,"column":429},"end":{"line":17,"column":449}},"20":{"start":{"line":20,"column":0},"end":{"line":42,"column":5}},"21":{"start":{"line":21,"column":13},"end":{"line":35,"column":4}},"22":{"start":{"line":22,"column":22},"end":{"line":24,"column":11}},"23":{"start":{"line":23,"column":6},"end":{"line":23,"column":37}},"24":{"start":{"line":25,"column":4},"end":{"line":28,"column":5}},"25":{"start":{"line":26,"column":6},"end":{"line":26,"column":99}},"26":{"start":{"line":27,"column":6},"end":{"line":27,"column":13}},"27":{"start":{"line":30,"column":4},"end":{"line":30,"column":71}},"28":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"29":{"start":{"line":32,"column":17},"end":{"line":32,"column":18}},"30":{"start":{"line":33,"column":6},"end":{"line":33,"column":69}},"31":{"start":{"line":38,"column":4},"end":{"line":38,"column":39}},"32":{"start":{"line":41,"column":2},"end":{"line":41,"column":26}},"33":{"start":{"line":44,"column":0},"end":{"line":44,"column":33}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":31}},"loc":{"start":{"line":15,"column":37},"end":{"line":15,"column":95}},"line":15},"1":{"name":"_asyncToGenerator","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":26}},"loc":{"start":{"line":17,"column":31},"end":{"line":17,"column":458}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":40},"end":{"line":17,"column":41}},"loc":{"start":{"line":17,"column":52},"end":{"line":17,"column":455}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":110},"end":{"line":17,"column":111}},"loc":{"start":{"line":17,"column":137},"end":{"line":17,"column":451}},"line":17},"4":{"name":"step","decl":{"start":{"line":17,"column":148},"end":{"line":17,"column":152}},"loc":{"start":{"line":17,"column":163},"end":{"line":17,"column":428}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":17,"column":341},"end":{"line":17,"column":342}},"loc":{"start":{"line":17,"column":358},"end":{"line":17,"column":382}},"line":17},"6":{"name":"(anonymous_6)","decl":{"start":{"line":17,"column":384},"end":{"line":17,"column":385}},"loc":{"start":{"line":17,"column":399},"end":{"line":17,"column":422}},"line":17},"7":{"name":"(anonymous_7)","decl":{"start":{"line":20,"column":19},"end":{"line":20,"column":20}},"loc":{"start":{"line":20,"column":25},"end":{"line":42,"column":1}},"line":20},"8":{"name":"(anonymous_8)","decl":{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},"loc":{"start":{"line":21,"column":67},"end":{"line":35,"column":3}},"line":21},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":73},"end":{"line":22,"column":74}},"loc":{"start":{"line":22,"column":93},"end":{"line":24,"column":5}},"line":22},"10":{"name":"initializePlugin","decl":{"start":{"line":37,"column":11},"end":{"line":37,"column":27}},"loc":{"start":{"line":37,"column":42},"end":{"line":39,"column":3}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":46},"end":{"line":15,"column":92}},"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}],"line":15},"1":{"loc":{"start":{"line":15,"column":46},"end":{"line":15,"column":67}},"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}],"line":15},"2":{"loc":{"start":{"line":17,"column":264},"end":{"line":17,"column":426}},"type":"if","locations":[{"start":{"line":17,"column":264},"end":{"line":17,"column":426}},{"start":{"line":17,"column":264},"end":{"line":17,"column":426}}],"line":17},"3":{"loc":{"start":{"line":22,"column":22},"end":{"line":24,"column":11}},"type":"cond-expr","locations":[{"start":{"line":22,"column":45},"end":{"line":24,"column":6}},{"start":{"line":24,"column":9},"end":{"line":24,"column":11}}],"line":22},"4":{"loc":{"start":{"line":25,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":28,"column":5}},{"start":{"line":25,"column":4},"end":{"line":28,"column":5}}],"line":25}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1},"f":{"0":2,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0},"b":{"0":[0,2],"1":[2,2],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"sources":["plugin.js"],"names":["app","name","servicesPath","forecasts","get","filter","forecast","model","length","logger","warn","info","i","initializePlugin"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;AAEA;;+BACe,WAAiCA,GAAjC,EAAsCC,IAAtC,EAA4CC,YAA5C,EAA0D;AACvE,UAAMC,YAAYH,IAAII,GAAJ,CAAQ,WAAR,IAAuBJ,IAAII,GAAJ,CAAQ,WAAR,EAAqBC,MAArB,CAA4B;AAAA,aAAYC,SAASC,KAAT,KAAmBN,IAA/B;AAAA,KAA5B,CAAvB,GAA0F,EAA5G;AACA,QAAI,CAACE,UAAUK,MAAf,EAAuB;AACrBC,wBAAOC,IAAP,CAAY,uBAAuBT,IAAvB,GAA8B,sCAA1C;AACA;AACD;;AAEDQ,sBAAOE,IAAP,CAAY,0BAA0BV,IAA1B,GAAiC,SAA7C;AACA;AACA,SAAK,IAAIW,IAAI,CAAb,EAAgBA,IAAIT,UAAUK,MAA9B,EAAsCI,GAAtC,EAA2C;AACzC,YAAM,wBAAmBZ,GAAnB,EAAwBG,UAAUS,CAAV,CAAxB,EAAsCV,YAAtC,CAAN;AACD;AACF,G;;WAZ6BW,gB;;;;SAAAA,gB","file":"plugin.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src","sourcesContent":["import logger from 'winston'\nimport initializeElements from './elements'\n\n// Create all element services\nexport default async function initializePlugin (app, name, servicesPath) {\n  const forecasts = app.get('forecasts') ? app.get('forecasts').filter(forecast => forecast.model === name) : []\n  if (!forecasts.length) {\n    logger.warn('Cannot find valid ' + name + ' plugin configuration in application')\n    return\n  }\n\n  logger.info('Initializing weacast-' + name + ' plugin')\n  // Iterate over configured forecast models\n  for (let i = 0; i < forecasts.length; i++) {\n    await initializeElements(app, forecasts[i], servicesPath)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"48ac4dff4fac46a2cfe78527e63a00cb445a9953","contentHash":"3846d0d4ecb8250e5cd1c903a24afb0b60d4bb17402f48cd4737b9b2940fe3a7"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/application.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/application.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"4":{"start":{"line":10,"column":12},"end":{"line":10,"column":27}},"5":{"start":{"line":12,"column":13},"end":{"line":12,"column":42}},"6":{"start":{"line":14,"column":13},"end":{"line":14,"column":29}},"7":{"start":{"line":16,"column":14},"end":{"line":16,"column":44}},"8":{"start":{"line":18,"column":14},"end":{"line":18,"column":31}},"9":{"start":{"line":20,"column":15},"end":{"line":20,"column":46}},"10":{"start":{"line":22,"column":15},"end":{"line":22,"column":33}},"11":{"start":{"line":24,"column":16},"end":{"line":24,"column":48}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}},"13":{"start":{"line":28,"column":14},"end":{"line":28,"column":33}},"14":{"start":{"line":30,"column":15},"end":{"line":30,"column":46}},"15":{"start":{"line":32,"column":19},"end":{"line":32,"column":41}},"16":{"start":{"line":34,"column":20},"end":{"line":34,"column":56}},"17":{"start":{"line":36,"column":12},"end":{"line":36,"column":27}},"18":{"start":{"line":38,"column":13},"end":{"line":38,"column":42}},"19":{"start":{"line":40,"column":14},"end":{"line":40,"column":31}},"20":{"start":{"line":42,"column":15},"end":{"line":42,"column":46}},"21":{"start":{"line":44,"column":16},"end":{"line":44,"column":47}},"22":{"start":{"line":46,"column":17},"end":{"line":46,"column":50}},"23":{"start":{"line":48,"column":14},"end":{"line":48,"column":43}},"24":{"start":{"line":50,"column":15},"end":{"line":50,"column":46}},"25":{"start":{"line":52,"column":21},"end":{"line":52,"column":57}},"26":{"start":{"line":54,"column":22},"end":{"line":54,"column":60}},"27":{"start":{"line":56,"column":15},"end":{"line":56,"column":45}},"28":{"start":{"line":58,"column":16},"end":{"line":58,"column":48}},"29":{"start":{"line":60,"column":16},"end":{"line":60,"column":47}},"30":{"start":{"line":62,"column":17},"end":{"line":62,"column":50}},"31":{"start":{"line":64,"column":15},"end":{"line":64,"column":33}},"32":{"start":{"line":66,"column":10},"end":{"line":66,"column":25}},"33":{"start":{"line":68,"column":22},"end":{"line":68,"column":49}},"34":{"start":{"line":70,"column":23},"end":{"line":70,"column":62}},"35":{"start":{"line":72,"column":39},"end":{"line":72,"column":93}},"36":{"start":{"line":74,"column":33},"end":{"line":74,"column":456}},"37":{"start":{"line":74,"column":64},"end":{"line":74,"column":89}},"38":{"start":{"line":74,"column":91},"end":{"line":74,"column":453}},"39":{"start":{"line":74,"column":165},"end":{"line":74,"column":263}},"40":{"start":{"line":74,"column":182},"end":{"line":74,"column":195}},"41":{"start":{"line":74,"column":209},"end":{"line":74,"column":219}},"42":{"start":{"line":74,"column":239},"end":{"line":74,"column":253}},"43":{"start":{"line":74,"column":254},"end":{"line":74,"column":261}},"44":{"start":{"line":74,"column":264},"end":{"line":74,"column":426}},"45":{"start":{"line":74,"column":281},"end":{"line":74,"column":296}},"46":{"start":{"line":74,"column":306},"end":{"line":74,"column":424}},"47":{"start":{"line":74,"column":360},"end":{"line":74,"column":380}},"48":{"start":{"line":74,"column":401},"end":{"line":74,"column":420}},"49":{"start":{"line":74,"column":429},"end":{"line":74,"column":449}},"50":{"start":{"line":76,"column":17},"end":{"line":76,"column":34}},"51":{"start":{"line":77,"column":14},"end":{"line":77,"column":70}},"52":{"start":{"line":80,"column":15},"end":{"line":80,"column":46}},"53":{"start":{"line":82,"column":2},"end":{"line":82,"column":25}},"54":{"start":{"line":83,"column":2},"end":{"line":83,"column":44}},"55":{"start":{"line":85,"column":2},"end":{"line":85,"column":30}},"56":{"start":{"line":89,"column":2},"end":{"line":100,"column":3}},"57":{"start":{"line":90,"column":18},"end":{"line":90,"column":83}},"58":{"start":{"line":91,"column":4},"end":{"line":91,"column":25}},"59":{"start":{"line":92,"column":4},"end":{"line":92,"column":70}},"60":{"start":{"line":94,"column":4},"end":{"line":94,"column":78}},"61":{"start":{"line":95,"column":4},"end":{"line":98,"column":5}},"62":{"start":{"line":97,"column":6},"end":{"line":97,"column":19}},"63":{"start":{"line":102,"column":2},"end":{"line":115,"column":3}},"64":{"start":{"line":103,"column":21},"end":{"line":103,"column":89}},"65":{"start":{"line":104,"column":4},"end":{"line":106,"column":7}},"66":{"start":{"line":105,"column":6},"end":{"line":105,"column":93}},"67":{"start":{"line":105,"column":27},"end":{"line":105,"column":54}},"68":{"start":{"line":105,"column":59},"end":{"line":105,"column":93}},"69":{"start":{"line":107,"column":4},"end":{"line":107,"column":73}},"70":{"start":{"line":109,"column":4},"end":{"line":109,"column":81}},"71":{"start":{"line":110,"column":4},"end":{"line":113,"column":5}},"72":{"start":{"line":112,"column":6},"end":{"line":112,"column":19}},"73":{"start":{"line":117,"column":2},"end":{"line":117,"column":17}},"74":{"start":{"line":121,"column":32},"end":{"line":121,"column":69}},"75":{"start":{"line":122,"column":25},"end":{"line":122,"column":100}},"76":{"start":{"line":124,"column":19},"end":{"line":124,"column":38}},"77":{"start":{"line":125,"column":25},"end":{"line":129,"column":19}},"78":{"start":{"line":130,"column":2},"end":{"line":130,"column":48}},"79":{"start":{"line":130,"column":31},"end":{"line":130,"column":48}},"80":{"start":{"line":131,"column":2},"end":{"line":131,"column":38}},"81":{"start":{"line":134,"column":16},"end":{"line":134,"column":53}},"82":{"start":{"line":136,"column":2},"end":{"line":136,"column":47}},"83":{"start":{"line":138,"column":2},"end":{"line":138,"column":58}},"84":{"start":{"line":140,"column":2},"end":{"line":150,"column":3}},"85":{"start":{"line":141,"column":25},"end":{"line":141,"column":92}},"86":{"start":{"line":142,"column":4},"end":{"line":142,"column":41}},"87":{"start":{"line":144,"column":4},"end":{"line":144,"column":78}},"88":{"start":{"line":145,"column":4},"end":{"line":148,"column":5}},"89":{"start":{"line":147,"column":6},"end":{"line":147,"column":19}},"90":{"start":{"line":152,"column":2},"end":{"line":152,"column":22}},"91":{"start":{"line":153,"column":2},"end":{"line":153,"column":20}},"92":{"start":{"line":155,"column":2},"end":{"line":155,"column":58}},"93":{"start":{"line":156,"column":2},"end":{"line":156,"column":17}},"94":{"start":{"line":160,"column":32},"end":{"line":160,"column":69}},"95":{"start":{"line":161,"column":25},"end":{"line":161,"column":110}},"96":{"start":{"line":162,"column":20},"end":{"line":162,"column":54}},"97":{"start":{"line":164,"column":20},"end":{"line":164,"column":68}},"98":{"start":{"line":165,"column":19},"end":{"line":165,"column":38}},"99":{"start":{"line":166,"column":25},"end":{"line":169,"column":19}},"100":{"start":{"line":170,"column":2},"end":{"line":170,"column":48}},"101":{"start":{"line":170,"column":31},"end":{"line":170,"column":48}},"102":{"start":{"line":171,"column":2},"end":{"line":171,"column":73}},"103":{"start":{"line":171,"column":18},"end":{"line":171,"column":73}},"104":{"start":{"line":174,"column":16},"end":{"line":174,"column":80}},"105":{"start":{"line":176,"column":2},"end":{"line":176,"column":54}},"106":{"start":{"line":179,"column":2},"end":{"line":183,"column":3}},"107":{"start":{"line":180,"column":4},"end":{"line":180,"column":70}},"108":{"start":{"line":182,"column":4},"end":{"line":182,"column":96}},"109":{"start":{"line":186,"column":2},"end":{"line":188,"column":5}},"110":{"start":{"line":187,"column":4},"end":{"line":187,"column":34}},"111":{"start":{"line":190,"column":2},"end":{"line":193,"column":3}},"112":{"start":{"line":191,"column":25},"end":{"line":191,"column":112}},"113":{"start":{"line":192,"column":4},"end":{"line":192,"column":41}},"114":{"start":{"line":195,"column":2},"end":{"line":195,"column":20}},"115":{"start":{"line":196,"column":2},"end":{"line":196,"column":29}},"116":{"start":{"line":197,"column":2},"end":{"line":197,"column":30}},"117":{"start":{"line":198,"column":2},"end":{"line":198,"column":28}},"118":{"start":{"line":200,"column":2},"end":{"line":210,"column":3}},"119":{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},"120":{"start":{"line":202,"column":6},"end":{"line":202,"column":100}},"121":{"start":{"line":204,"column":4},"end":{"line":209,"column":7}},"122":{"start":{"line":212,"column":2},"end":{"line":212,"column":66}},"123":{"start":{"line":213,"column":2},"end":{"line":213,"column":17}},"124":{"start":{"line":218,"column":18},"end":{"line":218,"column":38}},"125":{"start":{"line":219,"column":2},"end":{"line":221,"column":3}},"126":{"start":{"line":220,"column":4},"end":{"line":220,"column":69}},"127":{"start":{"line":220,"column":45},"end":{"line":220,"column":67}},"128":{"start":{"line":224,"column":17},"end":{"line":224,"column":19}},"129":{"start":{"line":225,"column":2},"end":{"line":232,"column":3}},"130":{"start":{"line":226,"column":4},"end":{"line":231,"column":5}},"131":{"start":{"line":227,"column":20},"end":{"line":227,"column":70}},"132":{"start":{"line":228,"column":6},"end":{"line":230,"column":7}},"133":{"start":{"line":229,"column":8},"end":{"line":229,"column":31}},"134":{"start":{"line":233,"column":2},"end":{"line":233,"column":18}},"135":{"start":{"line":237,"column":2},"end":{"line":237,"column":60}},"136":{"start":{"line":239,"column":18},"end":{"line":239,"column":74}},"137":{"start":{"line":241,"column":19},"end":{"line":241,"column":21}},"138":{"start":{"line":242,"column":2},"end":{"line":245,"column":5}},"139":{"start":{"line":243,"column":20},"end":{"line":243,"column":39}},"140":{"start":{"line":244,"column":4},"end":{"line":244,"column":72}},"141":{"start":{"line":247,"column":2},"end":{"line":258,"column":3}},"142":{"start":{"line":248,"column":22},"end":{"line":248,"column":57}},"143":{"start":{"line":249,"column":4},"end":{"line":253,"column":7}},"144":{"start":{"line":251,"column":121},"end":{"line":251,"column":182}},"145":{"start":{"line":254,"column":4},"end":{"line":254,"column":48}},"146":{"start":{"line":257,"column":4},"end":{"line":257,"column":59}},"147":{"start":{"line":262,"column":12},"end":{"line":262,"column":61}},"148":{"start":{"line":264,"column":2},"end":{"line":264,"column":48}},"149":{"start":{"line":266,"column":2},"end":{"line":266,"column":31}},"150":{"start":{"line":269,"column":2},"end":{"line":273,"column":4}},"151":{"start":{"line":270,"column":21},"end":{"line":270,"column":40}},"152":{"start":{"line":271,"column":4},"end":{"line":271,"column":29}},"153":{"start":{"line":271,"column":19},"end":{"line":271,"column":29}},"154":{"start":{"line":272,"column":4},"end":{"line":272,"column":52}},"155":{"start":{"line":275,"column":2},"end":{"line":277,"column":4}},"156":{"start":{"line":276,"column":4},"end":{"line":276,"column":56}},"157":{"start":{"line":279,"column":2},"end":{"line":281,"column":4}},"158":{"start":{"line":280,"column":4},"end":{"line":280,"column":71}},"159":{"start":{"line":283,"column":2},"end":{"line":285,"column":4}},"160":{"start":{"line":284,"column":4},"end":{"line":284,"column":41}},"161":{"start":{"line":287,"column":2},"end":{"line":289,"column":4}},"162":{"start":{"line":288,"column":4},"end":{"line":288,"column":79}},"163":{"start":{"line":292,"column":2},"end":{"line":301,"column":7}},"164":{"start":{"line":293,"column":15},"end":{"line":296,"column":6}},"165":{"start":{"line":294,"column":6},"end":{"line":294,"column":32}},"166":{"start":{"line":295,"column":6},"end":{"line":295,"column":18}},"167":{"start":{"line":298,"column":4},"end":{"line":300,"column":6}},"168":{"start":{"line":299,"column":6},"end":{"line":299,"column":41}},"169":{"start":{"line":304,"column":2},"end":{"line":304,"column":33}},"170":{"start":{"line":305,"column":2},"end":{"line":305,"column":35}},"171":{"start":{"line":306,"column":2},"end":{"line":306,"column":40}},"172":{"start":{"line":307,"column":2},"end":{"line":307,"column":36}},"173":{"start":{"line":308,"column":2},"end":{"line":308,"column":60}},"174":{"start":{"line":311,"column":2},"end":{"line":311,"column":24}},"175":{"start":{"line":312,"column":2},"end":{"line":312,"column":78}},"176":{"start":{"line":313,"column":2},"end":{"line":313,"column":42}},"177":{"start":{"line":316,"column":2},"end":{"line":316,"column":36}},"178":{"start":{"line":318,"column":2},"end":{"line":318,"column":13}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":72,"column":9},"end":{"line":72,"column":31}},"loc":{"start":{"line":72,"column":37},"end":{"line":72,"column":95}},"line":72},"1":{"name":"_asyncToGenerator","decl":{"start":{"line":74,"column":9},"end":{"line":74,"column":26}},"loc":{"start":{"line":74,"column":31},"end":{"line":74,"column":458}},"line":74},"2":{"name":"(anonymous_2)","decl":{"start":{"line":74,"column":40},"end":{"line":74,"column":41}},"loc":{"start":{"line":74,"column":52},"end":{"line":74,"column":455}},"line":74},"3":{"name":"(anonymous_3)","decl":{"start":{"line":74,"column":110},"end":{"line":74,"column":111}},"loc":{"start":{"line":74,"column":137},"end":{"line":74,"column":451}},"line":74},"4":{"name":"step","decl":{"start":{"line":74,"column":148},"end":{"line":74,"column":152}},"loc":{"start":{"line":74,"column":163},"end":{"line":74,"column":428}},"line":74},"5":{"name":"(anonymous_5)","decl":{"start":{"line":74,"column":341},"end":{"line":74,"column":342}},"loc":{"start":{"line":74,"column":358},"end":{"line":74,"column":382}},"line":74},"6":{"name":"(anonymous_6)","decl":{"start":{"line":74,"column":384},"end":{"line":74,"column":385}},"loc":{"start":{"line":74,"column":399},"end":{"line":74,"column":422}},"line":74},"7":{"name":"declareService","decl":{"start":{"line":79,"column":9},"end":{"line":79,"column":23}},"loc":{"start":{"line":79,"column":44},"end":{"line":86,"column":1}},"line":79},"8":{"name":"configureService","decl":{"start":{"line":88,"column":9},"end":{"line":88,"column":25}},"loc":{"start":{"line":88,"column":55},"end":{"line":118,"column":1}},"line":88},"9":{"name":"(anonymous_9)","decl":{"start":{"line":104,"column":38},"end":{"line":104,"column":39}},"loc":{"start":{"line":104,"column":60},"end":{"line":106,"column":5}},"line":104},"10":{"name":"createService","decl":{"start":{"line":120,"column":9},"end":{"line":120,"column":22}},"loc":{"start":{"line":120,"column":69},"end":{"line":157,"column":1}},"line":120},"11":{"name":"createElementService","decl":{"start":{"line":159,"column":9},"end":{"line":159,"column":29}},"loc":{"start":{"line":159,"column":77},"end":{"line":214,"column":1}},"line":159},"12":{"name":"(anonymous_12)","decl":{"start":{"line":186,"column":27},"end":{"line":186,"column":28}},"loc":{"start":{"line":186,"column":36},"end":{"line":188,"column":3}},"line":186},"13":{"name":"getElementServices","decl":{"start":{"line":217,"column":9},"end":{"line":217,"column":27}},"loc":{"start":{"line":217,"column":39},"end":{"line":234,"column":1}},"line":217},"14":{"name":"(anonymous_14)","decl":{"start":{"line":220,"column":33},"end":{"line":220,"column":34}},"loc":{"start":{"line":220,"column":45},"end":{"line":220,"column":67}},"line":220},"15":{"name":"setupLogger","decl":{"start":{"line":236,"column":9},"end":{"line":236,"column":20}},"loc":{"start":{"line":236,"column":33},"end":{"line":259,"column":1}},"line":236},"16":{"name":"(anonymous_16)","decl":{"start":{"line":242,"column":20},"end":{"line":242,"column":21}},"loc":{"start":{"line":242,"column":31},"end":{"line":245,"column":3}},"line":242},"17":{"name":"(anonymous_17)","decl":{"start":{"line":251,"column":114},"end":{"line":251,"column":115}},"loc":{"start":{"line":251,"column":121},"end":{"line":251,"column":182}},"line":251},"18":{"name":"weacast","decl":{"start":{"line":261,"column":9},"end":{"line":261,"column":16}},"loc":{"start":{"line":261,"column":19},"end":{"line":319,"column":1}},"line":261},"19":{"name":"(anonymous_19)","decl":{"start":{"line":269,"column":26},"end":{"line":269,"column":27}},"loc":{"start":{"line":269,"column":42},"end":{"line":273,"column":3}},"line":269},"20":{"name":"(anonymous_20)","decl":{"start":{"line":275,"column":19},"end":{"line":275,"column":20}},"loc":{"start":{"line":275,"column":35},"end":{"line":277,"column":3}},"line":275},"21":{"name":"(anonymous_21)","decl":{"start":{"line":279,"column":22},"end":{"line":279,"column":23}},"loc":{"start":{"line":279,"column":73},"end":{"line":281,"column":3}},"line":279},"22":{"name":"(anonymous_22)","decl":{"start":{"line":283,"column":27},"end":{"line":283,"column":28}},"loc":{"start":{"line":283,"column":43},"end":{"line":285,"column":3}},"line":283},"23":{"name":"(anonymous_23)","decl":{"start":{"line":287,"column":29},"end":{"line":287,"column":30}},"loc":{"start":{"line":287,"column":81},"end":{"line":289,"column":3}},"line":287},"24":{"name":"(anonymous_24)","decl":{"start":{"line":292,"column":19},"end":{"line":292,"column":20}},"loc":{"start":{"line":292,"column":25},"end":{"line":301,"column":3}},"line":292},"25":{"name":"(anonymous_25)","decl":{"start":{"line":293,"column":33},"end":{"line":293,"column":34}},"loc":{"start":{"line":293,"column":48},"end":{"line":296,"column":5}},"line":293},"26":{"name":"(anonymous_26)","decl":{"start":{"line":298,"column":11},"end":{"line":298,"column":12}},"loc":{"start":{"line":298,"column":25},"end":{"line":300,"column":5}},"line":298}},"branchMap":{"0":{"loc":{"start":{"line":72,"column":46},"end":{"line":72,"column":92}},"type":"cond-expr","locations":[{"start":{"line":72,"column":70},"end":{"line":72,"column":73}},{"start":{"line":72,"column":76},"end":{"line":72,"column":92}}],"line":72},"1":{"loc":{"start":{"line":72,"column":46},"end":{"line":72,"column":67}},"type":"binary-expr","locations":[{"start":{"line":72,"column":46},"end":{"line":72,"column":49}},{"start":{"line":72,"column":53},"end":{"line":72,"column":67}}],"line":72},"2":{"loc":{"start":{"line":74,"column":264},"end":{"line":74,"column":426}},"type":"if","locations":[{"start":{"line":74,"column":264},"end":{"line":74,"column":426}},{"start":{"line":74,"column":264},"end":{"line":74,"column":426}}],"line":74},"3":{"loc":{"start":{"line":95,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":98,"column":5}},{"start":{"line":95,"column":4},"end":{"line":98,"column":5}}],"line":95},"4":{"loc":{"start":{"line":105,"column":6},"end":{"line":105,"column":93}},"type":"if","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":93}},{"start":{"line":105,"column":6},"end":{"line":105,"column":93}}],"line":105},"5":{"loc":{"start":{"line":110,"column":4},"end":{"line":113,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":113,"column":5}},{"start":{"line":110,"column":4},"end":{"line":113,"column":5}}],"line":110},"6":{"loc":{"start":{"line":129,"column":5},"end":{"line":129,"column":18}},"type":"binary-expr","locations":[{"start":{"line":129,"column":5},"end":{"line":129,"column":12}},{"start":{"line":129,"column":16},"end":{"line":129,"column":18}}],"line":129},"7":{"loc":{"start":{"line":130,"column":2},"end":{"line":130,"column":48}},"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":48}},{"start":{"line":130,"column":2},"end":{"line":130,"column":48}}],"line":130},"8":{"loc":{"start":{"line":145,"column":4},"end":{"line":148,"column":5}},"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":148,"column":5}},{"start":{"line":145,"column":4},"end":{"line":148,"column":5}}],"line":145},"9":{"loc":{"start":{"line":164,"column":20},"end":{"line":164,"column":68}},"type":"binary-expr","locations":[{"start":{"line":164,"column":20},"end":{"line":164,"column":32}},{"start":{"line":164,"column":36},"end":{"line":164,"column":68}}],"line":164},"10":{"loc":{"start":{"line":169,"column":5},"end":{"line":169,"column":18}},"type":"binary-expr","locations":[{"start":{"line":169,"column":5},"end":{"line":169,"column":12}},{"start":{"line":169,"column":16},"end":{"line":169,"column":18}}],"line":169},"11":{"loc":{"start":{"line":170,"column":2},"end":{"line":170,"column":48}},"type":"if","locations":[{"start":{"line":170,"column":2},"end":{"line":170,"column":48}},{"start":{"line":170,"column":2},"end":{"line":170,"column":48}}],"line":170},"12":{"loc":{"start":{"line":171,"column":2},"end":{"line":171,"column":73}},"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":171,"column":73}},{"start":{"line":171,"column":2},"end":{"line":171,"column":73}}],"line":171},"13":{"loc":{"start":{"line":174,"column":16},"end":{"line":174,"column":80}},"type":"cond-expr","locations":[{"start":{"line":174,"column":28},"end":{"line":174,"column":40}},{"start":{"line":174,"column":43},"end":{"line":174,"column":80}}],"line":174},"14":{"loc":{"start":{"line":179,"column":2},"end":{"line":183,"column":3}},"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":183,"column":3}},{"start":{"line":179,"column":2},"end":{"line":183,"column":3}}],"line":179},"15":{"loc":{"start":{"line":179,"column":6},"end":{"line":179,"column":32}},"type":"binary-expr","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":18}},{"start":{"line":179,"column":22},"end":{"line":179,"column":32}}],"line":179},"16":{"loc":{"start":{"line":190,"column":2},"end":{"line":193,"column":3}},"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":193,"column":3}},{"start":{"line":190,"column":2},"end":{"line":193,"column":3}}],"line":190},"17":{"loc":{"start":{"line":190,"column":6},"end":{"line":190,"column":32}},"type":"binary-expr","locations":[{"start":{"line":190,"column":6},"end":{"line":190,"column":18}},{"start":{"line":190,"column":22},"end":{"line":190,"column":32}}],"line":190},"18":{"loc":{"start":{"line":200,"column":2},"end":{"line":210,"column":3}},"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":210,"column":3}},{"start":{"line":200,"column":2},"end":{"line":210,"column":3}}],"line":200},"19":{"loc":{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},{"start":{"line":201,"column":4},"end":{"line":203,"column":5}}],"line":201},"20":{"loc":{"start":{"line":219,"column":2},"end":{"line":221,"column":3}},"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":221,"column":3}},{"start":{"line":219,"column":2},"end":{"line":221,"column":3}}],"line":219},"21":{"loc":{"start":{"line":228,"column":6},"end":{"line":230,"column":7}},"type":"if","locations":[{"start":{"line":228,"column":6},"end":{"line":230,"column":7}},{"start":{"line":228,"column":6},"end":{"line":230,"column":7}}],"line":228},"22":{"loc":{"start":{"line":239,"column":18},"end":{"line":239,"column":74}},"type":"cond-expr","locations":[{"start":{"line":239,"column":31},"end":{"line":239,"column":69}},{"start":{"line":239,"column":72},"end":{"line":239,"column":74}}],"line":239},"23":{"loc":{"start":{"line":250,"column":55},"end":{"line":250,"column":112}},"type":"cond-expr","locations":[{"start":{"line":250,"column":96},"end":{"line":250,"column":103}},{"start":{"line":250,"column":106},"end":{"line":250,"column":112}}],"line":250},"24":{"loc":{"start":{"line":271,"column":4},"end":{"line":271,"column":29}},"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":29}},{"start":{"line":271,"column":4},"end":{"line":271,"column":29}}],"line":271}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":14,"36":2,"37":22,"38":22,"39":44,"40":44,"41":44,"42":0,"43":0,"44":44,"45":22,"46":22,"47":22,"48":0,"49":22,"50":1,"51":1,"52":5,"53":5,"54":5,"55":5,"56":5,"57":5,"58":5,"59":5,"60":0,"61":0,"62":0,"63":5,"64":5,"65":0,"66":0,"67":0,"68":0,"69":0,"70":5,"71":5,"72":0,"73":5,"74":2,"75":2,"76":2,"77":2,"78":2,"79":0,"80":2,"81":2,"82":2,"83":2,"84":2,"85":2,"86":0,"87":2,"88":2,"89":0,"90":2,"91":2,"92":2,"93":2,"94":3,"95":3,"96":3,"97":3,"98":3,"99":3,"100":3,"101":0,"102":3,"103":3,"104":3,"105":3,"106":3,"107":3,"108":0,"109":3,"110":6,"111":3,"112":3,"113":3,"114":3,"115":3,"116":3,"117":3,"118":3,"119":1,"120":0,"121":1,"122":3,"123":3,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":2,"136":2,"137":2,"138":2,"139":4,"140":4,"141":2,"142":2,"143":2,"144":161,"145":2,"146":0,"147":2,"148":2,"149":2,"150":2,"151":2,"152":2,"153":0,"154":2,"155":2,"156":10,"157":2,"158":2,"159":2,"160":0,"161":2,"162":3,"163":2,"164":2,"165":22,"166":22,"167":2,"168":22,"169":2,"170":2,"171":2,"172":2,"173":2,"174":2,"175":2,"176":2,"177":2,"178":2},"f":{"0":14,"1":2,"2":22,"3":22,"4":44,"5":22,"6":0,"7":5,"8":5,"9":0,"10":2,"11":3,"12":6,"13":0,"14":0,"15":2,"16":4,"17":161,"18":2,"19":2,"20":10,"21":2,"22":0,"23":3,"24":2,"25":22,"26":22},"b":{"0":[3,11],"1":[14,14],"2":[22,22],"3":[0,0],"4":[0,0],"5":[0,5],"6":[2,0],"7":[0,2],"8":[0,2],"9":[3,3],"10":[3,0],"11":[0,3],"12":[3,0],"13":[0,3],"14":[3,0],"15":[3,3],"16":[3,0],"17":[3,3],"18":[1,2],"19":[0,1],"20":[0,0],"21":[0,0],"22":[2,0],"23":[0,2],"24":[0,2]},"inputSourceMap":{"version":3,"sources":["application.js"],"names":["createService","createElementService","weacast","rest","express","debug","declareService","name","app","service","path","get","use","getService","configureService","servicesPath","hooks","require","join","error","code","channels","_","forOwn","publisher","event","publish","modelsPath","options","createFeathersService","db","adapter","configureModel","paginate","serviceOptions","Object","assign","whitelist","disabled","undefined","serviceMixin","forecast","element","__dirname","serviceName","isService","model","elementMixins","forEach","mixin","dataStore","errors","GeneralError","gfs","GridFSBucket","dbName","chunkSizeBytes","bucketName","getElementServices","forecasts","filter","services","elements","push","setupLogger","logsConfig","omit","logsTypes","getOwnPropertyNames","transports","logType","logger","colorizer","format","colorize","configure","level","process","env","NODE_ENV","combine","simple","printf","msg","message","info","console","getServiceOptions","fn","call","json","urlencoded","extended","auth","Database","create"],"mappings":"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","file":"application.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src","sourcesContent":["import path from 'path'\nimport makeDebug from 'debug'\nimport _ from 'lodash'\nimport logger from 'winston'\nimport 'winston-daily-rotate-file'\nimport elementMixins from './mixins'\nimport compress from 'compression'\nimport cors from 'cors'\nimport helmet from 'helmet'\nimport feathers from '@feathersjs/feathers'\nimport errors from '@feathersjs/errors'\nimport configuration from '@feathersjs/configuration'\nimport express from '@feathersjs/express'\nimport socketio from '@feathersjs/socketio'\nimport { GridFSBucket } from 'mongodb'\nimport { Database } from './db'\nimport auth from './authentication'\n\nconst { rest } = express\nconst debug = makeDebug('weacast:weacast-core:application')\n\nfunction declareService (name, app, service) {\n  const path = app.get('apiPath') + '/' + name\n  // Initialize our service\n  app.use(path, service)\n  debug('Service declared on path ' + path)\n\n  return app.getService(name)\n}\n\nfunction configureService (name, service, servicesPath) {\n  try {\n    const hooks = require(path.join(servicesPath, name, name + '.hooks'))\n    service.hooks(hooks)\n    debug(name + ' service hooks configured on path ' + servicesPath)\n  } catch (error) {\n    debug('No ' + name + ' service hooks configured on path ' + servicesPath)\n    if (error.code !== 'MODULE_NOT_FOUND') {\n      // Log error in this case as this might be linked to a syntax error in required file\n      debug(error)\n    }\n    // As this is optionnal this require has to fail silently\n  }\n\n  try {\n    const channels = require(path.join(servicesPath, name, name + '.channels'))\n    _.forOwn(channels, (publisher, event) => {\n      if (event === 'all') service.publish(publisher)\n      else service.publish(event, publisher)\n    })\n    debug(name + ' service channels configured on path ' + servicesPath)\n  } catch (error) {\n    debug('No ' + name + ' service channels configured on path ' + servicesPath)\n    if (error.code !== 'MODULE_NOT_FOUND') {\n      // Log error in this case as this might be linked to a syntax error in required file\n      debug(error)\n    }\n    // As this is optionnal this require has to fail silently\n  }\n\n  return service\n}\n\nexport function createService (name, app, modelsPath, servicesPath, options) {\n  const createFeathersService = require('feathers-' + app.db.adapter)\n  const configureModel = require(path.join(modelsPath, name + '.model.' + app.db.adapter))\n\n  const paginate = app.get('paginate')\n  const serviceOptions = Object.assign({\n    name: name,\n    paginate,\n    whitelist: ['$exists']\n  }, options || {})\n  if (serviceOptions.disabled) return undefined\n  configureModel(app, serviceOptions)\n\n  // Initialize our service with any options it requires\n  let service = createFeathersService(serviceOptions)\n  // Get our initialized service so that we can register hooks and filters\n  service = declareService(name, app, service)\n  // Register hooks and filters\n  service = configureService(name, service, servicesPath)\n  // Optionally a specific service mixin can be provided, apply it\n  try {\n    const serviceMixin = require(path.join(servicesPath, name, name + '.service'))\n    Object.assign(service, serviceMixin)\n  } catch (error) {\n    debug('No ' + name + ' service mixin configured on path ' + servicesPath)\n    if (error.code !== 'MODULE_NOT_FOUND') {\n      // Log error in this case as this might be linked to a syntax error in required file\n      debug(error)\n    }\n    // As this is optionnal this require has to fail silently\n  }\n  // Then configuration\n  service.name = name\n  service.app = app\n\n  debug(service.name + ' service registration completed')\n  return service\n}\n\nexport function createElementService (forecast, element, app, servicesPath, options) {\n  const createFeathersService = require('feathers-' + app.db.adapter)\n  const configureModel = require(path.join(__dirname, 'models', 'elements.model.' + app.db.adapter))\n  let serviceName = forecast.name + '/' + element.name\n  // The service object can be directly provided\n  const isService = servicesPath && (typeof servicesPath === 'object')\n  const paginate = app.get('paginate')\n  const serviceOptions = Object.assign({\n    name: serviceName,\n    paginate\n  }, options || {})\n  if (serviceOptions.disabled) return undefined\n  if (!isService) configureModel(forecast, element, app, serviceOptions)\n\n  // Initialize our service with any options it requires\n  let service = (isService ? servicesPath : createFeathersService(serviceOptions))\n  // Get our initialized service so that we can register hooks and filters\n  service = declareService(serviceName, app, service)\n  // Register hooks and filters\n  // If no service file path provided use default\n  if (servicesPath && !isService) {\n    service = configureService(forecast.model, service, servicesPath)\n  } else {\n    service = configureService('elements', service, path.join(__dirname, 'services'))\n  }\n\n  // Apply all element mixins\n  elementMixins.forEach(mixin => { Object.assign(service, mixin) })\n  // Optionnally a specific service mixin can be provided, apply it\n  if (servicesPath && !isService) {\n    const serviceMixin = require(path.join(servicesPath, forecast.model, forecast.model + '.service'))\n    Object.assign(service, serviceMixin)\n  }\n  // Then configuration\n  service.app = app\n  service.name = serviceName\n  service.forecast = forecast\n  service.element = element\n  // Attach a GridFS storage element when required\n  if (element.dataStore === 'gridfs') {\n    if (app.get('db').adapter !== 'mongodb') {\n      throw new errors.GeneralError('GridFS store is only available for MongoDB adapter')\n    }\n    service.gfs = new GridFSBucket(app.db.db(serviceOptions.dbName), {\n      // GridFS is use to bypass the limit of 16MB documents in MongoDB\n      // We are not specifically interested in splitting the file in small chunks\n      chunkSizeBytes: 8 * 1024 * 1024,\n      bucketName: `${forecast.name}-${element.name}`\n    })\n  }\n\n  debug(service.name + ' element service registration completed')\n  return service\n}\n\n// Get all element services\nfunction getElementServices (app, name) {\n  let forecasts = app.get('forecasts')\n  if (name) {\n    forecasts = forecasts.filter(forecast => forecast.name === name)\n  }\n\n  // Iterate over configured forecast models\n  let services = []\n  for (let forecast of forecasts) {\n    for (let element of forecast.elements) {\n      let service = app.getService(forecast.name + '/' + element.name)\n      if (service) {\n        services.push(service)\n      }\n    }\n  }\n  return services\n}\n\nfunction setupLogger (logsConfig) {\n  logsConfig = _.omit(logsConfig, ['level'])\n  // We have one entry per log type\n  let logsTypes = logsConfig ? Object.getOwnPropertyNames(logsConfig) : []\n  // Create corresponding winston transports with options\n  let transports = []\n  logsTypes.forEach(logType => {\n    const options = logsConfig[logType]\n    transports.push(new logger.transports[logType](options))\n  })\n  // Reconfigure default winston logger\n  try {\n    const colorizer = logger.format.colorize()\n    logger.configure({\n      level: _.get(logsConfig, 'level', (process.env.NODE_ENV === 'development' ? 'debug' : 'info')),\n      format: logger.format.combine(\n        logger.format.simple(),\n        logger.format.printf(msg => \n          colorizer.colorize(msg.level, `${msg.level}: ${msg.message}`)\n        )\n      ),\n      transports\n    })\n    logger.info('Logger configured')\n  } catch (error) {\n    // Logger might be down, use console\n    console.error('Could not setup default logger', error)\n  }\n}\n\nexport default function weacast () {\n  let app = express(feathers())\n  // Load app configuration first\n  app.configure(configuration())\n  // Then setup logger\n  setupLogger(app.get('logs'))\n\n  // This retrieve corresponding service options from app config if any\n  app.getServiceOptions = function (name) {\n    const services = app.get('services')\n    if (!services) return {}\n    return _.get(services, name, {})\n  }\n  // This avoid managing the API path before each service name\n  app.getService = function (path) {\n    return app.service(app.get('apiPath') + '/' + path)\n  }\n  // This is used to create standard services\n  app.createService = function (name, modelsPath, servicesPath, options) {\n    return createService(name, app, modelsPath, servicesPath, options)\n  }\n  // This is used to retrieve all element services registered by forecast model plugins\n  app.getElementServices = function (name) {\n    return getElementServices(app, name)\n  }\n  // This is used to create forecast element services\n  app.createElementService = function (forecast, element, servicesPath, options) {\n    return createElementService(forecast, element, app, servicesPath, options)\n  }\n  // Override Feathers configure that do not manage async operations,\n  // here we also simply call the function given as parameter but await for it\n  app.configure = async function (fn) {\n    await fn.call(this, this)\n    return this\n  }\n\n  // Enable CORS, security, compression, and body parsing\n  app.use(cors())\n  app.use(helmet())\n  app.use(compress())\n  app.use(express.json())\n  app.use(express.urlencoded({ extended: true }))\n\n  // Set up plugins and providers\n  app.configure(rest())\n  app.configure(socketio({ path: app.get('apiPath') + 'ws' }))\n  app.configure(auth)\n\n  // Initialize DB\n  app.db = Database.create(app)\n\n  return app\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6ad8c02a8a0b7abae804f055b6e52cb8e661e20f","contentHash":"f7141660a24eb7414cd2f421af6fd8b5108bfb106b2c0b42f7011e5202d6c8ca"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/authentication.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/authentication.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}},"3":{"start":{"line":9,"column":13},"end":{"line":9,"column":29}},"4":{"start":{"line":11,"column":14},"end":{"line":11,"column":44}},"5":{"start":{"line":13,"column":22},"end":{"line":13,"column":59}},"6":{"start":{"line":15,"column":27},"end":{"line":15,"column":70}},"7":{"start":{"line":17,"column":27},"end":{"line":17,"column":70}},"8":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"9":{"start":{"line":21,"column":33},"end":{"line":21,"column":456}},"10":{"start":{"line":21,"column":64},"end":{"line":21,"column":89}},"11":{"start":{"line":21,"column":91},"end":{"line":21,"column":453}},"12":{"start":{"line":21,"column":165},"end":{"line":21,"column":263}},"13":{"start":{"line":21,"column":182},"end":{"line":21,"column":195}},"14":{"start":{"line":21,"column":209},"end":{"line":21,"column":219}},"15":{"start":{"line":21,"column":239},"end":{"line":21,"column":253}},"16":{"start":{"line":21,"column":254},"end":{"line":21,"column":261}},"17":{"start":{"line":21,"column":264},"end":{"line":21,"column":426}},"18":{"start":{"line":21,"column":281},"end":{"line":21,"column":296}},"19":{"start":{"line":21,"column":306},"end":{"line":21,"column":424}},"20":{"start":{"line":21,"column":360},"end":{"line":21,"column":380}},"21":{"start":{"line":21,"column":401},"end":{"line":21,"column":420}},"22":{"start":{"line":21,"column":429},"end":{"line":21,"column":449}},"23":{"start":{"line":23,"column":14},"end":{"line":23,"column":75}},"24":{"start":{"line":27,"column":4},"end":{"line":29,"column":9}},"25":{"start":{"line":28,"column":6},"end":{"line":28,"column":48}},"26":{"start":{"line":33,"column":4},"end":{"line":40,"column":9}},"27":{"start":{"line":34,"column":6},"end":{"line":37,"column":7}},"28":{"start":{"line":35,"column":8},"end":{"line":35,"column":33}},"29":{"start":{"line":36,"column":8},"end":{"line":36,"column":27}},"30":{"start":{"line":39,"column":6},"end":{"line":39,"column":25}},"31":{"start":{"line":44,"column":4},"end":{"line":51,"column":9}},"32":{"start":{"line":45,"column":6},"end":{"line":48,"column":7}},"33":{"start":{"line":46,"column":8},"end":{"line":46,"column":33}},"34":{"start":{"line":47,"column":8},"end":{"line":47,"column":27}},"35":{"start":{"line":50,"column":6},"end":{"line":50,"column":25}},"36":{"start":{"line":55,"column":16},"end":{"line":55,"column":20}},"37":{"start":{"line":57,"column":4},"end":{"line":70,"column":9}},"38":{"start":{"line":58,"column":22},"end":{"line":58,"column":56}},"39":{"start":{"line":59,"column":20},"end":{"line":62,"column":7}},"40":{"start":{"line":63,"column":6},"end":{"line":65,"column":9}},"41":{"start":{"line":64,"column":8},"end":{"line":64,"column":86}},"42":{"start":{"line":67,"column":6},"end":{"line":67,"column":35}},"43":{"start":{"line":69,"column":6},"end":{"line":69,"column":19}},"44":{"start":{"line":74,"column":0},"end":{"line":74,"column":40}},"45":{"start":{"line":76,"column":17},"end":{"line":76,"column":42}},"46":{"start":{"line":78,"column":2},"end":{"line":78,"column":22}},"47":{"start":{"line":78,"column":15},"end":{"line":78,"column":22}},"48":{"start":{"line":80,"column":30},"end":{"line":80,"column":191}},"49":{"start":{"line":81,"column":21},"end":{"line":81,"column":49}},"50":{"start":{"line":83,"column":2},"end":{"line":86,"column":6}},"51":{"start":{"line":88,"column":25},"end":{"line":88,"column":71}},"52":{"start":{"line":90,"column":2},"end":{"line":90,"column":68}},"53":{"start":{"line":91,"column":2},"end":{"line":91,"column":77}},"54":{"start":{"line":92,"column":2},"end":{"line":92,"column":58}},"55":{"start":{"line":93,"column":2},"end":{"line":93,"column":58}},"56":{"start":{"line":94,"column":2},"end":{"line":94,"column":56}},"57":{"start":{"line":95,"column":2},"end":{"line":95,"column":59}},"58":{"start":{"line":97,"column":2},"end":{"line":97,"column":66}},"59":{"start":{"line":98,"column":2},"end":{"line":98,"column":58}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":31}},"loc":{"start":{"line":19,"column":37},"end":{"line":19,"column":95}},"line":19},"1":{"name":"_asyncToGenerator","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":26}},"loc":{"start":{"line":21,"column":31},"end":{"line":21,"column":458}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":40},"end":{"line":21,"column":41}},"loc":{"start":{"line":21,"column":52},"end":{"line":21,"column":455}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":110},"end":{"line":21,"column":111}},"loc":{"start":{"line":21,"column":137},"end":{"line":21,"column":451}},"line":21},"4":{"name":"step","decl":{"start":{"line":21,"column":148},"end":{"line":21,"column":152}},"loc":{"start":{"line":21,"column":163},"end":{"line":21,"column":428}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":21,"column":341},"end":{"line":21,"column":342}},"loc":{"start":{"line":21,"column":358},"end":{"line":21,"column":382}},"line":21},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":384},"end":{"line":21,"column":385}},"loc":{"start":{"line":21,"column":399},"end":{"line":21,"column":422}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":33},"end":{"line":30,"column":3}},"line":26},"8":{"name":"(anonymous_8)","decl":{"start":{"line":27,"column":29},"end":{"line":27,"column":30}},"loc":{"start":{"line":27,"column":42},"end":{"line":29,"column":5}},"line":27},"9":{"name":"(anonymous_9)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":24},"end":{"line":41,"column":3}},"line":32},"10":{"name":"(anonymous_10)","decl":{"start":{"line":33,"column":29},"end":{"line":33,"column":30}},"loc":{"start":{"line":33,"column":42},"end":{"line":40,"column":5}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":43,"column":2},"end":{"line":43,"column":3}},"loc":{"start":{"line":43,"column":32},"end":{"line":52,"column":3}},"line":43},"12":{"name":"(anonymous_12)","decl":{"start":{"line":44,"column":29},"end":{"line":44,"column":30}},"loc":{"start":{"line":44,"column":42},"end":{"line":51,"column":5}},"line":44},"13":{"name":"(anonymous_13)","decl":{"start":{"line":54,"column":2},"end":{"line":54,"column":3}},"loc":{"start":{"line":54,"column":26},"end":{"line":71,"column":3}},"line":54},"14":{"name":"(anonymous_14)","decl":{"start":{"line":57,"column":29},"end":{"line":57,"column":30}},"loc":{"start":{"line":57,"column":42},"end":{"line":70,"column":5}},"line":57},"15":{"name":"(anonymous_15)","decl":{"start":{"line":63,"column":42},"end":{"line":63,"column":43}},"loc":{"start":{"line":63,"column":73},"end":{"line":65,"column":7}},"line":63},"16":{"name":"auth","decl":{"start":{"line":75,"column":9},"end":{"line":75,"column":13}},"loc":{"start":{"line":75,"column":19},"end":{"line":99,"column":1}},"line":75}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":46},"end":{"line":19,"column":92}},"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}],"line":19},"1":{"loc":{"start":{"line":19,"column":46},"end":{"line":19,"column":67}},"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}],"line":19},"2":{"loc":{"start":{"line":21,"column":264},"end":{"line":21,"column":426}},"type":"if","locations":[{"start":{"line":21,"column":264},"end":{"line":21,"column":426}},{"start":{"line":21,"column":264},"end":{"line":21,"column":426}}],"line":21},"3":{"loc":{"start":{"line":34,"column":6},"end":{"line":37,"column":7}},"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":37,"column":7}},{"start":{"line":34,"column":6},"end":{"line":37,"column":7}}],"line":34},"4":{"loc":{"start":{"line":45,"column":6},"end":{"line":48,"column":7}},"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":48,"column":7}},{"start":{"line":45,"column":6},"end":{"line":48,"column":7}}],"line":45},"5":{"loc":{"start":{"line":60,"column":35},"end":{"line":60,"column":60}},"type":"binary-expr","locations":[{"start":{"line":60,"column":35},"end":{"line":60,"column":45}},{"start":{"line":60,"column":49},"end":{"line":60,"column":60}}],"line":60},"6":{"loc":{"start":{"line":78,"column":2},"end":{"line":78,"column":22}},"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":22}},{"start":{"line":78,"column":2},"end":{"line":78,"column":22}}],"line":78},"7":{"loc":{"start":{"line":80,"column":30},"end":{"line":80,"column":191}},"type":"cond-expr","locations":[{"start":{"line":80,"column":59},"end":{"line":80,"column":160}},{"start":{"line":80,"column":163},"end":{"line":80,"column":191}}],"line":80},"8":{"loc":{"start":{"line":80,"column":59},"end":{"line":80,"column":160}},"type":"cond-expr","locations":[{"start":{"line":80,"column":103},"end":{"line":80,"column":129}},{"start":{"line":80,"column":132},"end":{"line":80,"column":160}}],"line":80},"9":{"loc":{"start":{"line":81,"column":21},"end":{"line":81,"column":49}},"type":"binary-expr","locations":[{"start":{"line":81,"column":21},"end":{"line":81,"column":38}},{"start":{"line":81,"column":42},"end":{"line":81,"column":49}}],"line":81}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":2,"46":2,"47":0,"48":2,"49":2,"50":2,"51":2,"52":2,"53":2,"54":2,"55":2,"56":2,"57":2,"58":2,"59":2},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":2},"b":{"0":[0,1],"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,2],"7":[0,2],"8":[0,0],"9":[2,2]},"inputSourceMap":{"version":3,"sources":["authentication.js"],"names":["auth","debug","OAuth2Verifier","OAuthStrategy","getEntityData","profile","entity","Object","assign","createEntity","id","sub","updateEntity","getEntityQuery","options","authentication","configuration","query","$or","idField","$limit","emailFieldInProfile","forEach","push","emailField","_","get","app","config","Array","isArray","set","AuthenticationService","register","JWTStrategy","LocalStrategy","use","configure"],"mappings":";;;;;;kBAgDwBA,I;;AAhDxB;;;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMC,QAAQ,qBAAU,uCAAV,CAAd;;AAEO,MAAMC,cAAN,SAA6BC,kCAA7B,CAA2C;AAC1CC,eAAN,CAAoBC,OAApB,EAA6BC,MAA7B,EAAqC;AAAA;AACnC,aAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBF,MAAlB,EAA0BD,OAA1B,CAAP;AADmC;AAEpC;;AAEKI,cAAN,CAAmBJ,OAAnB,EAA4B;AAAA;AAC1B,UAAI,CAACA,QAAQK,EAAb,EAAiB;AACfL,gBAAQK,EAAR,GAAaL,QAAQM,GAArB;AACA,eAAON,QAAQM,GAAf;AACD;;AAED,aAAO,EAAEN,OAAF,EAAP;AAN0B;AAO3B;;AAEKO,cAAN,CAAmBN,MAAnB,EAA2BD,OAA3B,EAAoC;AAAA;AAClC,UAAI,CAACA,QAAQK,EAAb,EAAiB;AACfL,gBAAQK,EAAR,GAAaL,QAAQM,GAArB;AACA,eAAON,QAAQM,GAAf;AACD;;AAED,aAAO,EAAEN,OAAF,EAAP;AANkC;AAOnC;;AAEKQ,gBAAN,CAAqBR,OAArB,EAA8B;AAAA;;AAAA;AAC5B,YAAMS,UAAU,MAAKC,cAAL,CAAoBC,aAApC;AACA,YAAMC,QAAQ;AACZC,aAAK,CACH,EAAE,CAACJ,QAAQK,OAAT,GAAmBd,QAAQK,EAAR,IAAcL,QAAQM,GAA3C,EADG,CADO;AAIZS,gBAAQ;AAJI,OAAd;AAMAN,cAAQO,mBAAR,CAA4BC,OAA5B,CAAoC,+BAAuB;AACzDL,cAAMC,GAAN,CAAUK,IAAV,CAAe,EAAE,CAACT,QAAQU,UAAT,GAAsBC,EAAEC,GAAF,CAAMrB,OAAN,EAAegB,mBAAf,CAAxB,EAAf;AACD,OAFD;;AAIApB,YAAM,cAAN,EAAsBgB,KAAtB;;AAEA,aAAOA,KAAP;AAd4B;AAe7B;AAtC+C;;QAArCf,c,GAAAA,c;AAyCE,SAASF,IAAT,CAAe2B,GAAf,EAAoB;AACjC,QAAMC,SAASD,IAAID,GAAJ,CAAQ,gBAAR,CAAf;;AAEA,MAAI,CAACE,MAAL,EAAa;;AAEb,QAAMP,sBAAsBO,OAAOP,mBAAP,GACvBQ,MAAMC,OAAN,CAAcF,OAAOP,mBAArB,IAA4CO,OAAOP,mBAAnD,GAAyE,CAAEO,OAAOP,mBAAT,CADlD,GAExB,CAAC,OAAD,EAAU,iBAAV,CAFJ;AAGA,QAAMG,aAAaI,OAAOJ,UAAP,IAAqB,OAAxC;;AAEAG,MAAII,GAAJ,CAAQ,gBAAR,EAA0BxB,OAAOC,MAAP,CAAc,EAAd,EAAkBoB,MAAlB,EAA0B;AAClDJ,cADkD;AAElDH;AAFkD,GAA1B,CAA1B;;AAKA,QAAMN,iBAAiB,IAAIiB,qCAAJ,CAA0BL,GAA1B,CAAvB;;AAEAZ,iBAAekB,QAAf,CAAwB,KAAxB,EAA+B,IAAIC,2BAAJ,EAA/B;AACAnB,iBAAekB,QAAf,CAAwB,OAAxB,EAAiC,IAAIE,kCAAJ,EAAjC;AACApB,iBAAekB,QAAf,CAAwB,QAAxB,EAAkC,IAAI/B,cAAJ,EAAlC;AACAa,iBAAekB,QAAf,CAAwB,QAAxB,EAAkC,IAAI/B,cAAJ,EAAlC;AACAa,iBAAekB,QAAf,CAAwB,MAAxB,EAAgC,IAAI/B,cAAJ,EAAhC;AACAa,iBAAekB,QAAf,CAAwB,SAAxB,EAAmC,IAAI/B,cAAJ,EAAnC;;AAEAyB,MAAIS,GAAJ,CAAS,GAAET,IAAID,GAAJ,CAAQ,SAAR,CAAmB,iBAA9B,EAAgDX,cAAhD;AACAY,MAAIU,SAAJ,CAAc,wCAAd;AACD","file":"authentication.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src","sourcesContent":["import makeDebug from 'debug'\nimport { AuthenticationService, JWTStrategy } from '@feathersjs/authentication'\nimport { LocalStrategy } from '@feathersjs/authentication-local'\nimport { expressOauth, OAuthStrategy } from '@feathersjs/authentication-oauth'\n\nconst debug = makeDebug('feathers-authentication-oauth2:verify')\n\nexport class OAuth2Verifier extends OAuthStrategy {\n  async getEntityData(profile, entity) {\n    return Object.assign({}, entity, profile)\n  }\n\n  async createEntity(profile) {\n    if (!profile.id) {\n      profile.id = profile.sub\n      delete profile.sub\n    }\n\n    return { profile }\n  }\n\n  async updateEntity(entity, profile) {\n    if (!profile.id) {\n      profile.id = profile.sub\n      delete profile.sub\n    }\n\n    return { profile }\n  }\n\n  async getEntityQuery(profile) {\n    const options = this.authentication.configuration\n    const query = {\n      $or: [\n        { [options.idField]: profile.id || profile.sub }\n      ],\n      $limit: 1\n    }\n    options.emailFieldInProfile.forEach(emailFieldInProfile => {\n      query.$or.push({ [options.emailField]: _.get(profile, emailFieldInProfile) })\n    })\n\n    debug('Finding user', query)\n    \n    return query\n  }\n}\n\nexport default function auth (app) {\n  const config = app.get('authentication')\n\n  if (!config) return\n\n  const emailFieldInProfile = config.emailFieldInProfile\n    ? (Array.isArray(config.emailFieldInProfile) ? config.emailFieldInProfile : [ config.emailFieldInProfile ])\n    : ['email', 'emails[0].value']\n  const emailField = config.emailField || 'email'\n\n  app.set('authentication', Object.assign({}, config, {\n    emailField,\n    emailFieldInProfile\n  }))\n\n  const authentication = new AuthenticationService(app)\n\n  authentication.register('jwt', new JWTStrategy())\n  authentication.register('local', new LocalStrategy())\n  authentication.register('github', new OAuth2Verifier())\n  authentication.register('google', new OAuth2Verifier())\n  authentication.register('oidc', new OAuth2Verifier())\n  authentication.register('cognito', new OAuth2Verifier())\n\n  app.use(`${app.get('apiPath')}/authentication`, authentication)\n  app.configure(expressOauth());\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"db6303abf8baca0f651ef8dda72acd3a610594f0","contentHash":"249b0ad4554493a76837f917323ef906a40169c6e0abf15576e7bd01449ca898"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/services/elements/elements.hooks.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/services/elements/elements.hooks.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":27},"end":{"line":7,"column":59}},"2":{"start":{"line":9,"column":13},"end":{"line":9,"column":35}},"3":{"start":{"line":11,"column":12},"end":{"line":11,"column":43}},"4":{"start":{"line":13,"column":40},"end":{"line":13,"column":267}},"5":{"start":{"line":13,"column":69},"end":{"line":13,"column":80}},"6":{"start":{"line":13,"column":103},"end":{"line":13,"column":105}},"7":{"start":{"line":13,"column":107},"end":{"line":13,"column":228}},"8":{"start":{"line":13,"column":126},"end":{"line":13,"column":226}},"9":{"start":{"line":13,"column":149},"end":{"line":13,"column":224}},"10":{"start":{"line":13,"column":201},"end":{"line":13,"column":224}},"11":{"start":{"line":13,"column":229},"end":{"line":13,"column":250}},"12":{"start":{"line":13,"column":251},"end":{"line":13,"column":265}},"13":{"start":{"line":16,"column":0},"end":{"line":47,"column":2}},"14":{"start":{"line":48,"column":0},"end":{"line":48,"column":33}}},"fnMap":{"0":{"name":"_interopRequireWildcard","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":32}},"loc":{"start":{"line":13,"column":38},"end":{"line":13,"column":269}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":40},"end":{"line":13,"column":267}},"type":"if","locations":[{"start":{"line":13,"column":40},"end":{"line":13,"column":267}},{"start":{"line":13,"column":40},"end":{"line":13,"column":267}}],"line":13},"1":{"loc":{"start":{"line":13,"column":44},"end":{"line":13,"column":65}},"type":"binary-expr","locations":[{"start":{"line":13,"column":44},"end":{"line":13,"column":47}},{"start":{"line":13,"column":51},"end":{"line":13,"column":65}}],"line":13},"2":{"loc":{"start":{"line":13,"column":107},"end":{"line":13,"column":228}},"type":"if","locations":[{"start":{"line":13,"column":107},"end":{"line":13,"column":228}},{"start":{"line":13,"column":107},"end":{"line":13,"column":228}}],"line":13},"3":{"loc":{"start":{"line":13,"column":149},"end":{"line":13,"column":224}},"type":"if","locations":[{"start":{"line":13,"column":149},"end":{"line":13,"column":224}},{"start":{"line":13,"column":149},"end":{"line":13,"column":224}}],"line":13}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1},"f":{"0":1},"b":{"0":[1,0],"1":[1,1],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"sources":["elements.hooks.js"],"names":["hooks","before","all","marshallQuery","find","marshallSpatialQuery","marshallTileQuery","processForecastTime","get","create","marshall","update","patch","remove","after","unmarshall","processData","error"],"mappings":";;;;;;AAAA;;AACA;;IAAYA,K;;;;AAEZ;kBACe;AACbC,UAAQ;AACNC,SAAK,CAAEF,MAAMG,aAAR,CADC;AAENC,UAAM,CAAEJ,MAAMK,oBAAR,EAA8BL,MAAMM,iBAApC,EAAuDN,MAAMO,mBAA7D,CAFA;AAGNC,SAAK,EAHC;AAINC,YAAQ,CAAE,mCAAS,UAAT,CAAF,EAAwBT,MAAMU,QAA9B,CAJF;AAKNC,YAAQ,CAAE,mCAAS,UAAT,CAAF,EAAwBX,MAAMU,QAA9B,CALF;AAMNE,WAAO,CAAE,mCAAS,UAAT,CAAF,EAAwBZ,MAAMU,QAA9B,CAND;AAONG,YAAQ,CAAE,mCAAS,UAAT,CAAF;AAPF,GADK;;AAWbC,SAAO;AACL;AACAZ,SAAK,CAAEF,MAAMe,UAAR,EAAoBf,MAAMgB,WAA1B,CAFA;AAGLZ,UAAM,EAHD;AAILI,SAAK,EAJA;AAKLC,YAAQ,EALH;AAMLE,YAAQ,EANH;AAOLC,WAAO,EAPF;AAQLC,YAAQ;AARH,GAXM;;AAsBbI,SAAO;AACLf,SAAK,EADA;AAELE,UAAM,EAFD;AAGLI,SAAK,EAHA;AAILC,YAAQ,EAJH;AAKLE,YAAQ,EALH;AAMLC,WAAO,EANF;AAOLC,YAAQ;AAPH;AAtBM,C","file":"elements.hooks.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/services/elements","sourcesContent":["import { disallow } from 'feathers-hooks-common'\nimport * as hooks from '../../hooks'\n\n// Marshall/Unmarshall should be always first so that we have a consistent data format in other hooks\nexport default {\n  before: {\n    all: [ hooks.marshallQuery ],\n    find: [ hooks.marshallSpatialQuery, hooks.marshallTileQuery, hooks.processForecastTime ],\n    get: [],\n    create: [ disallow('external'), hooks.marshall ],\n    update: [ disallow('external'), hooks.marshall ],\n    patch: [ disallow('external'), hooks.marshall ],\n    remove: [ disallow('external') ]\n  },\n\n  after: {\n    // By default do not response with data if not explicitely asked for\n    all: [ hooks.unmarshall, hooks.processData ],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  error: {\n    all: [],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"67e21c9eeec1bc7ebf5f76f55723787c484a21a2","contentHash":"9845a6a187503493ba4f70ee453e541e16cfcc300b7840fe3ae4a221853f6ff8"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks/index.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":16},"end":{"line":7,"column":37}},"2":{"start":{"line":9,"column":0},"end":{"line":17,"column":3}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":56}},"4":{"start":{"line":10,"column":49},"end":{"line":10,"column":56}},"5":{"start":{"line":11,"column":2},"end":{"line":16,"column":5}},"6":{"start":{"line":14,"column":6},"end":{"line":14,"column":28}},"7":{"start":{"line":19,"column":13},"end":{"line":19,"column":31}},"8":{"start":{"line":21,"column":0},"end":{"line":29,"column":3}},"9":{"start":{"line":22,"column":2},"end":{"line":22,"column":56}},"10":{"start":{"line":22,"column":49},"end":{"line":22,"column":56}},"11":{"start":{"line":23,"column":2},"end":{"line":28,"column":5}},"12":{"start":{"line":26,"column":6},"end":{"line":26,"column":25}},"13":{"start":{"line":31,"column":14},"end":{"line":31,"column":33}},"14":{"start":{"line":33,"column":0},"end":{"line":41,"column":3}},"15":{"start":{"line":34,"column":2},"end":{"line":34,"column":56}},"16":{"start":{"line":34,"column":49},"end":{"line":34,"column":56}},"17":{"start":{"line":35,"column":2},"end":{"line":40,"column":5}},"18":{"start":{"line":38,"column":6},"end":{"line":38,"column":26}},"19":{"start":{"line":42,"column":0},"end":{"line":42,"column":32}},"20":{"start":{"line":44,"column":16},"end":{"line":44,"column":47}},"21":{"start":{"line":47,"column":2},"end":{"line":47,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":31},"end":{"line":9,"column":32}},"loc":{"start":{"line":9,"column":46},"end":{"line":17,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":10}},"loc":{"start":{"line":13,"column":21},"end":{"line":15,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":28},"end":{"line":21,"column":29}},"loc":{"start":{"line":21,"column":43},"end":{"line":29,"column":1}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":10}},"loc":{"start":{"line":25,"column":21},"end":{"line":27,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":29},"end":{"line":33,"column":30}},"loc":{"start":{"line":33,"column":44},"end":{"line":41,"column":1}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":37,"column":9},"end":{"line":37,"column":10}},"loc":{"start":{"line":37,"column":21},"end":{"line":39,"column":5}},"line":37},"6":{"name":"skipEvents","decl":{"start":{"line":46,"column":9},"end":{"line":46,"column":19}},"loc":{"start":{"line":46,"column":26},"end":{"line":48,"column":1}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":56}},"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":56}},{"start":{"line":10,"column":2},"end":{"line":10,"column":56}}],"line":10},"1":{"loc":{"start":{"line":10,"column":6},"end":{"line":10,"column":47}},"type":"binary-expr","locations":[{"start":{"line":10,"column":6},"end":{"line":10,"column":23}},{"start":{"line":10,"column":27},"end":{"line":10,"column":47}}],"line":10},"2":{"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":56}},"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":56}},{"start":{"line":22,"column":2},"end":{"line":22,"column":56}}],"line":22},"3":{"loc":{"start":{"line":22,"column":6},"end":{"line":22,"column":47}},"type":"binary-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":23}},{"start":{"line":22,"column":27},"end":{"line":22,"column":47}}],"line":22},"4":{"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":56}},"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":56}},{"start":{"line":34,"column":2},"end":{"line":34,"column":56}}],"line":34},"5":{"loc":{"start":{"line":34,"column":6},"end":{"line":34,"column":47}},"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":23}},{"start":{"line":34,"column":27},"end":{"line":34,"column":47}}],"line":34}},"s":{"0":1,"1":1,"2":1,"3":4,"4":0,"5":4,"6":4,"7":1,"8":1,"9":6,"10":0,"11":6,"12":11,"13":1,"14":1,"15":1,"16":0,"17":1,"18":0,"19":1,"20":1,"21":0},"f":{"0":4,"1":4,"2":6,"3":11,"4":1,"5":0,"6":0},"b":{"0":[0,4],"1":[4,4],"2":[0,6],"3":[6,6],"4":[0,1],"5":[1,1]},"inputSourceMap":{"version":3,"sources":["index.js"],"names":["skipEvents","hook","SKIP"],"mappings":";;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;QAEgBA,U,GAAAA,U;;AANhB;;AAMO,SAASA,UAAT,CAAqBC,IAArB,EAA2B;AAChC,SAAOC,cAAP;AACD","file":"index.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks","sourcesContent":["import { SKIP } from '@feathersjs/feathers'\n\nexport * from './marshall'\nexport * from './query'\nexport * from './logger'\n\nexport function skipEvents (hook) {\n  return SKIP\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c9e9ee719b9920bedd40a769c27164bcd0eac37b","contentHash":"c3f632f8542578f48260b2ecb65bf191b5f2b99603a4a5c2212cc7a2e623c41b"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks/marshall.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks/marshall.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"5":{"start":{"line":11,"column":14},"end":{"line":11,"column":31}},"6":{"start":{"line":13,"column":15},"end":{"line":13,"column":46}},"7":{"start":{"line":15,"column":14},"end":{"line":15,"column":31}},"8":{"start":{"line":17,"column":15},"end":{"line":17,"column":46}},"9":{"start":{"line":19,"column":27},"end":{"line":19,"column":59}},"10":{"start":{"line":21,"column":39},"end":{"line":21,"column":93}},"11":{"start":{"line":25,"column":2},"end":{"line":25,"column":20}},"12":{"start":{"line":25,"column":13},"end":{"line":25,"column":20}},"13":{"start":{"line":26,"column":15},"end":{"line":26,"column":29}},"14":{"start":{"line":27,"column":2},"end":{"line":27,"column":20}},"15":{"start":{"line":27,"column":13},"end":{"line":27,"column":20}},"16":{"start":{"line":28,"column":2},"end":{"line":40,"column":3}},"17":{"start":{"line":29,"column":4},"end":{"line":31,"column":7}},"18":{"start":{"line":30,"column":6},"end":{"line":30,"column":133}},"19":{"start":{"line":30,"column":40},"end":{"line":30,"column":68}},"20":{"start":{"line":30,"column":73},"end":{"line":30,"column":133}},"21":{"start":{"line":30,"column":100},"end":{"line":30,"column":119}},"22":{"start":{"line":30,"column":124},"end":{"line":30,"column":133}},"23":{"start":{"line":32,"column":9},"end":{"line":40,"column":3}},"24":{"start":{"line":33,"column":4},"end":{"line":33,"column":45}},"25":{"start":{"line":34,"column":9},"end":{"line":40,"column":3}},"26":{"start":{"line":35,"column":4},"end":{"line":35,"column":36}},"27":{"start":{"line":36,"column":9},"end":{"line":40,"column":3}},"28":{"start":{"line":39,"column":4},"end":{"line":39,"column":72}},"29":{"start":{"line":39,"column":47},"end":{"line":39,"column":70}},"30":{"start":{"line":45,"column":2},"end":{"line":45,"column":20}},"31":{"start":{"line":45,"column":13},"end":{"line":45,"column":20}},"32":{"start":{"line":46,"column":15},"end":{"line":46,"column":29}},"33":{"start":{"line":47,"column":2},"end":{"line":47,"column":20}},"34":{"start":{"line":47,"column":13},"end":{"line":47,"column":20}},"35":{"start":{"line":48,"column":2},"end":{"line":56,"column":3}},"36":{"start":{"line":49,"column":4},"end":{"line":51,"column":7}},"37":{"start":{"line":50,"column":6},"end":{"line":50,"column":169}},"38":{"start":{"line":50,"column":33},"end":{"line":50,"column":64}},"39":{"start":{"line":50,"column":69},"end":{"line":50,"column":169}},"40":{"start":{"line":50,"column":110},"end":{"line":50,"column":155}},"41":{"start":{"line":50,"column":160},"end":{"line":50,"column":169}},"42":{"start":{"line":52,"column":9},"end":{"line":56,"column":3}},"43":{"start":{"line":53,"column":4},"end":{"line":55,"column":109}},"44":{"start":{"line":53,"column":34},"end":{"line":53,"column":78}},"45":{"start":{"line":53,"column":83},"end":{"line":55,"column":109}},"46":{"start":{"line":53,"column":127},"end":{"line":53,"column":185}},"47":{"start":{"line":55,"column":9},"end":{"line":55,"column":109}},"48":{"start":{"line":55,"column":39},"end":{"line":55,"column":109}},"49":{"start":{"line":55,"column":82},"end":{"line":55,"column":107}},"50":{"start":{"line":61,"column":14},"end":{"line":61,"column":54}},"51":{"start":{"line":62,"column":18},"end":{"line":62,"column":38}},"52":{"start":{"line":63,"column":2},"end":{"line":63,"column":36}},"53":{"start":{"line":65,"column":2},"end":{"line":68,"column":5}},"54":{"start":{"line":66,"column":4},"end":{"line":66,"column":34}},"55":{"start":{"line":67,"column":4},"end":{"line":67,"column":39}},"56":{"start":{"line":70,"column":2},"end":{"line":70,"column":75}},"57":{"start":{"line":75,"column":14},"end":{"line":75,"column":54}},"58":{"start":{"line":76,"column":18},"end":{"line":76,"column":38}},"59":{"start":{"line":77,"column":2},"end":{"line":77,"column":36}},"60":{"start":{"line":79,"column":2},"end":{"line":82,"column":5}},"61":{"start":{"line":80,"column":4},"end":{"line":80,"column":36}},"62":{"start":{"line":81,"column":4},"end":{"line":81,"column":41}},"63":{"start":{"line":84,"column":2},"end":{"line":84,"column":75}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":31}},"loc":{"start":{"line":21,"column":37},"end":{"line":21,"column":95}},"line":21},"1":{"name":"marshallTime","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":21}},"loc":{"start":{"line":24,"column":38},"end":{"line":41,"column":1}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":29,"column":30},"end":{"line":29,"column":31}},"loc":{"start":{"line":29,"column":35},"end":{"line":31,"column":5}},"line":29},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":40},"end":{"line":39,"column":41}},"loc":{"start":{"line":39,"column":47},"end":{"line":39,"column":70}},"line":39},"4":{"name":"unmarshallTime","decl":{"start":{"line":44,"column":9},"end":{"line":44,"column":23}},"loc":{"start":{"line":44,"column":40},"end":{"line":57,"column":1}},"line":44},"5":{"name":"(anonymous_5)","decl":{"start":{"line":49,"column":30},"end":{"line":49,"column":31}},"loc":{"start":{"line":49,"column":35},"end":{"line":51,"column":5}},"line":49},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":75},"end":{"line":55,"column":76}},"loc":{"start":{"line":55,"column":82},"end":{"line":55,"column":107}},"line":55},"7":{"name":"marshall","decl":{"start":{"line":60,"column":9},"end":{"line":60,"column":17}},"loc":{"start":{"line":60,"column":24},"end":{"line":71,"column":1}},"line":60},"8":{"name":"(anonymous_8)","decl":{"start":{"line":65,"column":16},"end":{"line":65,"column":17}},"loc":{"start":{"line":65,"column":24},"end":{"line":68,"column":3}},"line":65},"9":{"name":"unmarshall","decl":{"start":{"line":74,"column":9},"end":{"line":74,"column":19}},"loc":{"start":{"line":74,"column":26},"end":{"line":85,"column":1}},"line":74},"10":{"name":"(anonymous_10)","decl":{"start":{"line":79,"column":16},"end":{"line":79,"column":17}},"loc":{"start":{"line":79,"column":24},"end":{"line":82,"column":3}},"line":79}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":46},"end":{"line":21,"column":92}},"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":92}}],"line":21},"1":{"loc":{"start":{"line":21,"column":46},"end":{"line":21,"column":67}},"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}],"line":21},"2":{"loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":20}},"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":20}},{"start":{"line":25,"column":2},"end":{"line":25,"column":20}}],"line":25},"3":{"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":20}},"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":20}},{"start":{"line":27,"column":2},"end":{"line":27,"column":20}}],"line":27},"4":{"loc":{"start":{"line":28,"column":2},"end":{"line":40,"column":3}},"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":40,"column":3}},{"start":{"line":28,"column":2},"end":{"line":40,"column":3}}],"line":28},"5":{"loc":{"start":{"line":30,"column":6},"end":{"line":30,"column":133}},"type":"if","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":133}},{"start":{"line":30,"column":6},"end":{"line":30,"column":133}}],"line":30},"6":{"loc":{"start":{"line":30,"column":73},"end":{"line":30,"column":133}},"type":"if","locations":[{"start":{"line":30,"column":73},"end":{"line":30,"column":133}},{"start":{"line":30,"column":73},"end":{"line":30,"column":133}}],"line":30},"7":{"loc":{"start":{"line":32,"column":9},"end":{"line":40,"column":3}},"type":"if","locations":[{"start":{"line":32,"column":9},"end":{"line":40,"column":3}},{"start":{"line":32,"column":9},"end":{"line":40,"column":3}}],"line":32},"8":{"loc":{"start":{"line":34,"column":9},"end":{"line":40,"column":3}},"type":"if","locations":[{"start":{"line":34,"column":9},"end":{"line":40,"column":3}},{"start":{"line":34,"column":9},"end":{"line":40,"column":3}}],"line":34},"9":{"loc":{"start":{"line":36,"column":9},"end":{"line":40,"column":3}},"type":"if","locations":[{"start":{"line":36,"column":9},"end":{"line":40,"column":3}},{"start":{"line":36,"column":9},"end":{"line":40,"column":3}}],"line":36},"10":{"loc":{"start":{"line":45,"column":2},"end":{"line":45,"column":20}},"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":20}},{"start":{"line":45,"column":2},"end":{"line":45,"column":20}}],"line":45},"11":{"loc":{"start":{"line":47,"column":2},"end":{"line":47,"column":20}},"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":20}},{"start":{"line":47,"column":2},"end":{"line":47,"column":20}}],"line":47},"12":{"loc":{"start":{"line":48,"column":2},"end":{"line":56,"column":3}},"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":56,"column":3}},{"start":{"line":48,"column":2},"end":{"line":56,"column":3}}],"line":48},"13":{"loc":{"start":{"line":50,"column":6},"end":{"line":50,"column":169}},"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":169}},{"start":{"line":50,"column":6},"end":{"line":50,"column":169}}],"line":50},"14":{"loc":{"start":{"line":50,"column":69},"end":{"line":50,"column":169}},"type":"if","locations":[{"start":{"line":50,"column":69},"end":{"line":50,"column":169}},{"start":{"line":50,"column":69},"end":{"line":50,"column":169}}],"line":50},"15":{"loc":{"start":{"line":52,"column":9},"end":{"line":56,"column":3}},"type":"if","locations":[{"start":{"line":52,"column":9},"end":{"line":56,"column":3}},{"start":{"line":52,"column":9},"end":{"line":56,"column":3}}],"line":52},"16":{"loc":{"start":{"line":53,"column":4},"end":{"line":55,"column":109}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":55,"column":109}},{"start":{"line":53,"column":4},"end":{"line":55,"column":109}}],"line":53},"17":{"loc":{"start":{"line":53,"column":83},"end":{"line":55,"column":109}},"type":"if","locations":[{"start":{"line":53,"column":83},"end":{"line":55,"column":109}},{"start":{"line":53,"column":83},"end":{"line":55,"column":109}}],"line":53},"18":{"loc":{"start":{"line":55,"column":9},"end":{"line":55,"column":109}},"type":"if","locations":[{"start":{"line":55,"column":9},"end":{"line":55,"column":109}},{"start":{"line":55,"column":9},"end":{"line":55,"column":109}}],"line":55},"19":{"loc":{"start":{"line":63,"column":10},"end":{"line":63,"column":35}},"type":"cond-expr","locations":[{"start":{"line":63,"column":20},"end":{"line":63,"column":25}},{"start":{"line":63,"column":28},"end":{"line":63,"column":35}}],"line":63},"20":{"loc":{"start":{"line":70,"column":47},"end":{"line":70,"column":73}},"type":"cond-expr","locations":[{"start":{"line":70,"column":57},"end":{"line":70,"column":62}},{"start":{"line":70,"column":65},"end":{"line":70,"column":73}}],"line":70},"21":{"loc":{"start":{"line":77,"column":10},"end":{"line":77,"column":35}},"type":"cond-expr","locations":[{"start":{"line":77,"column":20},"end":{"line":77,"column":25}},{"start":{"line":77,"column":28},"end":{"line":77,"column":35}}],"line":77},"22":{"loc":{"start":{"line":84,"column":47},"end":{"line":84,"column":73}},"type":"cond-expr","locations":[{"start":{"line":84,"column":57},"end":{"line":84,"column":62}},{"start":{"line":84,"column":65},"end":{"line":84,"column":73}}],"line":84}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":2,"11":584,"12":0,"13":584,"14":584,"15":60,"16":524,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":524,"24":90,"25":434,"26":2,"27":432,"28":432,"29":0,"30":666,"31":0,"32":666,"33":666,"34":9,"35":657,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":657,"43":657,"44":0,"45":657,"46":657,"47":0,"48":0,"49":0,"50":54,"51":54,"52":54,"53":54,"54":243,"55":243,"56":54,"57":105,"58":105,"59":105,"60":105,"61":333,"62":333,"63":105},"f":{"0":2,"1":584,"2":0,"3":0,"4":666,"5":0,"6":0,"7":54,"8":243,"9":105,"10":333},"b":{"0":[0,2],"1":[2,2],"2":[0,584],"3":[60,524],"4":[0,524],"5":[0,0],"6":[0,0],"7":[90,434],"8":[2,432],"9":[432,0],"10":[0,666],"11":[9,657],"12":[0,657],"13":[0,0],"14":[0,0],"15":[657,0],"16":[0,657],"17":[657,0],"18":[0,0],"19":[27,27],"20":[27,27],"21":[78,27],"22":[78,27]},"inputSourceMap":{"version":3,"sources":["marshall.js"],"names":["marshallTime","unmarshallTime","marshall","unmarshall","item","property","time","Array","isArray","map","t","moment","isMoment","Date","format","_","keys","forEach","key","utc","toISOString","hook","items"],"mappings":"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","file":"marshall.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks","sourcesContent":["import moment from 'moment'\nimport _ from 'lodash'\nimport { getItems, replaceItems } from 'feathers-hooks-common'\n\n// Helper function to convert time objects or array of time objects\nexport function marshallTime (item, property) {\n  if (!item) return\n  const time = item[property]\n  if (!time) return\n  if (Array.isArray(time)) {\n    item[property] = time.map(t => {\n      if (moment.isMoment(t)) return new Date(t.format())\n      else if (typeof t === 'string') return new Date(t)\n      else return t\n    })\n  } else if (moment.isMoment(time)) {\n    item[property] = new Date(time.format())\n  } else if (typeof time === 'string') {\n    item[property] = new Date(time)\n  } else if (typeof time === 'object') { // Check if complex object such as comparison operator\n    // If so this will recurse\n    _.keys(time).forEach(key => marshallTime(time, key))\n  }\n}\n\n// Helper function to convert time objects or array of time objects\nexport function unmarshallTime (item, property) {\n  if (!item) return\n  const time = item[property]\n  if (!time) return\n  if (Array.isArray(time)) {\n    item[property] = time.map(t => {\n      if (typeof t === 'string') return moment.utc(t)\n      else if (typeof t.toISOString === 'function') return moment.utc(t.toISOString())\n      else return t\n    })\n  } else if (!moment.isMoment(time)) {\n    if (typeof time === 'string') item[property] = moment.utc(time)\n    else if (typeof time.toISOString === 'function') item[property] = moment.utc(time.toISOString())\n    // Recurse on complex object such as comparison operator\n    else if (typeof time === 'object') _.keys(time).forEach(key => unmarshallTime(time, key))\n  }\n}\n\n// Need to convert from server side types (moment dates) to basic JS types when \"writing\" to DB adapters\nexport function marshall (hook) {\n  let items = getItems(hook)\n  const isArray = Array.isArray(items)\n  items = (isArray ? items : [items])\n\n  items.forEach(item => {\n    marshallTime(item, 'runTime')\n    marshallTime(item, 'forecastTime')\n  })\n\n  replaceItems(hook, isArray ? items : items[0])\n}\n\n// Need to convert back to server side types (moment dates) from basic JS types when \"reading\" from DB adapters\nexport function unmarshall (hook) {\n  let items = getItems(hook)\n  const isArray = Array.isArray(items)\n  items = (isArray ? items : [items])\n\n  items.forEach(item => {\n    unmarshallTime(item, 'runTime')\n    unmarshallTime(item, 'forecastTime')\n  })\n\n  replaceItems(hook, isArray ? items : items[0])\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e46c106ca64fb1fac576e6ec3069711999032387","contentHash":"8938bf25abb935100c9107e7e4f10ec22eae8d9a99aa7b7843f2ebaedc4595f2"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks/query.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks/query.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"2":{"start":{"line":8,"column":18},"end":{"line":77,"column":4}},"3":{"start":{"line":9,"column":13},"end":{"line":72,"column":4}},"4":{"start":{"line":10,"column":19},"end":{"line":10,"column":30}},"5":{"start":{"line":11,"column":18},"end":{"line":11,"column":30}},"6":{"start":{"line":12,"column":20},"end":{"line":12,"column":32}},"7":{"start":{"line":13,"column":16},"end":{"line":13,"column":56}},"8":{"start":{"line":14,"column":20},"end":{"line":14,"column":40}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":38}},"10":{"start":{"line":18,"column":4},"end":{"line":50,"column":5}},"11":{"start":{"line":20,"column":6},"end":{"line":46,"column":7}},"12":{"start":{"line":21,"column":29},"end":{"line":21,"column":31}},"13":{"start":{"line":22,"column":8},"end":{"line":34,"column":11}},"14":{"start":{"line":24,"column":10},"end":{"line":33,"column":11}},"15":{"start":{"line":26,"column":12},"end":{"line":32,"column":13}},"16":{"start":{"line":27,"column":14},"end":{"line":29,"column":18}},"17":{"start":{"line":28,"column":16},"end":{"line":28,"column":47}},"18":{"start":{"line":31,"column":14},"end":{"line":31,"column":57}},"19":{"start":{"line":36,"column":8},"end":{"line":45,"column":9}},"20":{"start":{"line":37,"column":10},"end":{"line":37,"column":42}},"21":{"start":{"line":39,"column":10},"end":{"line":43,"column":11}},"22":{"start":{"line":40,"column":12},"end":{"line":42,"column":16}},"23":{"start":{"line":41,"column":14},"end":{"line":41,"column":70}},"24":{"start":{"line":44,"column":10},"end":{"line":44,"column":83}},"25":{"start":{"line":48,"column":6},"end":{"line":48,"column":33}},"26":{"start":{"line":49,"column":6},"end":{"line":49,"column":42}},"27":{"start":{"line":52,"column":4},"end":{"line":71,"column":5}},"28":{"start":{"line":53,"column":6},"end":{"line":53,"column":29}},"29":{"start":{"line":56,"column":6},"end":{"line":70,"column":7}},"30":{"start":{"line":57,"column":8},"end":{"line":68,"column":11}},"31":{"start":{"line":58,"column":23},"end":{"line":64,"column":12}},"32":{"start":{"line":65,"column":10},"end":{"line":65,"column":120}},"33":{"start":{"line":67,"column":10},"end":{"line":67,"column":63}},"34":{"start":{"line":69,"column":8},"end":{"line":69,"column":81}},"35":{"start":{"line":74,"column":2},"end":{"line":76,"column":4}},"36":{"start":{"line":75,"column":4},"end":{"line":75,"column":39}},"37":{"start":{"line":79,"column":0},"end":{"line":79,"column":58}},"38":{"start":{"line":80,"column":0},"end":{"line":80,"column":38}},"39":{"start":{"line":81,"column":0},"end":{"line":81,"column":46}},"40":{"start":{"line":82,"column":0},"end":{"line":82,"column":52}},"41":{"start":{"line":83,"column":0},"end":{"line":83,"column":50}},"42":{"start":{"line":85,"column":14},"end":{"line":85,"column":31}},"43":{"start":{"line":87,"column":15},"end":{"line":87,"column":46}},"44":{"start":{"line":89,"column":15},"end":{"line":89,"column":34}},"45":{"start":{"line":91,"column":16},"end":{"line":91,"column":48}},"46":{"start":{"line":93,"column":15},"end":{"line":93,"column":33}},"47":{"start":{"line":95,"column":16},"end":{"line":95,"column":48}},"48":{"start":{"line":97,"column":14},"end":{"line":97,"column":31}},"49":{"start":{"line":99,"column":15},"end":{"line":99,"column":46}},"50":{"start":{"line":101,"column":12},"end":{"line":101,"column":27}},"51":{"start":{"line":103,"column":13},"end":{"line":103,"column":42}},"52":{"start":{"line":105,"column":13},"end":{"line":105,"column":29}},"53":{"start":{"line":107,"column":14},"end":{"line":107,"column":44}},"54":{"start":{"line":109,"column":27},"end":{"line":109,"column":59}},"55":{"start":{"line":111,"column":16},"end":{"line":111,"column":37}},"56":{"start":{"line":113,"column":12},"end":{"line":113,"column":37}},"57":{"start":{"line":115,"column":39},"end":{"line":115,"column":93}},"58":{"start":{"line":117,"column":33},"end":{"line":117,"column":456}},"59":{"start":{"line":117,"column":64},"end":{"line":117,"column":89}},"60":{"start":{"line":117,"column":91},"end":{"line":117,"column":453}},"61":{"start":{"line":117,"column":165},"end":{"line":117,"column":263}},"62":{"start":{"line":117,"column":182},"end":{"line":117,"column":195}},"63":{"start":{"line":117,"column":209},"end":{"line":117,"column":219}},"64":{"start":{"line":117,"column":239},"end":{"line":117,"column":253}},"65":{"start":{"line":117,"column":254},"end":{"line":117,"column":261}},"66":{"start":{"line":117,"column":264},"end":{"line":117,"column":426}},"67":{"start":{"line":117,"column":281},"end":{"line":117,"column":296}},"68":{"start":{"line":117,"column":306},"end":{"line":117,"column":424}},"69":{"start":{"line":117,"column":360},"end":{"line":117,"column":380}},"70":{"start":{"line":117,"column":401},"end":{"line":117,"column":420}},"71":{"start":{"line":117,"column":429},"end":{"line":117,"column":449}},"72":{"start":{"line":119,"column":14},"end":{"line":119,"column":58}},"73":{"start":{"line":120,"column":25},"end":{"line":120,"column":66}},"74":{"start":{"line":121,"column":29},"end":{"line":121,"column":74}},"75":{"start":{"line":122,"column":38},"end":{"line":122,"column":92}},"76":{"start":{"line":125,"column":2},"end":{"line":142,"column":5}},"77":{"start":{"line":127,"column":4},"end":{"line":141,"column":5}},"78":{"start":{"line":128,"column":6},"end":{"line":128,"column":45}},"79":{"start":{"line":129,"column":11},"end":{"line":141,"column":5}},"80":{"start":{"line":130,"column":21},"end":{"line":130,"column":53}},"81":{"start":{"line":132,"column":6},"end":{"line":140,"column":7}},"82":{"start":{"line":133,"column":8},"end":{"line":133,"column":34}},"83":{"start":{"line":136,"column":21},"end":{"line":136,"column":48}},"84":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"85":{"start":{"line":138,"column":10},"end":{"line":138,"column":54}},"86":{"start":{"line":146,"column":16},"end":{"line":146,"column":33}},"87":{"start":{"line":147,"column":2},"end":{"line":150,"column":3}},"88":{"start":{"line":149,"column":4},"end":{"line":149,"column":43}},"89":{"start":{"line":154,"column":16},"end":{"line":154,"column":33}},"90":{"start":{"line":155,"column":18},"end":{"line":155,"column":30}},"91":{"start":{"line":157,"column":2},"end":{"line":173,"column":3}},"92":{"start":{"line":159,"column":4},"end":{"line":159,"column":50}},"93":{"start":{"line":160,"column":4},"end":{"line":160,"column":55}},"94":{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},"95":{"start":{"line":164,"column":6},"end":{"line":164,"column":46}},"96":{"start":{"line":169,"column":4},"end":{"line":172,"column":5}},"97":{"start":{"line":170,"column":6},"end":{"line":170,"column":35}},"98":{"start":{"line":171,"column":6},"end":{"line":171,"column":29}},"99":{"start":{"line":177,"column":2},"end":{"line":183,"column":3}},"100":{"start":{"line":178,"column":4},"end":{"line":178,"column":44}},"101":{"start":{"line":179,"column":9},"end":{"line":183,"column":3}},"102":{"start":{"line":180,"column":4},"end":{"line":180,"column":57}},"103":{"start":{"line":180,"column":29},"end":{"line":180,"column":55}},"104":{"start":{"line":182,"column":4},"end":{"line":182,"column":17}},"105":{"start":{"line":187,"column":2},"end":{"line":209,"column":3}},"106":{"start":{"line":189,"column":22},"end":{"line":189,"column":92}},"107":{"start":{"line":189,"column":72},"end":{"line":189,"column":91}},"108":{"start":{"line":191,"column":4},"end":{"line":195,"column":5}},"109":{"start":{"line":192,"column":20},"end":{"line":192,"column":42}},"110":{"start":{"line":193,"column":6},"end":{"line":193,"column":101}},"111":{"start":{"line":194,"column":6},"end":{"line":194,"column":13}},"112":{"start":{"line":196,"column":4},"end":{"line":196,"column":46}},"113":{"start":{"line":197,"column":4},"end":{"line":208,"column":7}},"114":{"start":{"line":199,"column":6},"end":{"line":207,"column":7}},"115":{"start":{"line":201,"column":8},"end":{"line":206,"column":9}},"116":{"start":{"line":202,"column":10},"end":{"line":202,"column":70}},"117":{"start":{"line":205,"column":10},"end":{"line":205,"column":57}},"118":{"start":{"line":213,"column":17},"end":{"line":213,"column":28}},"119":{"start":{"line":215,"column":2},"end":{"line":215,"column":39}},"120":{"start":{"line":215,"column":21},"end":{"line":215,"column":39}},"121":{"start":{"line":216,"column":16},"end":{"line":216,"column":28}},"122":{"start":{"line":218,"column":2},"end":{"line":220,"column":3}},"123":{"start":{"line":219,"column":4},"end":{"line":219,"column":40}},"124":{"start":{"line":222,"column":2},"end":{"line":222,"column":80}},"125":{"start":{"line":222,"column":35},"end":{"line":222,"column":80}},"126":{"start":{"line":223,"column":2},"end":{"line":223,"column":80}},"127":{"start":{"line":223,"column":35},"end":{"line":223,"column":80}},"128":{"start":{"line":227,"column":16},"end":{"line":227,"column":33}},"129":{"start":{"line":228,"column":2},"end":{"line":296,"column":3}},"130":{"start":{"line":229,"column":4},"end":{"line":229,"column":33}},"131":{"start":{"line":231,"column":4},"end":{"line":245,"column":5}},"132":{"start":{"line":233,"column":6},"end":{"line":233,"column":63}},"133":{"start":{"line":234,"column":6},"end":{"line":234,"column":63}},"134":{"start":{"line":235,"column":6},"end":{"line":235,"column":63}},"135":{"start":{"line":236,"column":6},"end":{"line":236,"column":63}},"136":{"start":{"line":237,"column":6},"end":{"line":237,"column":63}},"137":{"start":{"line":238,"column":6},"end":{"line":238,"column":63}},"138":{"start":{"line":239,"column":6},"end":{"line":239,"column":24}},"139":{"start":{"line":240,"column":6},"end":{"line":240,"column":24}},"140":{"start":{"line":241,"column":6},"end":{"line":241,"column":24}},"141":{"start":{"line":242,"column":6},"end":{"line":242,"column":24}},"142":{"start":{"line":243,"column":6},"end":{"line":243,"column":24}},"143":{"start":{"line":244,"column":6},"end":{"line":244,"column":24}},"144":{"start":{"line":247,"column":4},"end":{"line":273,"column":5}},"145":{"start":{"line":248,"column":24},"end":{"line":248,"column":153}},"146":{"start":{"line":249,"column":23},"end":{"line":249,"column":151}},"147":{"start":{"line":250,"column":23},"end":{"line":250,"column":64}},"148":{"start":{"line":252,"column":6},"end":{"line":252,"column":29}},"149":{"start":{"line":253,"column":6},"end":{"line":253,"column":29}},"150":{"start":{"line":254,"column":6},"end":{"line":254,"column":29}},"151":{"start":{"line":255,"column":6},"end":{"line":255,"column":28}},"152":{"start":{"line":256,"column":6},"end":{"line":256,"column":28}},"153":{"start":{"line":268,"column":6},"end":{"line":272,"column":8}},"154":{"start":{"line":275,"column":4},"end":{"line":295,"column":5}},"155":{"start":{"line":276,"column":20},"end":{"line":276,"column":58}},"156":{"start":{"line":277,"column":20},"end":{"line":277,"column":58}},"157":{"start":{"line":278,"column":19},"end":{"line":278,"column":56}},"158":{"start":{"line":279,"column":19},"end":{"line":279,"column":56}},"159":{"start":{"line":281,"column":6},"end":{"line":281,"column":25}},"160":{"start":{"line":282,"column":6},"end":{"line":282,"column":25}},"161":{"start":{"line":283,"column":6},"end":{"line":283,"column":24}},"162":{"start":{"line":284,"column":6},"end":{"line":284,"column":24}},"163":{"start":{"line":285,"column":6},"end":{"line":294,"column":8}},"164":{"start":{"line":300,"column":16},"end":{"line":300,"column":33}},"165":{"start":{"line":301,"column":18},"end":{"line":301,"column":30}},"166":{"start":{"line":303,"column":2},"end":{"line":309,"column":3}},"167":{"start":{"line":305,"column":17},"end":{"line":305,"column":95}},"168":{"start":{"line":306,"column":25},"end":{"line":306,"column":61}},"169":{"start":{"line":307,"column":4},"end":{"line":307,"column":22}},"170":{"start":{"line":308,"column":4},"end":{"line":308,"column":58}},"171":{"start":{"line":310,"column":2},"end":{"line":322,"column":3}},"172":{"start":{"line":312,"column":17},"end":{"line":312,"column":95}},"173":{"start":{"line":313,"column":15},"end":{"line":313,"column":87}},"174":{"start":{"line":314,"column":29},"end":{"line":314,"column":65}},"175":{"start":{"line":315,"column":27},"end":{"line":315,"column":61}},"176":{"start":{"line":316,"column":4},"end":{"line":316,"column":22}},"177":{"start":{"line":317,"column":4},"end":{"line":317,"column":20}},"178":{"start":{"line":318,"column":4},"end":{"line":321,"column":6}},"179":{"start":{"line":326,"column":20},"end":{"line":326,"column":173}},"180":{"start":{"line":328,"column":2},"end":{"line":340,"column":5}},"181":{"start":{"line":329,"column":4},"end":{"line":339,"column":7}},"182":{"start":{"line":330,"column":6},"end":{"line":330,"column":23}},"183":{"start":{"line":331,"column":6},"end":{"line":331,"column":20}},"184":{"start":{"line":333,"column":25},"end":{"line":333,"column":116}},"185":{"start":{"line":334,"column":6},"end":{"line":334,"column":81}},"186":{"start":{"line":334,"column":29},"end":{"line":334,"column":81}},"187":{"start":{"line":335,"column":6},"end":{"line":335,"column":76}},"188":{"start":{"line":335,"column":24},"end":{"line":335,"column":76}},"189":{"start":{"line":336,"column":6},"end":{"line":336,"column":44}},"190":{"start":{"line":337,"column":6},"end":{"line":337,"column":63}},"191":{"start":{"line":338,"column":6},"end":{"line":338,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":41},"end":{"line":8,"column":42}},"loc":{"start":{"line":8,"column":47},"end":{"line":77,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":31},"end":{"line":9,"column":32}},"loc":{"start":{"line":9,"column":48},"end":{"line":72,"column":3}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":22},"end":{"line":22,"column":23}},"loc":{"start":{"line":22,"column":38},"end":{"line":34,"column":9}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":84},"end":{"line":27,"column":85}},"loc":{"start":{"line":27,"column":97},"end":{"line":29,"column":15}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":40},"end":{"line":40,"column":41}},"loc":{"start":{"line":40,"column":56},"end":{"line":42,"column":13}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":57,"column":22},"end":{"line":57,"column":23}},"loc":{"start":{"line":57,"column":38},"end":{"line":68,"column":9}},"line":57},"6":{"name":"processData","decl":{"start":{"line":74,"column":18},"end":{"line":74,"column":29}},"loc":{"start":{"line":74,"column":34},"end":{"line":76,"column":3}},"line":74},"7":{"name":"_interopRequireDefault","decl":{"start":{"line":115,"column":9},"end":{"line":115,"column":31}},"loc":{"start":{"line":115,"column":37},"end":{"line":115,"column":95}},"line":115},"8":{"name":"_asyncToGenerator","decl":{"start":{"line":117,"column":9},"end":{"line":117,"column":26}},"loc":{"start":{"line":117,"column":31},"end":{"line":117,"column":458}},"line":117},"9":{"name":"(anonymous_9)","decl":{"start":{"line":117,"column":40},"end":{"line":117,"column":41}},"loc":{"start":{"line":117,"column":52},"end":{"line":117,"column":455}},"line":117},"10":{"name":"(anonymous_10)","decl":{"start":{"line":117,"column":110},"end":{"line":117,"column":111}},"loc":{"start":{"line":117,"column":137},"end":{"line":117,"column":451}},"line":117},"11":{"name":"step","decl":{"start":{"line":117,"column":148},"end":{"line":117,"column":152}},"loc":{"start":{"line":117,"column":163},"end":{"line":117,"column":428}},"line":117},"12":{"name":"(anonymous_12)","decl":{"start":{"line":117,"column":341},"end":{"line":117,"column":342}},"loc":{"start":{"line":117,"column":358},"end":{"line":117,"column":382}},"line":117},"13":{"name":"(anonymous_13)","decl":{"start":{"line":117,"column":384},"end":{"line":117,"column":385}},"loc":{"start":{"line":117,"column":399},"end":{"line":117,"column":422}},"line":117},"14":{"name":"marshallComparisonFieldsInQuery","decl":{"start":{"line":124,"column":9},"end":{"line":124,"column":40}},"loc":{"start":{"line":124,"column":54},"end":{"line":143,"column":1}},"line":124},"15":{"name":"(anonymous_15)","decl":{"start":{"line":125,"column":39},"end":{"line":125,"column":40}},"loc":{"start":{"line":125,"column":55},"end":{"line":142,"column":3}},"line":125},"16":{"name":"marshallComparisonQuery","decl":{"start":{"line":145,"column":9},"end":{"line":145,"column":32}},"loc":{"start":{"line":145,"column":39},"end":{"line":151,"column":1}},"line":145},"17":{"name":"marshallQuery","decl":{"start":{"line":153,"column":9},"end":{"line":153,"column":22}},"loc":{"start":{"line":153,"column":29},"end":{"line":174,"column":1}},"line":153},"18":{"name":"coordinatesToNumbers","decl":{"start":{"line":176,"column":9},"end":{"line":176,"column":29}},"loc":{"start":{"line":176,"column":37},"end":{"line":184,"column":1}},"line":176},"19":{"name":"(anonymous_19)","decl":{"start":{"line":180,"column":21},"end":{"line":180,"column":22}},"loc":{"start":{"line":180,"column":29},"end":{"line":180,"column":55}},"line":180},"20":{"name":"marshallGeometryQuery","decl":{"start":{"line":186,"column":9},"end":{"line":186,"column":30}},"loc":{"start":{"line":186,"column":38},"end":{"line":210,"column":1}},"line":186},"21":{"name":"(anonymous_21)","decl":{"start":{"line":189,"column":65},"end":{"line":189,"column":66}},"loc":{"start":{"line":189,"column":72},"end":{"line":189,"column":91}},"line":189},"22":{"name":"(anonymous_22)","decl":{"start":{"line":197,"column":41},"end":{"line":197,"column":42}},"loc":{"start":{"line":197,"column":57},"end":{"line":208,"column":5}},"line":197},"23":{"name":"marshallTileQuery","decl":{"start":{"line":212,"column":9},"end":{"line":212,"column":26}},"loc":{"start":{"line":212,"column":33},"end":{"line":224,"column":1}},"line":212},"24":{"name":"marshallSpatialQuery","decl":{"start":{"line":226,"column":9},"end":{"line":226,"column":29}},"loc":{"start":{"line":226,"column":36},"end":{"line":297,"column":1}},"line":226},"25":{"name":"processForecastTime","decl":{"start":{"line":299,"column":9},"end":{"line":299,"column":28}},"loc":{"start":{"line":299,"column":35},"end":{"line":323,"column":1}},"line":299},"26":{"name":"readFile","decl":{"start":{"line":325,"column":9},"end":{"line":325,"column":17}},"loc":{"start":{"line":325,"column":33},"end":{"line":341,"column":1}},"line":325},"27":{"name":"(anonymous_27)","decl":{"start":{"line":328,"column":21},"end":{"line":328,"column":22}},"loc":{"start":{"line":328,"column":42},"end":{"line":340,"column":3}},"line":328},"28":{"name":"(anonymous_28)","decl":{"start":{"line":329,"column":55},"end":{"line":329,"column":56}},"loc":{"start":{"line":329,"column":63},"end":{"line":332,"column":5}},"line":329},"29":{"name":"(anonymous_29)","decl":{"start":{"line":332,"column":13},"end":{"line":332,"column":14}},"loc":{"start":{"line":332,"column":22},"end":{"line":339,"column":5}},"line":332}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":12},"end":{"line":15,"column":37}},"type":"cond-expr","locations":[{"start":{"line":15,"column":22},"end":{"line":15,"column":27}},{"start":{"line":15,"column":30},"end":{"line":15,"column":37}}],"line":15},"1":{"loc":{"start":{"line":18,"column":4},"end":{"line":50,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":50,"column":5}},{"start":{"line":18,"column":4},"end":{"line":50,"column":5}}],"line":18},"2":{"loc":{"start":{"line":20,"column":6},"end":{"line":46,"column":7}},"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":46,"column":7}},{"start":{"line":20,"column":6},"end":{"line":46,"column":7}}],"line":20},"3":{"loc":{"start":{"line":20,"column":10},"end":{"line":20,"column":91}},"type":"binary-expr","locations":[{"start":{"line":20,"column":10},"end":{"line":20,"column":15}},{"start":{"line":20,"column":19},"end":{"line":20,"column":57}},{"start":{"line":20,"column":61},"end":{"line":20,"column":91}}],"line":20},"4":{"loc":{"start":{"line":24,"column":10},"end":{"line":33,"column":11}},"type":"if","locations":[{"start":{"line":24,"column":10},"end":{"line":33,"column":11}},{"start":{"line":24,"column":10},"end":{"line":33,"column":11}}],"line":24},"5":{"loc":{"start":{"line":26,"column":12},"end":{"line":32,"column":13}},"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":32,"column":13}},{"start":{"line":26,"column":12},"end":{"line":32,"column":13}}],"line":26},"6":{"loc":{"start":{"line":36,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":45,"column":9}},{"start":{"line":36,"column":8},"end":{"line":45,"column":9}}],"line":36},"7":{"loc":{"start":{"line":39,"column":10},"end":{"line":43,"column":11}},"type":"if","locations":[{"start":{"line":39,"column":10},"end":{"line":43,"column":11}},{"start":{"line":39,"column":10},"end":{"line":43,"column":11}}],"line":39},"8":{"loc":{"start":{"line":44,"column":55},"end":{"line":44,"column":81}},"type":"cond-expr","locations":[{"start":{"line":44,"column":65},"end":{"line":44,"column":70}},{"start":{"line":44,"column":73},"end":{"line":44,"column":81}}],"line":44},"9":{"loc":{"start":{"line":52,"column":4},"end":{"line":71,"column":5}},"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":71,"column":5}},{"start":{"line":52,"column":4},"end":{"line":71,"column":5}}],"line":52},"10":{"loc":{"start":{"line":52,"column":8},"end":{"line":52,"column":113}},"type":"binary-expr","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":37}},{"start":{"line":52,"column":41},"end":{"line":52,"column":78}},{"start":{"line":52,"column":82},"end":{"line":52,"column":113}}],"line":52},"11":{"loc":{"start":{"line":56,"column":6},"end":{"line":70,"column":7}},"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":70,"column":7}},{"start":{"line":56,"column":6},"end":{"line":70,"column":7}}],"line":56},"12":{"loc":{"start":{"line":56,"column":10},"end":{"line":56,"column":246}},"type":"binary-expr","locations":[{"start":{"line":56,"column":10},"end":{"line":56,"column":46}},{"start":{"line":56,"column":50},"end":{"line":56,"column":86}},{"start":{"line":56,"column":90},"end":{"line":56,"column":126}},{"start":{"line":56,"column":130},"end":{"line":56,"column":166}},{"start":{"line":56,"column":170},"end":{"line":56,"column":206}},{"start":{"line":56,"column":210},"end":{"line":56,"column":246}}],"line":56},"13":{"loc":{"start":{"line":69,"column":53},"end":{"line":69,"column":79}},"type":"cond-expr","locations":[{"start":{"line":69,"column":63},"end":{"line":69,"column":68}},{"start":{"line":69,"column":71},"end":{"line":69,"column":79}}],"line":69},"14":{"loc":{"start":{"line":115,"column":46},"end":{"line":115,"column":92}},"type":"cond-expr","locations":[{"start":{"line":115,"column":70},"end":{"line":115,"column":73}},{"start":{"line":115,"column":76},"end":{"line":115,"column":92}}],"line":115},"15":{"loc":{"start":{"line":115,"column":46},"end":{"line":115,"column":67}},"type":"binary-expr","locations":[{"start":{"line":115,"column":46},"end":{"line":115,"column":49}},{"start":{"line":115,"column":53},"end":{"line":115,"column":67}}],"line":115},"16":{"loc":{"start":{"line":117,"column":264},"end":{"line":117,"column":426}},"type":"if","locations":[{"start":{"line":117,"column":264},"end":{"line":117,"column":426}},{"start":{"line":117,"column":264},"end":{"line":117,"column":426}}],"line":117},"17":{"loc":{"start":{"line":127,"column":4},"end":{"line":141,"column":5}},"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":141,"column":5}},{"start":{"line":127,"column":4},"end":{"line":141,"column":5}}],"line":127},"18":{"loc":{"start":{"line":129,"column":11},"end":{"line":141,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":11},"end":{"line":141,"column":5}},{"start":{"line":129,"column":11},"end":{"line":141,"column":5}}],"line":129},"19":{"loc":{"start":{"line":129,"column":15},"end":{"line":129,"column":81}},"type":"binary-expr","locations":[{"start":{"line":129,"column":15},"end":{"line":129,"column":28}},{"start":{"line":129,"column":32},"end":{"line":129,"column":46}},{"start":{"line":129,"column":50},"end":{"line":129,"column":63}},{"start":{"line":129,"column":67},"end":{"line":129,"column":81}}],"line":129},"20":{"loc":{"start":{"line":132,"column":6},"end":{"line":140,"column":7}},"type":"if","locations":[{"start":{"line":132,"column":6},"end":{"line":140,"column":7}},{"start":{"line":132,"column":6},"end":{"line":140,"column":7}}],"line":132},"21":{"loc":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},{"start":{"line":137,"column":8},"end":{"line":139,"column":9}}],"line":137},"22":{"loc":{"start":{"line":147,"column":2},"end":{"line":150,"column":3}},"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":150,"column":3}},{"start":{"line":147,"column":2},"end":{"line":150,"column":3}}],"line":147},"23":{"loc":{"start":{"line":157,"column":2},"end":{"line":173,"column":3}},"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":173,"column":3}},{"start":{"line":157,"column":2},"end":{"line":173,"column":3}}],"line":157},"24":{"loc":{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},{"start":{"line":163,"column":4},"end":{"line":165,"column":5}}],"line":163},"25":{"loc":{"start":{"line":163,"column":8},"end":{"line":163,"column":125}},"type":"binary-expr","locations":[{"start":{"line":163,"column":8},"end":{"line":163,"column":46}},{"start":{"line":163,"column":50},"end":{"line":163,"column":90}},{"start":{"line":163,"column":94},"end":{"line":163,"column":125}}],"line":163},"26":{"loc":{"start":{"line":169,"column":4},"end":{"line":172,"column":5}},"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":172,"column":5}},{"start":{"line":169,"column":4},"end":{"line":172,"column":5}}],"line":169},"27":{"loc":{"start":{"line":169,"column":8},"end":{"line":169,"column":64}},"type":"binary-expr","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":35}},{"start":{"line":169,"column":39},"end":{"line":169,"column":64}}],"line":169},"28":{"loc":{"start":{"line":177,"column":2},"end":{"line":183,"column":3}},"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":183,"column":3}},{"start":{"line":177,"column":2},"end":{"line":183,"column":3}}],"line":177},"29":{"loc":{"start":{"line":179,"column":9},"end":{"line":183,"column":3}},"type":"if","locations":[{"start":{"line":179,"column":9},"end":{"line":183,"column":3}},{"start":{"line":179,"column":9},"end":{"line":183,"column":3}}],"line":179},"30":{"loc":{"start":{"line":187,"column":2},"end":{"line":209,"column":3}},"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":209,"column":3}},{"start":{"line":187,"column":2},"end":{"line":209,"column":3}}],"line":187},"31":{"loc":{"start":{"line":191,"column":4},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":195,"column":5}},{"start":{"line":191,"column":4},"end":{"line":195,"column":5}}],"line":191},"32":{"loc":{"start":{"line":193,"column":31},"end":{"line":193,"column":100}},"type":"cond-expr","locations":[{"start":{"line":193,"column":59},"end":{"line":193,"column":92}},{"start":{"line":193,"column":95},"end":{"line":193,"column":100}}],"line":193},"33":{"loc":{"start":{"line":193,"column":59},"end":{"line":193,"column":92}},"type":"binary-expr","locations":[{"start":{"line":193,"column":59},"end":{"line":193,"column":75}},{"start":{"line":193,"column":79},"end":{"line":193,"column":92}}],"line":193},"34":{"loc":{"start":{"line":199,"column":6},"end":{"line":207,"column":7}},"type":"if","locations":[{"start":{"line":199,"column":6},"end":{"line":207,"column":7}},{"start":{"line":199,"column":6},"end":{"line":207,"column":7}}],"line":199},"35":{"loc":{"start":{"line":201,"column":8},"end":{"line":206,"column":9}},"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":206,"column":9}},{"start":{"line":201,"column":8},"end":{"line":206,"column":9}}],"line":201},"36":{"loc":{"start":{"line":215,"column":2},"end":{"line":215,"column":39}},"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":39}},{"start":{"line":215,"column":2},"end":{"line":215,"column":39}}],"line":215},"37":{"loc":{"start":{"line":218,"column":2},"end":{"line":220,"column":3}},"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":220,"column":3}},{"start":{"line":218,"column":2},"end":{"line":220,"column":3}}],"line":218},"38":{"loc":{"start":{"line":218,"column":6},"end":{"line":218,"column":95}},"type":"binary-expr","locations":[{"start":{"line":218,"column":6},"end":{"line":218,"column":21}},{"start":{"line":218,"column":25},"end":{"line":218,"column":58}},{"start":{"line":218,"column":62},"end":{"line":218,"column":95}}],"line":218},"39":{"loc":{"start":{"line":222,"column":2},"end":{"line":222,"column":80}},"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":80}},{"start":{"line":222,"column":2},"end":{"line":222,"column":80}}],"line":222},"40":{"loc":{"start":{"line":223,"column":2},"end":{"line":223,"column":80}},"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":223,"column":80}},{"start":{"line":223,"column":2},"end":{"line":223,"column":80}}],"line":223},"41":{"loc":{"start":{"line":228,"column":2},"end":{"line":296,"column":3}},"type":"if","locations":[{"start":{"line":228,"column":2},"end":{"line":296,"column":3}},{"start":{"line":228,"column":2},"end":{"line":296,"column":3}}],"line":228},"42":{"loc":{"start":{"line":231,"column":4},"end":{"line":245,"column":5}},"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":245,"column":5}},{"start":{"line":231,"column":4},"end":{"line":245,"column":5}}],"line":231},"43":{"loc":{"start":{"line":231,"column":8},"end":{"line":231,"column":238}},"type":"binary-expr","locations":[{"start":{"line":231,"column":8},"end":{"line":231,"column":43}},{"start":{"line":231,"column":47},"end":{"line":231,"column":82}},{"start":{"line":231,"column":86},"end":{"line":231,"column":121}},{"start":{"line":231,"column":125},"end":{"line":231,"column":160}},{"start":{"line":231,"column":164},"end":{"line":231,"column":199}},{"start":{"line":231,"column":203},"end":{"line":231,"column":238}}],"line":231},"44":{"loc":{"start":{"line":247,"column":4},"end":{"line":273,"column":5}},"type":"if","locations":[{"start":{"line":247,"column":4},"end":{"line":273,"column":5}},{"start":{"line":247,"column":4},"end":{"line":273,"column":5}}],"line":247},"45":{"loc":{"start":{"line":247,"column":8},"end":{"line":247,"column":226}},"type":"binary-expr","locations":[{"start":{"line":247,"column":9},"end":{"line":247,"column":49}},{"start":{"line":247,"column":53},"end":{"line":247,"column":93}},{"start":{"line":247,"column":99},"end":{"line":247,"column":139}},{"start":{"line":247,"column":143},"end":{"line":247,"column":182}},{"start":{"line":247,"column":187},"end":{"line":247,"column":226}}],"line":247},"46":{"loc":{"start":{"line":248,"column":24},"end":{"line":248,"column":153}},"type":"cond-expr","locations":[{"start":{"line":248,"column":66},"end":{"line":248,"column":108}},{"start":{"line":248,"column":111},"end":{"line":248,"column":153}}],"line":248},"47":{"loc":{"start":{"line":249,"column":23},"end":{"line":249,"column":151}},"type":"cond-expr","locations":[{"start":{"line":249,"column":65},"end":{"line":249,"column":106}},{"start":{"line":249,"column":109},"end":{"line":249,"column":151}}],"line":249},"48":{"loc":{"start":{"line":275,"column":4},"end":{"line":295,"column":5}},"type":"if","locations":[{"start":{"line":275,"column":4},"end":{"line":295,"column":5}},{"start":{"line":275,"column":4},"end":{"line":295,"column":5}}],"line":275},"49":{"loc":{"start":{"line":275,"column":8},"end":{"line":275,"column":162}},"type":"binary-expr","locations":[{"start":{"line":275,"column":8},"end":{"line":275,"column":44}},{"start":{"line":275,"column":48},"end":{"line":275,"column":84}},{"start":{"line":275,"column":88},"end":{"line":275,"column":123}},{"start":{"line":275,"column":127},"end":{"line":275,"column":162}}],"line":275},"50":{"loc":{"start":{"line":303,"column":2},"end":{"line":309,"column":3}},"type":"if","locations":[{"start":{"line":303,"column":2},"end":{"line":309,"column":3}},{"start":{"line":303,"column":2},"end":{"line":309,"column":3}}],"line":303},"51":{"loc":{"start":{"line":303,"column":6},"end":{"line":303,"column":50}},"type":"binary-expr","locations":[{"start":{"line":303,"column":6},"end":{"line":303,"column":11}},{"start":{"line":303,"column":15},"end":{"line":303,"column":50}}],"line":303},"52":{"loc":{"start":{"line":305,"column":17},"end":{"line":305,"column":95}},"type":"cond-expr","locations":[{"start":{"line":305,"column":50},"end":{"line":305,"column":82}},{"start":{"line":305,"column":85},"end":{"line":305,"column":95}}],"line":305},"53":{"loc":{"start":{"line":310,"column":2},"end":{"line":322,"column":3}},"type":"if","locations":[{"start":{"line":310,"column":2},"end":{"line":322,"column":3}},{"start":{"line":310,"column":2},"end":{"line":322,"column":3}}],"line":310},"54":{"loc":{"start":{"line":310,"column":6},"end":{"line":310,"column":87}},"type":"binary-expr","locations":[{"start":{"line":310,"column":6},"end":{"line":310,"column":11}},{"start":{"line":310,"column":15},"end":{"line":310,"column":50}},{"start":{"line":310,"column":54},"end":{"line":310,"column":87}}],"line":310},"55":{"loc":{"start":{"line":312,"column":17},"end":{"line":312,"column":95}},"type":"cond-expr","locations":[{"start":{"line":312,"column":50},"end":{"line":312,"column":82}},{"start":{"line":312,"column":85},"end":{"line":312,"column":95}}],"line":312},"56":{"loc":{"start":{"line":313,"column":15},"end":{"line":313,"column":87}},"type":"cond-expr","locations":[{"start":{"line":313,"column":46},"end":{"line":313,"column":76}},{"start":{"line":313,"column":79},"end":{"line":313,"column":87}}],"line":313},"57":{"loc":{"start":{"line":326,"column":20},"end":{"line":326,"column":173}},"type":"cond-expr","locations":[{"start":{"line":326,"column":72},"end":{"line":326,"column":94}},{"start":{"line":326,"column":97},"end":{"line":326,"column":173}}],"line":326},"58":{"loc":{"start":{"line":334,"column":6},"end":{"line":334,"column":81}},"type":"if","locations":[{"start":{"line":334,"column":6},"end":{"line":334,"column":81}},{"start":{"line":334,"column":6},"end":{"line":334,"column":81}}],"line":334},"59":{"loc":{"start":{"line":335,"column":6},"end":{"line":335,"column":76}},"type":"if","locations":[{"start":{"line":335,"column":6},"end":{"line":335,"column":76}},{"start":{"line":335,"column":6},"end":{"line":335,"column":76}}],"line":335}},"s":{"0":1,"1":1,"2":1,"3":1,"4":105,"5":105,"6":105,"7":105,"8":105,"9":105,"10":105,"11":70,"12":6,"13":6,"14":6,"15":4,"16":2,"17":2,"18":2,"19":6,"20":4,"21":4,"22":2,"23":2,"24":4,"25":70,"26":70,"27":105,"28":96,"29":9,"30":3,"31":3,"32":3,"33":3,"34":3,"35":1,"36":105,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":6,"58":1,"59":105,"60":105,"61":111,"62":111,"63":111,"64":0,"65":0,"66":111,"67":105,"68":6,"69":6,"70":0,"71":105,"72":1,"73":1,"74":1,"75":1,"76":3,"77":6,"78":2,"79":4,"80":4,"81":4,"82":2,"83":2,"84":2,"85":2,"86":1,"87":1,"88":1,"89":106,"90":106,"91":106,"92":49,"93":49,"94":49,"95":30,"96":49,"97":0,"98":0,"99":18,"100":6,"101":12,"102":6,"103":12,"104":6,"105":52,"106":8,"107":8,"108":8,"109":3,"110":3,"111":3,"112":5,"113":5,"114":6,"115":6,"116":4,"117":2,"118":51,"119":51,"120":3,"121":51,"122":51,"123":45,"124":51,"125":0,"126":51,"127":0,"128":55,"129":55,"130":52,"131":52,"132":3,"133":3,"134":3,"135":3,"136":3,"137":3,"138":3,"139":3,"140":3,"141":3,"142":3,"143":3,"144":52,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":52,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":51,"165":51,"166":51,"167":9,"168":9,"169":9,"170":9,"171":51,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":4,"180":4,"181":4,"182":4,"183":4,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0},"f":{"0":1,"1":105,"2":6,"3":2,"4":2,"5":3,"6":105,"7":6,"8":1,"9":105,"10":105,"11":111,"12":6,"13":0,"14":3,"15":6,"16":1,"17":106,"18":18,"19":12,"20":52,"21":8,"22":6,"23":51,"24":55,"25":51,"26":4,"27":4,"28":4,"29":0},"b":{"0":[78,27],"1":[70,35],"2":[6,64],"3":[70,34,30],"4":[4,2],"5":[2,2],"6":[4,2],"7":[2,2],"8":[4,0],"9":[96,9],"10":[105,51,45],"11":[3,6],"12":[9,3,3,3,3,3],"13":[3,0],"14":[0,6],"15":[6,6],"16":[105,6],"17":[2,4],"18":[4,0],"19":[4,3,2,1],"20":[2,2],"21":[2,0],"22":[1,0],"23":[49,57],"24":[30,19],"25":[49,45,45],"26":[0,49],"27":[49,49],"28":[6,12],"29":[6,6],"30":[8,44],"31":[3,5],"32":[0,3],"33":[0,0],"34":[6,0],"35":[4,2],"36":[3,48],"37":[45,6],"38":[51,45,45],"39":[0,51],"40":[0,51],"41":[52,3],"42":[3,49],"43":[52,3,3,3,3,3],"44":[1,51],"45":[52,51,1,0,1],"46":[0,1],"47":[0,1],"48":[1,51],"49":[52,1,1,1],"50":[9,42],"51":[51,51],"52":[9,0],"53":[0,51],"54":[51,51,0],"55":[0,0],"56":[0,0],"57":[4,0],"58":[0,0],"59":[0,0]},"inputSourceMap":{"version":3,"sources":["query.js"],"names":["hook","params","query","service","items","isArray","Array","isExternalDataStorage","_","isNil","$select","includes","dataPromises","forEach","item","convertedFilePath","element","dataStore","push","readFromGridFS","then","readFile","length","Promise","all","map","fs","remove","discardFilepathField","discardConvertedFilepathField","discardDataField","oLon","oLat","sLon","sLat","dLon","dLat","grid","Grid","bounds","forecast","origin","size","resolution","data","resample","Object","assign","getMinMax","processData","marshallComparisonQuery","marshallQuery","marshallTileQuery","marshallSpatialQuery","processForecastTime","debug","marshallComparisonFieldsInQuery","queryObject","forOwn","value","key","number","toNumber","Number","isNaN","date","moment","utc","isValid","Date","valueOf","$paginate","paginate","coordinatesToNumbers","marshallGeometryQuery","geometry","geoOperator","keys","find","startsWith","$exists","coordinates","has","x","y","centerLon","longitude","centerLat","latitude","distance","$geoWithin","$centerSphere","south","north","west","east","$geoIntersects","$geometry","type","time","forecastTime","getNearestForecastTime","from","to","fromForecastTime","toForecastTime","$gte","$lte","inputPath","path","isAbsolute","join","app","get","resolve","reject","readJson","catch","error","errorMessage","name","format","runTime","logger"],"mappings":"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","file":"query.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks","sourcesContent":["import moment from 'moment'\nimport fs from 'fs-extra'\nimport logger from 'winston'\nimport _ from 'lodash'\nimport path from 'path'\nimport makeDebug from 'debug'\nimport { getItems, replaceItems, discard } from 'feathers-hooks-common'\nimport { marshallTime } from './marshall'\nimport { Grid } from '../common/grid'\n\nconst debug = makeDebug('weacast:weacast-core')\nconst discardDataField = discard('data')\nconst discardFilepathField = discard('filePath')\nconst discardConvertedFilepathField = discard('convertedFilePath')\n\nfunction marshallComparisonFieldsInQuery (queryObject) {\n  _.forOwn(queryObject, (value, key) => {\n    // Process current attributes or  recurse\n    if (typeof value === 'object') {\n      marshallComparisonFieldsInQuery(value)\n    } else if ((key === '$lt') || (key === '$lte') || (key === '$gt') || (key === '$gte')) {\n      const number = _.toNumber(value)\n      // Update from query string to number if required\n      if (!Number.isNaN(number)) {\n        queryObject[key] = number\n      } else {\n        // try for dates as well\n        const date = moment.utc(value)\n        if (date.isValid()) {\n          queryObject[key] = new Date(date.valueOf())\n        }\n      }\n    }\n  })\n}\n\nexport function marshallComparisonQuery (hook) {\n  const query = hook.params.query\n  if (query) {\n    // Complex queries might have nested objects so we call a recursive function to handle this\n    marshallComparisonFieldsInQuery(query)\n  }\n}\n\nexport function marshallQuery (hook) {\n  const query = hook.params.query\n  const service = hook.service\n\n  if (query) {\n    // Need to convert from client/server side types : string or moment dates\n    marshallTime(query, 'runTime')\n    marshallTime(query, 'forecastTime')\n\n    // In this case take care that we always internally require the file path, it will be removed for the client by another hook\n    if (!_.isNil(query.$select) && !_.isNil(service.element) && service.isExternalDataStorage()) {\n      query.$select.push('convertedFilePath')\n    }\n    // When listing available forecast we might want to disable pagination\n    // However disabling or changing the default pagination is not available in the client in Feathers by default,\n    // this is the reason of this specific hook\n    if (query.$paginate === 'false' || query.$paginate === false) {\n      hook.params.paginate = false\n      delete query.$paginate\n    }\n  }\n}\n\nfunction coordinatesToNumbers (value) {\n  if (typeof value === 'string') {\n    return _.toNumber(value)\n  } else if (Array.isArray(value)) {\n    return value.map(item => coordinatesToNumbers(item))\n  } else {\n    return value\n  }\n}\n\nfunction marshallGeometryQuery (query) {\n  if (typeof query.geometry === 'object') {\n    // Geospatial operators begin with $\n    let geoOperator = _.keys(query.geometry).find(key => key.startsWith('$'))\n    // Specific case of exist\n    if (geoOperator === '$exists') {\n      const value = query.geometry.$exists\n      query.geometry.$exists = (typeof value === 'string' ? (value === 'true' || value === '1') : value)\n      return\n    }\n    geoOperator = query.geometry[geoOperator]\n    _.forOwn(geoOperator, (value, key) => {\n      // Geospatial parameters begin with $\n      if (key.startsWith('$')) {\n        // Some target coordinates\n        if (!_.isNil(value.coordinates)) {\n          value.coordinates = coordinatesToNumbers(value.coordinates)\n        } else {\n          // Other simple values or array of values\n          geoOperator[key] = coordinatesToNumbers(value)\n        }\n      }\n    })\n  }\n}\n\nexport function marshallTileQuery (hook) {\n  const params = hook.params\n  // Ensure we have a query object to update\n  if (!params.query) params.query = {}\n  const query = params.query\n  // This ensure that when no geometry is specified we only access raw data\n  if (!query.geometry && !_.has(query, 'x') && !_.has(query, 'y')) {\n    query.geometry = { $exists: false }\n  }\n  // If no geometry query tile x/y can be directly provided\n  if (typeof query.x === 'string') query.x = _.toNumber(query.x)\n  if (typeof query.y === 'string') query.y = _.toNumber(query.y)\n}\n\nexport function marshallSpatialQuery (hook) {\n  const query = hook.params.query\n  if (query) {\n    marshallGeometryQuery(query)\n    // Resampling is used by hooks only, do not send it to DB\n    if (!_.isNil(query.oLon) && !_.isNil(query.oLat) && !_.isNil(query.sLon) && !_.isNil(query.sLat) && !_.isNil(query.dLon) && !_.isNil(query.dLat)) {\n      // Convert when required from query strings\n      hook.params.oLat = _.toNumber(query.oLat)\n      hook.params.oLon = _.toNumber(query.oLon)\n      hook.params.sLat = _.toNumber(query.sLat)\n      hook.params.sLon = _.toNumber(query.sLon)\n      hook.params.dLat = _.toNumber(query.dLat)\n      hook.params.dLon = _.toNumber(query.dLon)\n      delete query.oLat\n      delete query.oLon\n      delete query.sLat\n      delete query.sLon\n      delete query.dLat\n      delete query.dLon\n    }\n    // Shortcut for proximity query\n    if ((!_.isNil(query.centerLon) || !_.isNil(query.longitude)) &&\n        (!_.isNil(query.centerLat) || !_.isNil(query.latitude)) && !_.isNil(query.distance)) {\n      const longitude = (_.isNil(query.centerLon) ? _.toNumber(query.longitude) : _.toNumber(query.centerLon))\n      const latitude = (_.isNil(query.centerLat) ? _.toNumber(query.latitude) : _.toNumber(query.centerLat))\n      const distance = _.toNumber(query.distance)\n      // Transform to MongoDB spatial request\n      delete query.centerLon\n      delete query.longitude\n      delete query.centerLat\n      delete query.latitude\n      delete query.distance\n      /* We switched from $near to $geoWithin due to https://github.com/weacast/weacast-core/issues/36\n      query.geometry = {\n        $near: {\n          $geometry: {\n              type: 'Point',\n              coordinates: [longitude, latitude]\n            },\n            $maxDistance: distance\n        }\n      }\n      */\n      query.geometry = {\n        $geoWithin: {\n          $centerSphere: [[longitude, latitude], distance / 6378137.0] // Earth radius as in radians\n        }\n      }\n    }\n    // Shortcut for bbox query\n    if (!_.isNil(query.south) && !_.isNil(query.north) && !_.isNil(query.west) && !_.isNil(query.east)) {\n      const south = _.toNumber(query.south)\n      const north = _.toNumber(query.north)\n      const west = _.toNumber(query.west)\n      const east = _.toNumber(query.east)\n      // Transform to MongoDB spatial request\n      delete query.south\n      delete query.north\n      delete query.west\n      delete query.east\n      query.geometry = {\n        $geoIntersects: {\n          $geometry: {\n            type: 'Polygon',\n            coordinates: [ // BBox as a polygon\n              [[west, south], [east, south], [east, north], [west, north], [west, south]] // Closing point\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function processForecastTime (hook) {\n  const query = hook.params.query\n  const service = hook.service\n\n  if (query && !_.isNil(query.time)) {\n    // Find nearest forecast time corresponding to request time\n    const time = (typeof query.time === 'string' ? moment.utc(query.time) : query.time)\n    const forecastTime = service.getNearestForecastTime(time)\n    delete query.time\n    query.forecastTime = new Date(forecastTime.valueOf())\n  }\n  if (query && !_.isNil(query.from) && !_.isNil(query.to)) {\n    // Find nearest forecast time corresponding to request time range\n    const from = (typeof query.from === 'string' ? moment.utc(query.from) : query.from)\n    const to = (typeof query.to === 'string' ? moment.utc(query.to) : query.to)\n    const fromForecastTime = service.getNearestForecastTime(from)\n    const toForecastTime = service.getNearestForecastTime(to)\n    delete query.from\n    delete query.to\n    query.forecastTime = {\n      $gte: new Date(fromForecastTime.valueOf()),\n      $lte: new Date(toForecastTime.valueOf())\n    }\n  }\n}\n\nfunction readFile (service, item) {\n  const inputPath = (path.isAbsolute(item.convertedFilePath)\n    ? item.convertedFilePath\n    : path.join(service.app.get('forecastPath'), item.convertedFilePath))\n\n  return new Promise((resolve, reject) => {\n    fs.readJson(inputPath, 'utf8')\n      .then(grid => {\n        item.data = grid\n        resolve(item)\n      })\n      .catch(error => {\n        let errorMessage = 'Cannot read converted ' + service.forecast.name + '/' + service.element.name + ' forecast'\n        if (item.forecastTime) errorMessage += ' at ' + item.forecastTime.format()\n        if (item.runTime) errorMessage += ' for run ' + item.runTime.format()\n        logger.error(errorMessage)\n        debug('Input JSON file was : ' + item.convertedFilePath)\n        reject(error)\n      })\n  })\n}\n\nexport async function processData (hook) {\n  const params = hook.params\n  const query = params.query\n  const service = hook.service\n  let items = getItems(hook)\n  const isArray = Array.isArray(items)\n  items = (isArray ? items : [items])\n\n  // If we use a file based storage we have to load data on demand\n  if (service.isExternalDataStorage()) {\n    // Process data files when required\n    if (query && !_.isNil(query.$select) && query.$select.includes('data')) {\n      const dataPromises = []\n      items.forEach(item => {\n        // Except if we target tiles which have internal data\n        if (item.convertedFilePath) {\n          // In this case we need to extract from GridFS first\n          if (service.element.dataStore === 'gridfs') {\n            dataPromises.push(\n              service.readFromGridFS(item.convertedFilePath)\n                .then(_ => readFile(service, item))\n            )\n          } else {\n            dataPromises.push(readFile(service, item))\n          }\n        }\n      })\n      // Something to be done ?\n      if (dataPromises.length > 0) {\n        await Promise.all(dataPromises)\n        // In this case we need to remove extracted files as they are temporary\n        if (service.element.dataStore === 'gridfs') {\n          await Promise.all(items.map(item => fs.remove(item.convertedFilePath)))\n        }\n        replaceItems(hook, isArray ? items : items[0])\n      }\n    }\n    // Remove any sensitive information about file path on the client side\n    discardFilepathField(hook)\n    discardConvertedFilepathField(hook)\n  }\n  // Only discard if not explicitely asked by $select\n  if (_.isNil(query) || _.isNil(query.$select) || !query.$select.includes('data')) {\n    discardDataField(hook)\n  } else {\n    // Check for resampling on returned data\n    if (!_.isNil(params.oLon) && !_.isNil(params.oLat) && !_.isNil(params.sLon) && !_.isNil(params.sLat) && !_.isNil(params.dLon) && !_.isNil(params.dLat)) {\n      items.forEach(item => {\n        const grid = new Grid({\n          bounds: service.forecast.bounds,\n          origin: service.forecast.origin,\n          size: service.forecast.size,\n          resolution: service.forecast.resolution,\n          data: item.data\n        })\n        item.data = grid.resample([params.oLon, params.oLat], [params.dLon, params.dLat], [params.sLon, params.sLat])\n        // Update statistics\n        Object.assign(item, Grid.getMinMax(item.data))\n      })\n      replaceItems(hook, isArray ? items : items[0])\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"88d1845732414c93d9fae1f39f292cd0e6b4efdd","contentHash":"4e9ba07c409c33b6c4ef2256bf0e481504d8fb1a35f5c51710b1ebf8090f4d4c"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks/logger.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks/logger.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":18}},"2":{"start":{"line":8,"column":15},"end":{"line":8,"column":33}},"3":{"start":{"line":11,"column":16},"end":{"line":11,"column":69}},"4":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":41}},"6":{"start":{"line":17,"column":2},"end":{"line":21,"column":3}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":26}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":26}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":39}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":43}},"11":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"12":{"start":{"line":27,"column":4},"end":{"line":27,"column":45}}},"fnMap":{"0":{"name":"log","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":12}},"loc":{"start":{"line":10,"column":19},"end":{"line":29,"column":1}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},{"start":{"line":13,"column":2},"end":{"line":15,"column":3}}],"line":13},"1":{"loc":{"start":{"line":17,"column":2},"end":{"line":21,"column":3}},"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":21,"column":3}},{"start":{"line":17,"column":2},"end":{"line":21,"column":3}}],"line":17},"2":{"loc":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},{"start":{"line":26,"column":2},"end":{"line":28,"column":3}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"sources":["logger.js"],"names":["log","logger","require","hook","message","type","path","method","error","debug","silly","data","params","result"],"mappings":";;;;;QAGgBA,G,GAAAA,G;AAHhB;AACA,MAAMC,SAASC,QAAQ,SAAR,CAAf;;AAEO,SAASF,GAAT,CAAcG,IAAd,EAAoB;AACzB,MAAIC,UAAW,GAAED,KAAKE,IAAK,KAAIF,KAAKG,IAAK,cAAaH,KAAKI,MAAO,EAAlE;;AAEA,MAAIJ,KAAKE,IAAL,KAAc,OAAlB,EAA2B;AACzBD,eAAY,KAAID,KAAKK,KAAL,CAAWJ,OAAQ,EAAnC;AACD;;AAED,MAAID,KAAKK,KAAT,EAAgB;AACdP,WAAOO,KAAP,CAAaJ,OAAb;AACD,GAFD,MAEO;AACLH,WAAOQ,KAAP,CAAaL,OAAb;AACD;;AAEDH,SAAOS,KAAP,CAAa,WAAb,EAA0BP,KAAKQ,IAA/B;AACAV,SAAOS,KAAP,CAAa,aAAb,EAA4BP,KAAKS,MAAjC;;AAEA,MAAIT,KAAKU,MAAT,EAAiB;AACfZ,WAAOS,KAAP,CAAa,aAAb,EAA4BP,KAAKU,MAAjC;AACD;AACF","file":"logger.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/hooks","sourcesContent":["// A hook that logs service method before, after and error\nconst logger = require('winston')\n\nexport function log (hook) {\n  let message = `${hook.type}: ${hook.path} - Method: ${hook.method}`\n\n  if (hook.type === 'error') {\n    message += `: ${hook.error.message}`\n  }\n\n  if (hook.error) {\n    logger.error(message)\n  } else {\n    logger.debug(message)\n  }\n\n  logger.silly('hook.data', hook.data)\n  logger.silly('hook.params', hook.params)\n\n  if (hook.result) {\n    logger.silly('hook.result', hook.result)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f3612fed47233bc7cf49fc8cceacb62a55a10b18","contentHash":"b315cb6b1d041895cdfe373c3e58f306192b4ab538aa0204a2a720187319944a"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/models/forecasts.model.mongodb.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/models/forecasts.model.mongodb.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":6,"column":2}},"1":{"start":{"line":4,"column":2},"end":{"line":4,"column":65}},"2":{"start":{"line":5,"column":2},"end":{"line":5,"column":59}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":17},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":41},"end":{"line":6,"column":1}},"line":3}},"branchMap":{},"s":{"0":1,"1":2,"2":2},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"sources":["forecasts.model.mongodb.js"],"names":["module","exports","app","options","Model","db","collection","dbName","createIndex","name","unique"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AACvCA,UAAQC,KAAR,GAAgBF,IAAIG,EAAJ,CAAOC,UAAP,CAAkB,WAAlB,EAA+BH,QAAQI,MAAvC,CAAhB;AACAJ,UAAQC,KAAR,CAAcI,WAAd,CAA0B,EAAEC,MAAM,CAAR,EAA1B,EAAuC,EAAEC,QAAQ,IAAV,EAAvC;AACD,CAHD","file":"forecasts.model.mongodb.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/models","sourcesContent":["module.exports = function (app, options) {\n  options.Model = app.db.collection('forecasts', options.dbName)\n  options.Model.createIndex({ name: 1 }, { unique: true })\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7dd0ed013619f7b7d202b3800a206db97b78d5ea","contentHash":"de79fb3cbd4226ad2d9c7e392de28b8b358eea1eb9d2a38088b781eb1823cd22"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/services/forecasts/forecasts.hooks.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/services/forecasts/forecasts.hooks.js","statementMap":{"0":{"start":{"line":3,"column":27},"end":{"line":3,"column":59}},"1":{"start":{"line":5,"column":13},"end":{"line":5,"column":35}},"2":{"start":{"line":7,"column":12},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":40},"end":{"line":9,"column":267}},"4":{"start":{"line":9,"column":69},"end":{"line":9,"column":80}},"5":{"start":{"line":9,"column":103},"end":{"line":9,"column":105}},"6":{"start":{"line":9,"column":107},"end":{"line":9,"column":228}},"7":{"start":{"line":9,"column":126},"end":{"line":9,"column":226}},"8":{"start":{"line":9,"column":149},"end":{"line":9,"column":224}},"9":{"start":{"line":9,"column":201},"end":{"line":9,"column":224}},"10":{"start":{"line":9,"column":229},"end":{"line":9,"column":250}},"11":{"start":{"line":9,"column":251},"end":{"line":9,"column":265}},"12":{"start":{"line":11,"column":0},"end":{"line":41,"column":2}}},"fnMap":{"0":{"name":"_interopRequireWildcard","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":32}},"loc":{"start":{"line":9,"column":38},"end":{"line":9,"column":269}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":40},"end":{"line":9,"column":267}},"type":"if","locations":[{"start":{"line":9,"column":40},"end":{"line":9,"column":267}},{"start":{"line":9,"column":40},"end":{"line":9,"column":267}}],"line":9},"1":{"loc":{"start":{"line":9,"column":44},"end":{"line":9,"column":65}},"type":"binary-expr","locations":[{"start":{"line":9,"column":44},"end":{"line":9,"column":47}},{"start":{"line":9,"column":51},"end":{"line":9,"column":65}}],"line":9},"2":{"loc":{"start":{"line":9,"column":107},"end":{"line":9,"column":228}},"type":"if","locations":[{"start":{"line":9,"column":107},"end":{"line":9,"column":228}},{"start":{"line":9,"column":107},"end":{"line":9,"column":228}}],"line":9},"3":{"loc":{"start":{"line":9,"column":149},"end":{"line":9,"column":224}},"type":"if","locations":[{"start":{"line":9,"column":149},"end":{"line":9,"column":224}},{"start":{"line":9,"column":149},"end":{"line":9,"column":224}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"f":{"0":1},"b":{"0":[1,0],"1":[1,1],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"sources":["forecasts.hooks.js"],"names":["hooks","module","exports","before","all","find","get","create","update","patch","remove","after","skipEvents","error"],"mappings":";;AAAA;;AACA;;IAAYA,K;;;;AAEZC,OAAOC,OAAP,GAAiB;AACfC,UAAQ;AACNC,SAAK,EADC;AAENC,UAAM,EAFA;AAGNC,SAAK,EAHC;AAINC,YAAQ,mCAAS,UAAT,CAJF;AAKNC,YAAQ,mCAAS,UAAT,CALF;AAMNC,WAAO,mCAAS,UAAT,CAND;AAONC,YAAQ,mCAAS,UAAT;AAPF,GADO;;AAWfC,SAAO;AACLP,SAAK,CAACJ,MAAMY,UAAP,CADA;AAELP,UAAM,EAFD;AAGLC,SAAK,EAHA;AAILC,YAAQ,EAJH;AAKLC,YAAQ,EALH;AAMLC,WAAO,EANF;AAOLC,YAAQ;AAPH,GAXQ;;AAqBfG,SAAO;AACLT,SAAK,EADA;AAELC,UAAM,EAFD;AAGLC,SAAK,EAHA;AAILC,YAAQ,EAJH;AAKLC,YAAQ,EALH;AAMLC,WAAO,EANF;AAOLC,YAAQ;AAPH;AArBQ,CAAjB","file":"forecasts.hooks.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/services/forecasts","sourcesContent":["import { disallow } from 'feathers-hooks-common'\nimport * as hooks from '../../hooks'\n\nmodule.exports = {\n  before: {\n    all: [],\n    find: [],\n    get: [],\n    create: disallow('external'),\n    update: disallow('external'),\n    patch: disallow('external'),\n    remove: disallow('external')\n  },\n\n  after: {\n    all: [hooks.skipEvents],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  error: {\n    all: [],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bb8f01790c34f688cd1cf4ab37de3e39cba8e6bf","contentHash":"9c4ce7653698c68630c3f05a8d02eb4e88211923f6a211206509f472ba2b03ef"},"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/models/elements.model.mongodb.js":{"path":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/models/elements.model.mongodb.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":18,"column":2}},"1":{"start":{"line":4,"column":2},"end":{"line":4,"column":125}},"2":{"start":{"line":7,"column":19},"end":{"line":7,"column":87}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":123}},"4":{"start":{"line":9,"column":53},"end":{"line":9,"column":123}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":85}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":54}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":45}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":44}},"9":{"start":{"line":17,"column":2},"end":{"line":17,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":17},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":60},"end":{"line":18,"column":1}},"line":3}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":72},"end":{"line":4,"column":123}},"type":"binary-expr","locations":[{"start":{"line":4,"column":72},"end":{"line":4,"column":86}},{"start":{"line":4,"column":90},"end":{"line":4,"column":105}},{"start":{"line":4,"column":109},"end":{"line":4,"column":123}}],"line":4},"1":{"loc":{"start":{"line":7,"column":19},"end":{"line":7,"column":87}},"type":"binary-expr","locations":[{"start":{"line":7,"column":19},"end":{"line":7,"column":30}},{"start":{"line":7,"column":34},"end":{"line":7,"column":46}},{"start":{"line":7,"column":50},"end":{"line":7,"column":66}},{"start":{"line":7,"column":70},"end":{"line":7,"column":87}}],"line":7},"2":{"loc":{"start":{"line":9,"column":2},"end":{"line":9,"column":123}},"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":123}},{"start":{"line":9,"column":2},"end":{"line":9,"column":123}}],"line":9},"3":{"loc":{"start":{"line":9,"column":6},"end":{"line":9,"column":51}},"type":"binary-expr","locations":[{"start":{"line":9,"column":6},"end":{"line":9,"column":26}},{"start":{"line":9,"column":30},"end":{"line":9,"column":51}}],"line":9},"4":{"loc":{"start":{"line":9,"column":67},"end":{"line":9,"column":122}},"type":"binary-expr","locations":[{"start":{"line":9,"column":67},"end":{"line":9,"column":92}},{"start":{"line":9,"column":96},"end":{"line":9,"column":122}}],"line":9}},"s":{"0":1,"1":3,"2":3,"3":3,"4":0,"5":3,"6":3,"7":3,"8":3,"9":3},"f":{"0":3},"b":{"0":[3,3,3],"1":[3,3,3,3],"2":[0,3],"3":[3,3],"4":[0,0]},"inputSourceMap":{"version":3,"sources":["elements.model.mongodb.js"],"names":["module","exports","forecast","element","app","options","Model","db","collection","name","dbName","expiration","ttl","interval","keepPastRuns","oldestRunInterval","createIndex","forecastTime","expireAfterSeconds","geometry","x","y"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAAUC,QAAV,EAAoBC,OAApB,EAA6BC,GAA7B,EAAkCC,OAAlC,EAA2C;AAC1DA,UAAQC,KAAR,GAAgBF,IAAIG,EAAJ,CAAOC,UAAP,CAAmB,GAAEN,SAASO,IAAK,IAAGN,QAAQM,IAAK,EAAnD,EAAsDN,QAAQO,MAAR,IAAkBR,SAASQ,MAA3B,IAAqCL,QAAQK,MAAnG,CAAhB;AACA;AACA;AACA,MAAIC,aAAaR,QAAQS,GAAR,IAAeV,SAASU,GAAxB,IAA+BT,QAAQU,QAAvC,IAAmDX,SAASW,QAA7E;AACA;AACA,MAAIV,QAAQW,YAAR,IAAwBZ,SAASY,YAArC,EAAmDH,cAAcR,QAAQY,iBAAR,IAA6Bb,SAASa,iBAApD;AACnD;AACAV,UAAQC,KAAR,CAAcU,WAAd,CAA0B,EAAEC,cAAc,CAAhB,EAA1B,EAA+C,EAAEC,oBAAoBP,UAAtB,EAA/C;AACA;AACAN,UAAQC,KAAR,CAAcU,WAAd,CAA0B,EAAEG,UAAU,UAAZ,EAA1B;AACA;AACAd,UAAQC,KAAR,CAAcU,WAAd,CAA0B,EAAEG,UAAU,CAAZ,EAA1B;AACAd,UAAQC,KAAR,CAAcU,WAAd,CAA0B,EAAEI,GAAG,CAAL,EAAQC,GAAG,CAAX,EAA1B;AACAhB,UAAQC,KAAR,CAAcU,WAAd,CAA0B,EAAEC,cAAc,CAAhB,EAAmBE,UAAU,CAA7B,EAA1B;AACD,CAfD","file":"elements.model.mongodb.js","sourceRoot":"/home/daffl/Feathers/Kalisio/weacast/packages/core/src/models","sourcesContent":["module.exports = function (forecast, element, app, options) {\n  options.Model = app.db.collection(`${forecast.name}-${element.name}`, element.dbName || forecast.dbName || options.dbName)\n  // When a forecast is in the past we should not care anymore,\n  // however it is still potentially valid at least until we reach the next forecast\n  let expiration = element.ttl || forecast.ttl || element.interval || forecast.interval\n  // Extend the expiration period if we need to keep past data\n  if (element.keepPastRuns || forecast.keepPastRuns) expiration += element.oldestRunInterval || forecast.oldestRunInterval\n  // Nota : adding a unique constraint on the field causes TTL not to work\n  options.Model.createIndex({ forecastTime: 1 }, { expireAfterSeconds: expiration })\n  // To perform geo queries on tiles\n  options.Model.createIndex({ geometry: '2dsphere' })\n  // To perform $exists requests\n  options.Model.createIndex({ geometry: 1 })\n  options.Model.createIndex({ x: 1, y: 1 })\n  options.Model.createIndex({ forecastTime: 1, geometry: 1 })\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"171d5c50bafaf22a8ccae92bf18516ebd3e47c26","contentHash":"2478223c3136c9e3270bb661aff6a394af229fb814808ff659839aaf5135abfa"}}