import{_ as i,c as a,o as s,ak as e}from"./chunks/framework.B3JW-Vb0.js";const c=JSON.parse('{"title":"Grid","description":"","frontmatter":{},"headers":[],"relativePath":"api/grid.md","filePath":"api/grid.md"}'),t={name:"api/grid.md"},n=e(`<h1 id="grid" tabindex="-1">Grid <a class="header-anchor" href="#grid" aria-label="Permalink to &quot;Grid&quot;">​</a></h1><p>Most forecast data are distributed as gridded data, which is two-dimensional data representing a forecast element value along an evenly spaced matrix of geographical positions. Usually, the grid has a longitude (x-axis or width) and a latitude (y-axis or height) dimension and is computed using the <a href="https://en.wikipedia.org/wiki/Equirectangular_projection" target="_blank" rel="noreferrer">Equirectangular projection</a> with a constant spacing called the <strong>resolution</strong> of the grid.</p><blockquote><p>The values of the element are assumed to be the one measured at the grid vertices.</p></blockquote><p>You can use the <strong>Grid</strong> class to compute forecast element value at any location from input gridded data (a process called <a href="https://en.wikipedia.org/wiki/Bilinear_interpolation" target="_blank" rel="noreferrer">interpolation</a>) like this:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      bounds: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      origin: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      size: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resolution: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grid.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">interpolate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(longitude, latitude)</span></span></code></pre></div><h2 id="grid-api" tabindex="-1">Grid API <a class="header-anchor" href="#grid-api" aria-label="Permalink to &quot;Grid API&quot;">​</a></h2><h3 id="grid-options" tabindex="-1">Grid(options) <a class="header-anchor" href="#grid-options" aria-label="Permalink to &quot;Grid(options)&quot;">​</a></h3><p>Constructor of a grid object, required properties of the <strong>options</strong> object are the following:</p><ul><li><strong>bounds</strong> : the geographical bounds covered by the grid as an array of decimal values <code>[min longitude, min latitude, max longitude, max latitude]</code>,</li><li><strong>origin</strong> : the geographical origin of the data grid as an array of decimal values <code>[longitude origin, latitude origin]</code>,</li><li><strong>size</strong> : the size of the data grid as an array of integer values <code>[width, height]</code>,</li><li><strong>resolution</strong> : the geographical resolution of the data grid as an array of decimal values <code>[longitude resolution, latitude resolution]</code></li><li><strong>data</strong> : the gridded data as a JavaScript array</li></ul><h3 id="interpolate-longitude-latitude" tabindex="-1">.interpolate(longitude, latitude) <a class="header-anchor" href="#interpolate-longitude-latitude" aria-label="Permalink to &quot;.interpolate(longitude, latitude)&quot;">​</a></h3><p>Return the interpolated value at given longitude (in range [-180, 180]) and latitude (in range [-90, 90])</p><h3 id="resample-origin-resolution-size" tabindex="-1">.resample(origin, resolution, size) <a class="header-anchor" href="#resample-origin-resolution-size" aria-label="Permalink to &quot;.resample(origin, resolution, size)&quot;">​</a></h3><p>Return the interpolated values for a new grid defined by:</p><ul><li><strong>origin</strong> : the geographical origin of the data grid as an array of decimal values <code>[longitude origin, latitude origin]</code>,</li><li><strong>size</strong> : the size of the data grid as an array of integer values <code>[width, height]</code>,</li><li><strong>resolution</strong> : the geographical resolution of the data grid as an array of decimal values <code>[longitude resolution, latitude resolution]</code></li></ul>`,14),r=[n];function l(o,h,d,p,g,k){return s(),a("div",null,r)}const E=i(t,[["render",l]]);export{c as __pageData,E as default};
