(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{618:function(t,a,e){"use strict";e.r(a);var s=e(22),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"grid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grid"}},[t._v("#")]),t._v(" Grid")]),t._v(" "),e("p",[t._v("Most forecast data are distributed as gridded data, which is two-dimensional data representing a forecast element value along an evenly spaced matrix of geographical positions. Usually, the grid has a longitude (x-axis or width) and a latitude (y-axis or height) dimension and is computed using the "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Equirectangular_projection",target:"_blank",rel:"noopener noreferrer"}},[t._v("Equirectangular projection"),e("OutboundLink")],1),t._v(" with a constant spacing called the "),e("strong",[t._v("resolution")]),t._v(" of the grid.")]),t._v(" "),e("blockquote",[e("p",[t._v("The values of the element are assumed to be the one measured at the grid vertices.")])]),t._v(" "),e("p",[t._v("You can use the "),e("strong",[t._v("Grid")]),t._v(" class to compute forecast element value at any location from input gridded data (a process called "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Bilinear_interpolation",target:"_blank",rel:"noopener noreferrer"}},[t._v("interpolation"),e("OutboundLink")],1),t._v(") like this:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" grid "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Grid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("bounds")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("origin")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("size")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("resolution")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      data\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" grid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("interpolate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("longitude"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" latitude"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"grid-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grid-api"}},[t._v("#")]),t._v(" Grid API")]),t._v(" "),e("h3",{attrs:{id:"grid-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grid-options"}},[t._v("#")]),t._v(" Grid(options)")]),t._v(" "),e("p",[t._v("Constructor of a grid object, required properties of the "),e("strong",[t._v("options")]),t._v(" object are the following:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("bounds")]),t._v(" : the geographical bounds covered by the grid as an array of decimal values "),e("code",[t._v("[min longitude, min latitude, max longitude, max latitude]")]),t._v(",")]),t._v(" "),e("li",[e("strong",[t._v("origin")]),t._v(" : the geographical origin of the data grid as an array of decimal values "),e("code",[t._v("[longitude origin, latitude origin]")]),t._v(",")]),t._v(" "),e("li",[e("strong",[t._v("size")]),t._v(" : the size of the data grid as an array of integer values "),e("code",[t._v("[width, height]")]),t._v(",")]),t._v(" "),e("li",[e("strong",[t._v("resolution")]),t._v(" : the geographical resolution of the data grid as an array of decimal values "),e("code",[t._v("[longitude resolution, latitude resolution]")])]),t._v(" "),e("li",[e("strong",[t._v("data")]),t._v(" : the gridded data as a JavaScript array")])]),t._v(" "),e("h3",{attrs:{id:"interpolate-longitude-latitude"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#interpolate-longitude-latitude"}},[t._v("#")]),t._v(" .interpolate(longitude, latitude)")]),t._v(" "),e("p",[t._v("Return the interpolated value at given longitude (in range [-180, 180]) and latitude (in range [-90, 90])")]),t._v(" "),e("h3",{attrs:{id:"resample-origin-resolution-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#resample-origin-resolution-size"}},[t._v("#")]),t._v(" .resample(origin, resolution, size)")]),t._v(" "),e("p",[t._v("Return the interpolated values for a new grid defined by:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("origin")]),t._v(" : the geographical origin of the data grid as an array of decimal values "),e("code",[t._v("[longitude origin, latitude origin]")]),t._v(",")]),t._v(" "),e("li",[e("strong",[t._v("size")]),t._v(" : the size of the data grid as an array of integer values "),e("code",[t._v("[width, height]")]),t._v(",")]),t._v(" "),e("li",[e("strong",[t._v("resolution")]),t._v(" : the geographical resolution of the data grid as an array of decimal values "),e("code",[t._v("[longitude resolution, latitude resolution]")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);